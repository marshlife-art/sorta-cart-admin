{"version":3,"sources":["redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","theme.tsx","listItems.tsx","constants.ts","redux/session/actions.ts","redux/preferences/actions.ts","Loading.tsx","dashboard/Title.tsx","dashboard/Orders.tsx","dashboard/WholesaleOrders.tsx","dashboard/Members.tsx","dashboard/Dashboard.tsx","auth/Login.tsx","auth/Register.tsx","auth/ProtectedRoute.tsx","pages/usePageService.ts","pages/EditPageMenu.tsx","pages/EditPage.tsx","pages/Pages.tsx","orders/OrderDetailPanel.tsx","orders/Orders.tsx","wholesaleorders/useWholesaleOrderService.ts","wholesaleorders/EditMenu.tsx","wholesaleorders/WholesaleOrderLineItems.tsx","wholesaleorders/EditWholesaleOrder.tsx","wholesaleorders/AddWholesaleOrderLineItems.tsx","wholesaleorders/WholesaleOrders.tsx","users/NewUserModal.tsx","users/UserRolesMenu.tsx","users/Users.tsx","products/Products.tsx","products/ImportProducts.tsx","orders/useOrderService.ts","orders/OrderLineItems.tsx","orders/LineItemAutocomplete.tsx","orders/MemberAutocomplete.tsx","orders/EditOrder.tsx","members/Members.tsx","members/EditMember.tsx","App.tsx","index.tsx"],"names":["combineReducers","userService","state","isFetching","action","type","user","error","undefined","preferencesService","preferences","createStore","session","applyMiddleware","thunk","darkTheme","createMuiTheme","palette","primary","main","secondary","red","A400","lightTheme","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","ListSubheader","inset","API_HOST","TAX_RATE","TAX_RATE_STRING","toFixed","ORDER_STATUSES","new","needs_review","pending","complete","void","archived","PAYMENT_STATUSES","balance_due","paid","credit_owed","failed","SHIPMENT_STATUSES","backorder","ready","shipped","partial","canceled","APP_VERSION","process","npm_package_version","require","version","set","setError","NULL_USER","id","email","token","DEFAULT_PREFERENCES","dark_mode","Loading","Container","fixed","Box","pt","style","textAlign","Title","props","Typography","variant","color","gutterBottom","children","useStyles","makeStyles","theme","seeMore","marginTop","spacing","rowHover","backgroundColor","background","default","cursor","withRouter","classes","localStorage","getItem","useState","data","page","totalCount","orders","setOrders","useEffect","fetch","method","headers","Authorization","body","JSON","stringify","pageSize","then","response","json","catch","err","console","warn","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","order","key","className","onClick","history","push","createdAt","Date","toLocaleString","status","name","item_count","subtotal","total","Button","event","vendor","payment_status","shipment_status","members","setMembers","member","registration_email","fees_paid","root","padding","minHeight","item","paper","display","overflowX","flexDirection","fixedHeight","height","Dashboard","fixedHeightPaper","clsx","Grid","container","xs","md","Paper","form","width","justifyContent","title","alignItems","submit","margin","connect","states","ownProps","dispatch","login","password","a","async","Promise","resolve","msg","setItem","reason","message","e","log","finally","role","maxWidth","onSubmit","preventDefault","target","currentTarget","emailEl","elements","namedItem","passwordEl","value","length","TextField","label","autoFocus","fullWidth","required","disabled","register","regKey","regKeyParam","URLSearchParams","useLocation","search","get","passwordConfirmEl","regKeyEl","ProtectedRoute","Component","rest","render","isAdmin","pathname","from","location","usePageService","slug","setLoading","result","setResult","payload","useAllPagesService","reloadPages","setReloadPages","rows","usePageSaveService","doSave","setDoSave","setSnackMsg","setSnackOpen","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","withStyles","common","white","MenuItem","EditPageMenu","React","anchorEl","setAnchorEl","handleClose","ButtonGroup","aria-label","onSaveBtnClick","aria-controls","aria-haspopup","keepMounted","open","Boolean","onClose","window","confirm","onDeleteBtnClick","fontSize","createStyles","row","pageName","marginBottom","marginRight","pageSlug","setPageSlug","content","setPage","loading","pageService","snackOpen","snackMsg","handleSnackClose","match","params","onChange","prevPage","replace","multiline","rowsMax","Snackbar","autoHideDuration","ContentProps","IconButton","titleText","flexGrow","text","Default","pages","setPages","allPages","direction","justify","sm","lg","List","Divider","idx","path","exact","EditPage","borderLeft","divider","gridHeading","gridItem","paddingBottom","paddingLeft","paddingRight","lastUpdated","marginLeft","OrderDetailPanel","line_items","OrderLineItems","adjustments","filter","li","kind","scope","description","product","unf","price","selected_unit","quantity","colSpan","href","phone","address","User","Member","notes","updatedAt","tableRef","createRef","searchExpanded","setSearchExpanded","isSelecting","setIsSelecting","searchAction","icon","tooltip","isFreeAction","newOrderAction","printAction","orderIds","wOpen","document","innerHTML","editAction","actions","setActions","columns","field","filtering","lookup","hidden","query","reject","detailPanel","onRowClick","rowData","togglePanel","options","headerStyle","position","top","maxBodyHeight","pageSizeOptions","debounceInterval","emptyRowsWhenPaging","selection","onSelectionChange","blankWholesaleOrder","useWholesaleOrderService","reload","setReload","useAllWholesaleOrdersService","reloadWholesaleOrders","setReloadWholesaleOrders","useWholesaleOrderSaveService","wholesaleOrder","EditMenu","onProductsExportToCsv","liTable","deleteBtn","minWidth","groupedRow","groupedRowTotals","typography","h6","lineItems","lineItemData","setLineItemData","groupedLineItems","prevData","productTotal","adjustmentTotal","orderTotal","forEach","acc","qty","pk","liTotal","parseFloat","ws_price_cost","qtySum","totalSum","Object","values","reduce","v","Math","abs","u_price_cost","round","Tooltip","ids","removeLineItem","upc_code","category","sub_category","ws_price","u_price","import_tag","OrderId","keys","editMenu","wholesaleOrderId","setWholesaleOrderId","setWholesaleOrder","wholesaleOrderService","valueFor","prevOrder","FormControl","InputLabel","Select","labelId","setReloadOrders","onExportToCsv","Accept","responseText","filename","navigator","msSaveBlob","blobObject","Blob","anchor","createElement","download","URL","createObjectURL","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","saveStreamCSV","AddWholesaleOrderLineItems","needsRefresh","setNeedsRefresh","refreshTable","useCallback","current","onQueryChange","selectedLineItems","setSelectedLineItems","addAction","handleWholesaleOrderMenuOpen","Array","isArray","wholesaleorderLookup","setWholesaleOrderLookup","toLocaleDateString","wholesaleorderMenuAnchorEl","setWholesaleOrderMenuAnchorEl","handleWholesaleOrderMenuClose","handleWholesaleOrderSelect","filterPlaceholder","wholesaleorder","ExpansionPanel","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","paperNav","list","selectedListItem","noOrdersMsg","wholesaleOrders","setWholesaleOrders","reloadOrders","selectedStatus","setSelectedStatus","allWholesaleOrders","split","reverse","isNaN","parseInt","square","defaultExpanded","loadOrdersForStatus","expandIcon","modal","shadows","ROLES","NewUserModal","setEmail","setRole","setDiabled","includes","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","handleRefresh","UserRolesMenu","handleRoleChange","resp","newUserModalOpen","setNewUserModalOpen","newUserAction","deleteAction","alert","PROPERTY_MAP","c","d","f","g","k","l","m","og","r","w","ft","n","s","y","1","2","3","Products","p","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","setVendorLookup","vendorLookup","CS","EA","codes","code","Chip","zIndex","ImportProducts","setVendor","importTag","setImportTag","prevImportTag","setPrevImportTag","markup","setMarkup","formData","setFormData","setResponse","setImportTagsLookup","importTagsLookup","vendorMenuAnchorEl","setVendorMenuAnchorEl","handleVendorMenuClose","helperText","handleVendorSelect","tag","FormHelperText","inputProps","min","max","step","accept","files","FormData","append","delete","toString","useOrderService","table","borderCollapse","qtyinput","usdFormat","num","line_item","orderSubtotal","sum","i","orderAdjustmentsTotal","items","adjustmentsTotal","orderTaxes","onTaxesChange","onTotalChange","onSubTotalChange","handleQtyChange","indexOf","onLineItemUpdated","payments","pksize","join","liPkSize","unit","handleUnitChange","unit_type","InputLabelProps","shrink","rowSpan","handleDescriptionChange","handlePriceChange","InputProps","startAdornment","InputAdornment","LineItemAutocomplete","setOpen","setOptions","q","setQ","active","products","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onItemSelected","freeSolo","renderInput","endAdornment","CircularProgress","MemberAutocomplete","blankOrder","formInput","liHeader","sticky","breakpoints","up","saveBtn","orderId","setOrderId","setOrder","saving","setSaving","showLiAutocomplete","setShowLiAutocomplete","showMemberAutocomplete","setShowMemberAutocomplete","needToCheckForDiscounts","setNeedToCheckForDiscounts","canApplyMemberDiscount","setCanApplyMemberDiscount","orderService","_order","discount","pOrderId","UserId","discountAmt","canDiscount","discountPrice","discounts","updateLineItem","adjustment","orderLineItems","splice","shouldShowAddMemberDiscount","MemberId","success","discount_type","store_credit","noValidate","autoComplete","persist","lineItem","tax","notTaxLineItems","newMemberAction","blankMember","shares","member_type","loadingMember","setLoadingMember","memberId","setMember","filters","column","prevMember","submitData","nav","speedDial","left","transition","drawer","flexShrink","drawerPaper","fontStyle","alignSelf","checkSession","getPreferences","rject","parse","setPreferences","logout","removeItem","useDarkTheme","setUseDarkTheme","ThemeProvider","CssBaseline","Fab","Drawer","prev","checked","Login","Register","Orders","EditOrder","WholesaleOrders","Users","Members","EditMember","Pages","ReactDOM","store","querySelector"],"mappings":"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","file":"static/js/main.1de3ab8c.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\nexport { darkTheme, lightTheme }\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport PeopleIcon from '@material-ui/icons/People'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products\">\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/import\">\n      <ListItemIcon>\n        <OpenInBrowserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Import Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/orders\">\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/wholesaleorders\">\n      <ListItemIcon>\n        <LocalShippingIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Wholesale Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/users\">\n      <ListItemIcon>\n        <TagFacesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/members\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Members\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/pages\">\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pages\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n","import { OrderStatus, PaymentStatus, ShipmentStatus } from './types/Order'\n\nexport const API_HOST =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n\nexport const TAX_RATE = 0.06175\nexport const TAX_RATE_STRING = `${(TAX_RATE * 100).toFixed(3)}%`\n\ntype OrderStatusLookup = { [key in OrderStatus]: string }\nexport const ORDER_STATUSES: OrderStatusLookup = {\n  new: 'new',\n  needs_review: 'needs review',\n  pending: 'pending',\n  complete: 'complete',\n  void: 'void',\n  archived: 'archived'\n}\n\ntype OrderPaymentStatusLookup = { [key in PaymentStatus]: string }\nexport const PAYMENT_STATUSES: OrderPaymentStatusLookup = {\n  balance_due: 'balance due',\n  paid: 'paid',\n  credit_owed: 'credit owed',\n  failed: 'failed',\n  void: 'void'\n}\n\ntype OrderShipmentStatusLookup = { [key in ShipmentStatus]: string }\nexport const SHIPMENT_STATUSES: OrderShipmentStatusLookup = {\n  backorder: 'backorder',\n  pending: 'pending',\n  ready: 'ready',\n  shipped: 'shipped',\n  partial: 'partial',\n  canceled: 'canceled'\n}\n\nexport const APP_VERSION = `v${process.env.npm_package_version ||\n  require('../package.json').version} made with ♥ in NYC`\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { User, LoginError } from '../../types/User'\nimport { API_HOST } from '../../constants'\n\nexport interface SetAction {\n  type: 'SET'\n  user: User\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR'\n  error: LoginError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (user: User): SetAction => {\n  return { type: 'SET', user }\n}\nexport const setError = (error: LoginError): SetError => {\n  return { type: 'SET_ERROR', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING', isFetching }\n}\n\nconst NULL_USER: User = {\n  id: undefined,\n  email: undefined,\n  token: undefined\n}\n\nexport const checkSession = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      const token = localStorage && localStorage.getItem('token')\n\n      if (!token) {\n        // reject('no token')\n        dispatch(isFetching(false))\n        dispatch(set({ email: undefined, token: undefined }))\n        resolve()\n        return\n      }\n\n      fetch(`${API_HOST}/check_session`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('check_session', response)\n          if (response.msg === 'ok' && response.user) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(set(NULL_USER))\n          }\n        })\n        .catch(err => {\n          console.warn('check_session caught err:', err)\n          // hmm, maybe the API is just down? ...is it really necessary to NULL the user?\n          dispatch(set(NULL_USER))\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const register = (\n  regKey: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ regKey, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('register error:', e)\n          dispatch(\n            setError({\n              error: 'error',\n              reason: 'unable to register right now :('\n            })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('login error:', e)\n          dispatch(\n            setError({ error: 'error', reason: 'unable to login right now :(' })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      const token = localStorage && localStorage.getItem('token')\n      fetch(`${API_HOST}/logout`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .catch(console.warn)\n        .finally(() => {\n          localStorage && localStorage.removeItem('token')\n          dispatch(set(NULL_USER))\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'true'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n\nexport const setPreferences = (\n  preferences: Preferences\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        localStorage &&\n          localStorage.setItem('preferences', JSON.stringify(preferences))\n        dispatch(set(preferences))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React from 'react'\nimport { Container } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nexport default function Loading() {\n  return (\n    <Container fixed>\n      <Box pt={4} style={{ textAlign: 'center' }}>\n        L O A D I N G . . .\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: { children: React.ReactNode }) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Order } from '../types/Order'\n\ninterface OrderData {\n  data: Order[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orders, setOrders] = useState<OrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setOrders &&\n      fetch(`${API_HOST}/orders`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then(response => response.json())\n        .then(setOrders)\n        .catch(err => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setOrders])\n\n  return (\n    <React.Fragment>\n      <Title>recent orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>status</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map(order => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/orders/edit/${order.id}`)}\n            >\n              <TableCell>\n                {order.createdAt && new Date(order.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{order.status}</TableCell>\n              <TableCell>{order.name}</TableCell>\n              <TableCell>{order.email}</TableCell>\n              <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/orders')\n          }}\n        >\n          SEE MORE ORDERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Orders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\ninterface WholesaleOrderData {\n  data: WholesaleOrder[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction WholesaleOrders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orders, setOrders] = useState<WholesaleOrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then(response => response.json())\n        .then(setOrders)\n        .catch(err => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setOrders])\n\n  return (\n    <React.Fragment>\n      <Title>recent wholesale orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>vendor</TableCell>\n            <TableCell>status</TableCell>\n            <TableCell>payment status</TableCell>\n            <TableCell>shipment status</TableCell>\n            {/* <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map(order => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() =>\n                props.history.push(`/wholesaleorders/edit/${order.id}`)\n              }\n            >\n              <TableCell>\n                {order.createdAt && new Date(order.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{order.vendor}</TableCell>\n              <TableCell>{order.status}</TableCell>\n              <TableCell>{order.payment_status}</TableCell>\n              <TableCell>{order.shipment_status}</TableCell>\n              {/* <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/wholesaleorders')\n          }}\n        >\n          SEE MORE\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(WholesaleOrders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Member } from '../types/Member'\n\ninterface MemberData {\n  data: Member[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Members(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [members, setMembers] = useState<MemberData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setMembers &&\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then(response => response.json())\n        .then(setMembers)\n        .catch(err => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setMembers])\n\n  return (\n    <React.Fragment>\n      <Title>recent members</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell align=\"right\">fees_paid</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {members.data.map(member => (\n            <TableRow\n              key={member.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/members/${member.id}`)}\n            >\n              <TableCell>\n                {member.createdAt &&\n                  new Date(member.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{member.name}</TableCell>\n              <TableCell>{member.registration_email}</TableCell>\n              <TableCell align=\"right\">{member.fees_paid}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/members')\n          }}\n        >\n          SEE ALL MEMBERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Members)\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nimport Orders from './Orders'\nimport WholesaleOrders from './WholesaleOrders'\nimport Members from './Members'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: '100vh'\n  },\n  item: {\n    // zIndex: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflowX: 'hidden',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} className={classes.item}>\n          <Paper className={fixedHeightPaper}>\n            <WholesaleOrders />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.item}>\n          <Paper className={fixedHeightPaper}>\n            <Members />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} className={classes.item}>\n          <Paper className={classes.paper}>\n            <Orders />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { login } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  login: (email: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction Login(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n    const emailEl = target.elements.namedItem('email') as HTMLInputElement\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n\n    if (\n      emailEl &&\n      emailEl.value.length > 0 &&\n      passwordEl &&\n      passwordEl.value.length > 0\n    ) {\n      props.login(emailEl.value, passwordEl.value)\n    }\n  }\n\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={doLogin} className={classes.form}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" display=\"block\">\n            MARSH COOP\n          </Typography>\n          <Typography variant=\"overline\" display=\"inline\">\n            admin\n          </Typography>\n        </div>\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoFocus\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps, useLocation } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { register } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  register: (regKey: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    // minHeight: 'calc(100vh - 64px)'\n  },\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nfunction Register(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n    const passwordConfirmEl = target.elements.namedItem(\n      'password_confirm'\n    ) as HTMLInputElement\n\n    let regKey: string = ''\n\n    if (regKeyParam) {\n      regKey = regKeyParam\n    }\n\n    if (!regKey) {\n      const regKeyEl = target.elements.namedItem('regKey') as HTMLInputElement\n      if (regKeyEl && regKeyEl.value.length > 1) {\n        regKey = regKeyEl.value\n      }\n    }\n\n    if (!regKey) {\n      setError('no registration key')\n    }\n\n    if (\n      passwordEl &&\n      passwordEl.value.length > 0 &&\n      passwordConfirmEl &&\n      passwordConfirmEl.value.length > 0\n    ) {\n      if (passwordConfirmEl.value !== passwordEl.value) {\n        setError('passwords do not match')\n      } else {\n        props.register(regKey, passwordConfirmEl.value)\n      }\n    }\n  }\n\n  let query = useQuery()\n  const regKeyParam = query.get('regKey')\n  console.log('[Register] regKeyParam', regKeyParam)\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={doLogin} className={classes.form}>\n        {!regKeyParam && (\n          <TextField\n            label=\"registration key\"\n            name=\"regKey\"\n            type=\"text\"\n            autoFocus\n            fullWidth\n            required\n          />\n        )}\n\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoFocus={!!regKeyParam}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password_confirm\"\n          name=\"password_confirm\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            submit\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    register: (regKey, password) => dispatch(register(regKey, password))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Register))\n","import React from 'react'\nimport { RouteProps, Redirect, Route } from 'react-router-dom'\n\nimport { UserServiceProps, UserService } from '../redux/session/reducers'\n\nconst isAdmin = (userService: UserService): boolean =>\n  userService.user && userService.user.role && userService.user.role === 'admin'\n    ? true\n    : false\n\ninterface ProtectedRouteProps {\n  children?: React.ReactNode\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  userService,\n  children,\n  ...rest\n}: ProtectedRouteProps & RouteProps & UserServiceProps) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAdmin(userService) ? (\n        Component ? (\n          <Component {...props} />\n        ) : (\n          children\n        )\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default ProtectedRoute\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst usePageService = (\n  slug: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!slug || slug.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page?slug=${slug}`)\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Page })\n      })\n      .catch(error => {\n        console.warn('usePageService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [slug, setLoading])\n\n  return result\n}\n\nconst useAllPagesService = (\n  reloadPages: boolean,\n  setReloadPages: (reloadPages: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadPages &&\n      fetch(`${API_HOST}/pages`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('page', response)\n          setResult({ status: 'loaded', payload: response.rows as Page[] })\n        })\n        .catch(error => {\n          console.warn('usePageService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => setReloadPages(false))\n  }, [reloadPages, setReloadPages])\n\n  return result\n}\n\nconst usePageSaveService = (\n  page: Page | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !page || page.slug.length === 0) {\n      setDoSave(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('usePageSaveService response:', response)\n        setResult({ status: 'loaded', payload: response as Page })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('usePageSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [page, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport { usePageService, useAllPagesService, usePageSaveService }\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Page } from '../types/Page'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditPageMenuProps {\n  page: Page\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n}\n\nexport default function EditPageMenu(props: EditPageMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.page.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete page\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport Loading from '../Loading'\nimport { usePageService, usePageSaveService } from './usePageService'\nimport EditPageMenu from './EditPageMenu'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    row: {\n      display: 'flex'\n    },\n    pageName: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n)\n\nfunction EditPage(props: RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n\n  const [pageSlug, setPageSlug] = useState('')\n  const [page, setPage] = useState<Page>({ slug: '', content: '' })\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n\n  const pageService = usePageService(pageSlug, setLoading)\n\n  useEffect(() => {\n    if (pageService.status === 'loaded') {\n      if (pageService.payload) {\n        setPage(pageService.payload)\n      } else {\n        setPage({ slug: pageSlug, content: '' })\n      }\n    }\n  }, [pageService, pageSlug])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handlePageContentChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPage(prevPage => ({ ...prevPage, content: event.target.value }))\n  }\n\n  const handlePageNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(prevPage => ({ ...prevPage, slug: event.target.value }))\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const slug = props.match.params.slug\n\n  useEffect(() => {\n    if (slug) {\n      setPageSlug(slug)\n    }\n  }, [slug])\n\n  const onSaveBtnClick = (): void => {\n    setDoSave(true)\n  }\n\n  usePageSaveService(page, doSave, setDoSave, setSnackMsg, setSnackOpen)\n\n  const onDeleteBtnClick = (): void => {\n    fetch(`${API_HOST}/page`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setSnackMsg(response.msg)\n          setSnackOpen(true)\n        } else {\n          props.history.replace('/pages')\n        }\n      })\n      .catch(error => {\n        console.warn('delete page fetch caught err:', error)\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n  }\n\n  return page ? (\n    <>\n      <div className={classes.row}>\n        <TextField\n          className={classes.pageName}\n          label=\"permalink\"\n          fullWidth\n          value={page.slug}\n          onChange={handlePageNameChange}\n        />\n\n        <EditPageMenu\n          page={page}\n          onSaveBtnClick={onSaveBtnClick}\n          onDeleteBtnClick={onDeleteBtnClick}\n        />\n      </div>\n\n      {loading ? (\n        <Loading />\n      ) : (\n        <TextField\n          label=\"content\"\n          multiline\n          fullWidth\n          rows={4}\n          rowsMax={28}\n          value={page.content}\n          onChange={handlePageContentChange}\n        />\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditPage)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditPage from './EditPage'\nimport { useAllPagesService } from './usePageService'\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport { Page } from '../types/Page'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    }\n  })\n)\n\nconst Default = () => <h3>pages!</h3>\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Pages(props: Props & RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [pages, setPages] = useState<Page[]>([])\n  const [reloadPages, setReloadPages] = useState(true)\n  const allPages = useAllPagesService(reloadPages, setReloadPages)\n\n  useEffect(() => {\n    allPages.status === 'loaded' && setPages(allPages.payload)\n  }, [allPages])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addPage() {\n    props.history.push('/pages/edit/newpage')\n    setSnackOpen(true)\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid xs={12} sm={4} md={3} lg={2} item>\n          <Paper className={classes.paper}>\n            <List>\n              <ListItem>\n                <ListItemText>\n                  <div className={classes.title}>\n                    <span className={classes.titleText}>PAGES</span>\n                    <IconButton\n                      aria-label=\"add page\"\n                      title=\"add page\"\n                      onClick={() => addPage()}\n                    >\n                      <Add />\n                    </IconButton>\n                  </div>\n                </ListItemText>\n              </ListItem>\n              <Divider />\n              {pages.map((page: Page, idx: number) => (\n                <ListItem\n                  button\n                  component={Link}\n                  to={`/pages/edit/${page.slug}`}\n                  key={`page${idx}`}\n                >\n                  <ListItemText primary={page.slug} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        <Grid xs={12} sm={8} md={9} lg={10} item>\n          <Paper className={classes.paper}>\n            <Switch>\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages\"\n                component={Default}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages/edit/:slug\"\n                component={EditPage}\n              />\n            </Switch>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new page!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Pages))\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\n\nimport { Order } from '../types/Order'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(2),\n      borderLeft: `${theme.spacing(6)}px solid ${theme.palette.divider}`\n    },\n    gridHeading: {\n      color: theme.palette.text.secondary\n    },\n    gridItem: {\n      paddingBottom: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center'\n    },\n    lastUpdated: {\n      marginLeft: theme.spacing(2)\n    }\n  })\n)\n\nexport default function OrderDetailPanel(props: { order: Order }) {\n  const classes = useStyles()\n  const order = props.order\n  const line_items = props.order.OrderLineItems || []\n  const adjustments = line_items.filter(li => li.kind !== 'product')\n\n  return (\n    <div className={classes.root}>\n      <Table aria-label=\"order details table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">\n              Line Items ({order.item_count})\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              price\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              unit\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              qty\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {line_items.map(\n            (li, idx) =>\n              li.kind === 'product' && (\n                <TableRow key={`orderli${idx}`}>\n                  <TableCell component=\"td\" scope=\"row\">\n                    {li.vendor && `[${li.vendor}] ${li.description} `}\n                    {li.data && li.data.product ? `${li.data.product.unf}` : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.price}</TableCell>\n                  <TableCell align=\"right\">{li.selected_unit}</TableCell>\n                  <TableCell align=\"right\">{li.quantity}</TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              )\n          )}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Sub Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.subtotal}\n            </TableCell>\n          </TableRow>\n\n          {adjustments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Adjustments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {adjustments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {`(${li.kind}) `} {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              customer\n            </Typography>\n            <Typography variant=\"body1\">\n              {order.name}{' '}\n              <Link color=\"primary\" href={`mailto:${order.email}`}>\n                {order.email}\n              </Link>\n              <br />\n              <Link color=\"primary\" href={`tel:${order.phone}`}>\n                {order.phone}\n              </Link>\n              <br />\n              {order.address} <br />\n            </Typography>\n          </div>\n        </Grid>\n        {order.User && order.User !== order.Member && (\n          <Grid item xs={4}>\n            <div className={classes.gridItem}>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                className={classes.gridHeading}\n                gutterBottom\n              >\n                created by\n              </Typography>\n              <Typography variant=\"body1\">\n                <Link color=\"primary\" href={`mailto:${order.User.email}`}>\n                  {order.User.email}\n                </Link>{' '}\n                {order.User.role && <>({order.User.role}) </>}\n              </Typography>\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              notes\n            </Typography>\n            <Typography variant=\"body2\">{order.notes}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      {order.createdAt !== order.updatedAt && (\n        <div className={classes.lastUpdated}>\n          <i>Last updated</i> {new Date(order.updatedAt).toLocaleString()}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\nimport { Order } from '../types/Order'\nimport OrderDetailPanel from './OrderDetailPanel'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'CLOSE SEARCH' : 'SEARCH',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newOrderAction = {\n    icon: 'add',\n    tooltip: 'NEW ORDER',\n    isFreeAction: true,\n    onClick: () => props.history.push('/orders/create')\n  }\n\n  const printAction = {\n    tooltip: 'PRINT',\n    icon: 'print',\n    onClick: (e: any, data: Order[]) => {\n      const orderIds = data.map(order => order.id)\n      console.log('printAction orderIds:', orderIds, ' data:', data)\n\n      fetch(`${API_HOST}/orders/print`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ orderIds })\n      })\n        .then(response => response.text())\n        .then(result => {\n          try {\n            // eslint-disable-next-line\n            const wOpen = window.open('about:blank')\n            if (wOpen) {\n              wOpen.document.body.innerHTML += result\n            }\n          } catch (e) {\n            console.warn('caught error doing this razzle dazze shit e:', e)\n          }\n        })\n        .catch(err => {\n          console.warn(err)\n        })\n    }\n  }\n\n  const editAction = {\n    tooltip: 'EDIT',\n    icon: 'edit',\n    onClick: (e: any, data: Order[]) => {\n      data[0] && data[0].id && props.history.push(`/orders/edit/${data[0].id}`)\n    }\n  }\n\n  // const archiveAction = {\n  //   tooltip: 'ARCHIVE',\n  //   icon: 'archive',\n  //   onClick: (e: any, data: Order[]) => {\n  //     console.log('archive these muthafuckaz')\n  //   }\n  // }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newOrderAction\n  ])\n\n  useEffect(() => {\n    !isSelecting && setActions([searchAction, newOrderAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, isSelecting]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (order: Order) => new Date(order.createdAt).toLocaleString()\n          },\n          {\n            title: 'status',\n            field: 'status',\n            type: 'string',\n            lookup: ORDER_STATUSES\n          },\n          {\n            title: 'payment status',\n            field: 'payment_status',\n            type: 'string',\n            lookup: PAYMENT_STATUSES\n          },\n          {\n            title: 'shipment status',\n            field: 'shipment_status',\n            type: 'string',\n            lookup: SHIPMENT_STATUSES\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'email', field: 'email', type: 'string', filtering: false },\n          {\n            title: 'items',\n            field: 'item_count',\n            type: 'numeric',\n            filtering: false\n          },\n          {\n            title: 'total',\n            field: 'total',\n            type: 'currency',\n            filtering: false\n          },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            hidden: true\n            // render: (order: Order) =>\n            //   order.updatedAt\n            //     ? new Date(order.updatedAt).toLocaleString()\n            //     : null\n          },\n          { title: 'phone', field: 'phone', type: 'string', hidden: true },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'notes', field: 'notes', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'history', field: 'history', type: 'string', hidden: true },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            // console.log('query:', query)\n            fetch(`${API_HOST}/orders`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                // console.log('result', result)\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        detailPanel={order => <OrderDetailPanel order={order} />}\n        onRowClick={(event, rowData, togglePanel) =>\n          togglePanel && togglePanel()\n        }\n        title=\"Orders\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        onSelectionChange={(data: Order[], rowData?: Order | undefined) => {\n          searchExpanded && setSearchExpanded(false)\n          if (data.length === 0) {\n            setIsSelecting(false)\n            return\n          }\n          setIsSelecting(true)\n          if (data.length === 1) {\n            setActions([printAction, editAction])\n          } else {\n            setActions([printAction])\n          }\n        }}\n        actions={actions}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Orders)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\nimport { OrderStatus } from '../types/Order'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankWholesaleOrder: WholesaleOrder = {\n  id: '',\n  vendor: '',\n  notes: '',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  createdAt: '',\n  updatedAt: ''\n}\n\nconst useWholesaleOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void,\n  reload: boolean,\n  setReload: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id) {\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    if (id === 'new') {\n      setResult({ status: 'loaded', payload: blankWholesaleOrder })\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    fetch(`${API_HOST}/wholesaleorder/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({ status: 'loaded', payload: response as WholesaleOrder })\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n        setReload(false)\n      })\n  }, [id, setLoading, reload, setReload])\n\n  return result\n}\n\nconst useAllWholesaleOrdersService = (\n  status: OrderStatus,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  reloadWholesaleOrders: boolean,\n  setReloadWholesaleOrders: (reloadWholesaleOrders: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadWholesaleOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          setResult({\n            status: 'loaded',\n            payload: response.data as WholesaleOrder[]\n          })\n        })\n        .catch(error => {\n          console.warn('useWholesaleOrderService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => {\n          setReloadWholesaleOrders(false)\n          setLoading(false)\n        })\n  }, [reloadWholesaleOrders, setReloadWholesaleOrders, status, setLoading])\n\n  return result\n}\n\nconst useWholesaleOrderSaveService = (\n  wholesaleOrder: WholesaleOrder | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !wholesaleOrder || !wholesaleOrder.id) {\n      setDoSave(false)\n      return\n    }\n\n    const path =\n      wholesaleOrder.id === 'new'\n        ? '/wholesaleorder/create'\n        : '/wholesaleorder/upsert'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(wholesaleOrder)\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({\n          status: 'loaded',\n          payload: response.order as WholesaleOrder\n        })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [wholesaleOrder, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport {\n  useWholesaleOrderService,\n  useAllWholesaleOrdersService,\n  useWholesaleOrderSaveService\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport FileIcon from '@material-ui/icons/FileCopy'\n\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditWholesaleOrderMenuProps {\n  wholesaleOrder: WholesaleOrder\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n  onExportToCsv: () => void\n  onProductsExportToCsv: () => void\n}\n\nexport default function EditMenu(props: EditWholesaleOrderMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"wholesaleorders-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"wholesaleorders-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete wholesale order\" />\n        </StyledMenuItem>\n\n        {/* <StyledMenuItem\n          onClick={() => {\n            props.onExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export to .csv\" />\n        </StyledMenuItem> */}\n\n        <StyledMenuItem\n          onClick={() => {\n            props.onProductsExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"export products to .csv\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { LineItemData, GroupedItem } from './EditWholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    liTable: {\n      marginTop: theme.spacing(4)\n    },\n    deleteBtn: {\n      width: '88px'\n    },\n    unf: {\n      minWidth: '105px'\n    },\n    groupedRow: {\n      backgroundColor: theme.palette.background.default\n    },\n    groupedRowTotals: theme.typography.h6\n  })\n)\n\nfunction WholesaleOrderLineItems(\n  props: {\n    wholesaleOrder?: WholesaleOrder\n    setReload: React.Dispatch<React.SetStateAction<boolean>>\n    lineItemData: LineItemData\n    setLineItemData: React.Dispatch<React.SetStateAction<LineItemData>>\n  } & RouteComponentProps\n) {\n  const classes = useStyles()\n  const lineItems = props?.wholesaleOrder?.OrderLineItems\n  const { lineItemData, setLineItemData } = props\n\n  function calc() {\n    let groupedLineItems: {\n      [key: string]: GroupedItem\n    } = {}\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      productTotal: 0,\n      adjustmentTotal: 0,\n      orderTotal: 0\n    }))\n\n    lineItems?.forEach(li => {\n      const id = li.data && li.data.product && li.data.product.id\n      const key = id ? id : li.description\n\n      let acc = groupedLineItems[key]\n\n      const qty =\n        li.data && li.data.product && li.selected_unit === 'EA'\n          ? li.quantity / li.data.product.pk\n          : li.quantity\n\n      const liTotal =\n        li.data && li.data.product\n          ? +(parseFloat(li.data.product.ws_price_cost) * qty).toFixed(2)\n          : li.total\n\n      groupedLineItems[key] = {\n        qtySum: acc ? acc.qtySum + qty : qty,\n        totalSum: acc ? acc.totalSum + liTotal : liTotal,\n        product: li && li.data && li.data.product,\n        vendor: li.vendor,\n        description: li.description,\n        line_items: acc ? [...acc.line_items, li] : [li]\n      }\n\n      setLineItemData(prevData => ({\n        ...prevData,\n        productTotal: prevData.productTotal + parseFloat(`${liTotal}`),\n        orderTotal: prevData.orderTotal + liTotal\n      }))\n    })\n\n    Object.values(groupedLineItems).forEach(item => {\n      // check if qtySum is not a round number (i.e. a partial case)\n      if (item.qtySum % 1 !== 0 && item.product) {\n        const pk = item.product.pk\n        const qty = item.line_items.reduce((acc, v) => acc + v.quantity, 0)\n        // quantity needed to complete a case\n        const quantity = Math.abs((qty % pk) - pk)\n        const price = +(\n          quantity * parseFloat(item.product.u_price_cost)\n        ).toFixed(2)\n\n        const total = price\n        item.line_items.push({\n          quantity,\n          price,\n          total,\n          kind: 'adjustment',\n          description: `add ${quantity} EA`\n        })\n        // also add to the sums when creating this adjustment.\n        item.totalSum = item.totalSum + total\n        item.qtySum = Math.round(item.qtySum + quantity / pk)\n\n        setLineItemData(prevData => ({\n          ...prevData,\n          adjustmentTotal: prevData.adjustmentTotal + +total,\n          orderTotal: prevData.orderTotal + total\n        }))\n      }\n    })\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      groupedLineItems\n    }))\n  }\n\n  useEffect(calc, [lineItems])\n\n  function removeLineItem(item: GroupedItem) {\n    const ids = item.line_items.map(li => li.id).filter(a => a)\n    if (ids && ids.length && window.confirm('are you sure?')) {\n      const token = localStorage && localStorage.getItem('token')\n      fetch(`${API_HOST}/wholesaleorder/removelineitem`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ ids })\n      })\n        .then(response => response.json())\n        .then(response => !response.error && props.setReload(true))\n        .catch(err => console.warn('members removelineitem caught err', err))\n    }\n  }\n\n  return (\n    <Table size=\"small\" className={classes.liTable}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.deleteBtn} />\n          <TableCell className={classes.unf}>unf</TableCell>\n          <TableCell>description</TableCell>\n          <TableCell>price</TableCell>\n          <TableCell>cost</TableCell>\n          <TableCell>pk</TableCell>\n\n          <TableCell align=\"center\">qty</TableCell>\n          <TableCell align=\"right\">total</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.values(lineItemData.groupedLineItems).map(\n          (item: GroupedItem, idx: number) => (\n            <React.Fragment key={`wsgli${idx}`}>\n              <TableRow className={classes.groupedRow}>\n                <TableCell className={classes.deleteBtn}>\n                  <Tooltip title=\"remove these line item(s)\">\n                    <IconButton\n                      aria-label=\"remove these line item(s)\"\n                      onClick={() => removeLineItem(item)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${\n                      item.product.unf\n                        ? item.product.unf\n                        : item.product.upc_code\n                    } `}\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${item.product.name} ${item.product.description}`}\n                  {item.product && (\n                    <>\n                      <br />\n                      {`${item.product.upc_code} ${item.product.category} > ${item.product.sub_category}`}{' '}\n                    </>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && item.product.ws_price}\n                  {item.product &&\n                  item.product.ws_price !== item.product.u_price ? (\n                    <>\n                      <br />\n                      {`(${item.product.u_price}EA)`}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && ` ${item.product.ws_price_cost}`}\n                  <br />\n                  {item.product &&\n                    `${\n                      item.product.ws_price_cost !== item.product.u_price_cost\n                        ? `(${item.product.u_price_cost}EA)`\n                        : ''\n                    }`}\n                </TableCell>\n                <TableCell>{item.product && item.product.pk}</TableCell>\n\n                <TableCell align=\"center\" className={classes.groupedRowTotals}>\n                  {+item.qtySum.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.groupedRowTotals}>\n                  {item.totalSum.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              {item.line_items.map(li => (\n                <TableRow key={`wsli${li.id}`}>\n                  <TableCell colSpan={2} />\n                  <TableCell>\n                    [{li.kind}] {li.vendor}{' '}\n                    {li.data && li.data.product && li.data.product.import_tag\n                      ? li.data.product.import_tag\n                      : li.description}{' '}\n                    {li.OrderId && (\n                      <Link\n                        color=\"primary\"\n                        href=\"\"\n                        onClick={(e: any) => {\n                          e.preventDefault()\n                          props.history.push(`/orders/edit/${li.OrderId}`)\n                        }}\n                      >\n                        Order #{li.OrderId}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell>\n                    {li.kind === 'adjustment'\n                      ? `${li.quantity} EA`\n                      : `${li.quantity} ${li.selected_unit}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {li.data && li.data.product && li.selected_unit === 'EA'\n                      ? +(li.quantity / li.data.product.pk).toFixed(2)\n                      : null}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              ))}\n            </React.Fragment>\n          )\n        )}\n\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            ITEM COUNT\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            PRODUCT TOTAL\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            ADJUSTMENTS TOTAL\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            TOTAL\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            {Object.keys(lineItemData.groupedLineItems).length}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.productTotal.toFixed(2)}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.adjustmentTotal.toFixed(2)}\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            {lineItemData.orderTotal.toFixed(2)}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default withRouter(WholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { LineItem } from '../types/Order'\nimport { Product } from '../types/Product'\nimport {\n  WholesaleOrder,\n  WholesaleOrderRouterProps\n} from '../types/WholesaleOrder'\nimport { OrderStatus, ShipmentStatus, PaymentStatus } from '../types/Order'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport Loading from '../Loading'\nimport {\n  useWholesaleOrderService,\n  useWholesaleOrderSaveService\n} from './useWholesaleOrderService'\nimport EditMenu from './EditMenu'\nimport WholesaleOrderLineItems from './WholesaleOrderLineItems'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    vendor: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    editMenu: {\n      padding: `${theme.spacing(2)}px 0`,\n      textAlign: 'right'\n    }\n  })\n)\n\nexport interface GroupedItem {\n  qtySum: number\n  totalSum: number\n  product: Product | undefined\n  vendor: string | undefined\n  description: string\n  line_items: LineItem[]\n}\n\nexport interface LineItemData {\n  groupedLineItems: {\n    [key: string]: GroupedItem\n  }\n  orderTotal: number\n  productTotal: number\n  adjustmentTotal: number\n}\n\ninterface EditWholesaleOrderProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction EditWholesaleOrder(\n  props: EditWholesaleOrderProps &\n    RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const [wholesaleOrderId, setWholesaleOrderId] = useState('')\n  const [wholesaleOrder, setWholesaleOrder] = useState<WholesaleOrder>()\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [reload, setReload] = useState(true)\n\n  const [lineItemData, setLineItemData] = useState<LineItemData>({\n    groupedLineItems: {},\n    productTotal: 0,\n    adjustmentTotal: 0,\n    orderTotal: 0\n  })\n\n  const wholesaleOrderService = useWholesaleOrderService(\n    wholesaleOrderId,\n    setLoading,\n    reload,\n    setReload\n  )\n\n  useEffect(() => {\n    if (wholesaleOrderService.status === 'loaded') {\n      if (wholesaleOrderService.payload) {\n        setWholesaleOrder(wholesaleOrderService.payload)\n      }\n    }\n  }, [wholesaleOrderService, wholesaleOrderId])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handleOrderNotesChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          notes: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleOrderVendorChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          vendor: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          status: event.target.value as OrderStatus\n        }\n      }\n    })\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          payment_status: event.target.value as PaymentStatus\n        }\n      }\n    })\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          shipment_status: event.target.value as ShipmentStatus\n        }\n      }\n    })\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const id = props.match.params.id\n\n  useEffect(() => {\n    if (id) {\n      setWholesaleOrderId(id)\n    }\n  }, [id])\n\n  const onSaveBtnClick = (): void => {\n    if (wholesaleOrderId === 'new') {\n      setWholesaleOrder(prevOrder => {\n        if (prevOrder) {\n          return {\n            ...prevOrder,\n            id: 'new'\n          }\n        }\n      })\n    }\n    setDoSave(true)\n    props.setReloadOrders(true)\n  }\n\n  useWholesaleOrderSaveService(\n    wholesaleOrder,\n    doSave,\n    setDoSave,\n    setSnackMsg,\n    setSnackOpen\n  )\n\n  const onDeleteBtnClick = (): void => {\n    wholesaleOrder &&\n      fetch(`${API_HOST}/wholesaleorder`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ id: wholesaleOrder.id })\n      })\n        .then(response => response.json())\n        .then(response => {\n          if (response.error) {\n            setSnackMsg(response.msg)\n            setSnackOpen(true)\n          } else {\n            props.history.replace('/wholesaleorders')\n          }\n        })\n        .catch(error => {\n          console.warn('delete wholesaleOrder fetch caught err:', error)\n          setSnackMsg(`o noz! ${error}`)\n          setSnackOpen(true)\n        })\n  }\n\n  const saveStreamCSV = (filename: string, text: any) => {\n    // lolol shoutout to https://stackoverflow.com/questions/37095233/downloading-and-saving-data-with-fetch-from-authenticated-rest\n    if (window.navigator.msSaveBlob) {\n      // IE 10 and later, and Edge.\n      const blobObject = new Blob([text], { type: 'text/csv' })\n      window.navigator.msSaveBlob(blobObject, filename)\n    } else {\n      // Everthing else (except old IE).\n      // Create a dummy anchor (with a download attribute) to click.\n      const anchor = document.createElement('a')\n      anchor.download = filename\n      if (window.URL.createObjectURL) {\n        // Everything else new.\n        const blobObject = new Blob([text], { type: 'text/csv' })\n        anchor.href = window.URL.createObjectURL(blobObject)\n      } else {\n        // Fallback for older browsers (limited to 2MB on post-2010 Chrome).\n        // Load up the data into the URI for \"download.\"\n        anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(text)\n      }\n      // Now, click it.\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        anchor.dispatchEvent(event)\n      } else {\n        anchor.click()\n      }\n    }\n  }\n\n  const onExportToCsv = (): void => {\n    console.log('handle onExportToCsv wholesaleOrder:', lineItemData)\n  }\n  const onProductsExportToCsv = (): void => {\n    const vendor = wholesaleOrder && wholesaleOrder.vendor\n    if (!vendor) {\n      return\n    }\n    fetch(`${API_HOST}/whosaleorder/exportcsv`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/csv',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        lineItemData\n      })\n    })\n      .then(response => response.text())\n      .then(responseText => saveStreamCSV(`${vendor}.csv`, responseText))\n      .catch(error => {\n        console.warn('wholesaleOrder onExportToCsv fetch caught err:', error)\n        setSnackMsg(`o noz! ran into a problem ;(`)\n        setSnackOpen(true)\n      })\n  }\n\n  function valueFor(field: keyof WholesaleOrder) {\n    return wholesaleOrder && wholesaleOrder[field] ? wholesaleOrder[field] : ''\n  }\n\n  return wholesaleOrder ? (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item sm={5}>\n              <TextField\n                className={classes.vendor}\n                label=\"vendor\"\n                fullWidth\n                value={valueFor('vendor')}\n                onChange={handleOrderVendorChange}\n              />\n              <FormControl fullWidth>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={7}>\n              <TextField\n                label=\"notes\"\n                multiline\n                fullWidth\n                rows={4}\n                rowsMax={28}\n                value={valueFor('notes')}\n                onChange={handleOrderNotesChange}\n              />\n              <div className={classes.editMenu}>\n                <EditMenu\n                  wholesaleOrder={wholesaleOrder}\n                  onSaveBtnClick={onSaveBtnClick}\n                  onDeleteBtnClick={onDeleteBtnClick}\n                  onExportToCsv={onExportToCsv}\n                  onProductsExportToCsv={onProductsExportToCsv}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <WholesaleOrderLineItems\n            wholesaleOrder={wholesaleOrder}\n            setReload={setReload}\n            lineItemData={lineItemData}\n            setLineItemData={setLineItemData}\n          />\n        </>\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditWholesaleOrder)\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport MaterialTable from 'material-table'\n\nimport { LineItem } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100vw'\n    }\n  })\n)\n\ninterface AddWholesaleOrderLineItemsProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction AddWholesaleOrderLineItems(props: AddWholesaleOrderLineItemsProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const [selectedLineItems, setSelectedLineItems] = useState<string[]>()\n\n  const addAction = {\n    tooltip: 'ADD LINE ITEMS TO ORDER',\n    icon: 'add',\n    onClick: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      data: LineItem | LineItem[]\n    ) => {\n      handleWholesaleOrderMenuOpen(event)\n      if (Array.isArray(data)) {\n        // ain't nobody (tsc) tell me nothin\n        setSelectedLineItems(data.map(li => li.id) as string[])\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [wholesaleorderLookup, setWholesaleOrderLookup] = useState<\n    Array<{ id: string; name: string }>\n  >()\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ status: ['new', 'needs_review'] })\n    })\n      .then(response => response.json())\n      .then(result =>\n        setWholesaleOrderLookup(\n          result.data.map(\n            (order: { id: string; vendor: string; createdAt: string }) => ({\n              id: order.id,\n              name: `${order.vendor} ${new Date(\n                order.createdAt\n              ).toLocaleDateString()}`\n            })\n          )\n        )\n      )\n      .catch(console.warn)\n  }, [])\n  const [\n    wholesaleorderMenuAnchorEl,\n    setWholesaleOrderMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleWholesaleOrderMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setWholesaleOrderMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleWholesaleOrderMenuClose = () => {\n    setSelectedLineItems([])\n    setWholesaleOrderMenuAnchorEl(null)\n  }\n\n  const handleWholesaleOrderSelect = (id: string) => {\n    fetch(`${API_HOST}/wholesaleorder/addlineitems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, selectedLineItems })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('update line items result:', result)\n      })\n      .catch(console.warn)\n      .finally(() => {\n        handleWholesaleOrderMenuClose()\n        setNeedsRefresh(true)\n        props.setReloadOrders(true)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'qty',\n            field: 'quantity',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'total', field: 'total', type: 'string', filtering: false },\n          {\n            title: 'product',\n            field: 'data',\n            type: 'string',\n            render: row =>\n              row.data && row.data.product\n                ? `${row.data.product.name} ${row.data.product.description}`\n                : null\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true },\n          { title: 'OrderId', field: 'OrderId', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/wholesaleorders/lineitems`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Line Items\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[addAction]}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={wholesaleorderMenuAnchorEl}\n        keepMounted\n        open={Boolean(wholesaleorderMenuAnchorEl)}\n        onClose={handleWholesaleOrderMenuClose}\n      >\n        <MenuItem onClick={() => handleWholesaleOrderSelect('new')}>\n          New wholesale order\n        </MenuItem>\n        <Divider />\n        {wholesaleorderLookup &&\n          wholesaleorderLookup.map(\n            (wholesaleorder: { id: string; name: string }) => (\n              <MenuItem\n                key={`wholesaleorder-sel-${wholesaleorder.id}`}\n                onClick={() => handleWholesaleOrderSelect(wholesaleorder.id)}\n              >\n                {wholesaleorder.name}\n              </MenuItem>\n            )\n          )}\n      </Menu>\n    </div>\n  )\n}\n\nexport default AddWholesaleOrderLineItems\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MUILink from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditWholesaleOrder from './EditWholesaleOrder'\nimport { useAllWholesaleOrdersService } from './useWholesaleOrderService'\nimport { WholesaleOrderRouterProps } from '../types/WholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport { withStyles } from '@material-ui/core/styles'\nimport { OrderStatus } from '../types/Order'\nimport Loading from '../Loading'\nimport { ORDER_STATUSES } from '../constants'\nimport AddWholesaleOrderLineItems from './AddWholesaleOrderLineItems'\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: 0 //theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      textAlign: 'left',\n      marginLeft: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    paperNav: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    list: {\n      padding: 0,\n      width: '100%'\n    },\n    selectedListItem: {\n      borderLeft: `${theme.spacing(2)}px solid ${theme.palette.divider}`\n    },\n    noOrdersMsg: {\n      padding: theme.spacing(2)\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction WholesaleOrders(\n  props: Props & RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [wholesaleOrders, setWholesaleOrders] = useState<WholesaleOrder[]>([])\n  const [reloadOrders, setReloadOrders] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>('new')\n  const allWholesaleOrders = useAllWholesaleOrdersService(\n    selectedStatus,\n    setLoading,\n    reloadOrders,\n    setReloadOrders\n  )\n\n  useEffect(() => {\n    allWholesaleOrders.status === 'loaded' &&\n      setWholesaleOrders(allWholesaleOrders.payload)\n  }, [allWholesaleOrders])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addWholesaleOrder() {\n    props.history.push('/wholesaleorders/edit/new')\n    setSnackOpen(true)\n  }\n\n  function loadOrdersForStatus(status: OrderStatus, expanded: boolean) {\n    if (expanded) {\n      setSelectedStatus(status)\n      setReloadOrders(true)\n    }\n  }\n\n  let id: string | number | undefined\n  try {\n    id = window.location.pathname.split('/').reverse()[0]\n    if (isNaN(parseInt(id))) {\n      id = undefined\n    }\n  } catch {\n    /* wellfuck */\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid sm={12} md={3} lg={2} item>\n          <Paper className={classes.paperNav}>\n            <div className={classes.title}>\n              <MUILink\n                color=\"textPrimary\"\n                href=\"\"\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push('/wholesaleorders')\n                }}\n                className={classes.titleText}\n              >\n                WHOLESALE ORDERS\n              </MUILink>\n              <IconButton\n                aria-label=\"add wholesale order\"\n                title=\"add wholeslae order\"\n                onClick={() => addWholesaleOrder()}\n              >\n                <Add />\n              </IconButton>\n            </div>\n\n            {Object.keys(ORDER_STATUSES).map(status => (\n              <ExpansionPanel\n                square\n                key={`EP${status}`}\n                defaultExpanded={status === 'new'}\n                expanded={selectedStatus === status}\n                onChange={(event: any, expanded: boolean) =>\n                  loadOrdersForStatus(status as OrderStatus, expanded)\n                }\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`panel${status}-content`}\n                  id={`panel${status}-header`}\n                >\n                  <Typography>\n                    {ORDER_STATUSES[status as OrderStatus]}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {loading ? (\n                    <Loading />\n                  ) : (\n                    <List className={classes.list}>\n                      {wholesaleOrders && wholesaleOrders.length ? (\n                        wholesaleOrders.map(\n                          (order: WholesaleOrder, idx: number) => (\n                            <ListItem\n                              button\n                              component={Link}\n                              to={`/wholesaleorders/edit/${order.id}`}\n                              key={`wsorder${idx}`}\n                              className={\n                                // eslint-disable-next-line\n                                id == order.id\n                                  ? classes.selectedListItem\n                                  : undefined\n                              }\n                            >\n                              <ListItemText\n                                primary={order.vendor}\n                                secondary={new Date(\n                                  order.createdAt\n                                ).toLocaleDateString()}\n                              />\n                            </ListItem>\n                          )\n                        )\n                      ) : (\n                        <div className={classes.noOrdersMsg}>\n                          <i>No wholesale orders for this status...</i>\n                        </div>\n                      )}\n                    </List>\n                  )}\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Paper>\n        </Grid>\n\n        <Grid sm={12} md={9} lg={10} item>\n          <Switch>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders\"\n              exact\n            >\n              <AddWholesaleOrderLineItems setReloadOrders={setReloadOrders} />\n            </ProtectedRoute>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders/edit/:id\"\n            >\n              <Paper className={classes.paper}>\n                <EditWholesaleOrder setReloadOrders={setReloadOrders} />\n              </Paper>\n            </ProtectedRoute>\n          </Switch>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new Wholesale Order!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(WholesaleOrders))\n","import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n)\n\nconst ROLES = ['admin', 'member', 'guest']\n\nexport default function NewUserModal(props: {\n  open: boolean\n  handleClose: () => void\n  handleRefresh: () => void\n}) {\n  const token = localStorage && localStorage.getItem('token')\n\n  const classes = useStyles()\n\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('guest')\n  const [disabled, setDiabled] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (email && email.includes('@')) {\n      setDiabled(false)\n    } else {\n      setDiabled(true)\n    }\n  }, [email])\n\n  const createUser = () => {\n    if (!email) {\n      setError('type an email!')\n      return\n    } else {\n      setError('')\n    }\n    fetch(`${API_HOST}/user/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ email, role })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result', result)\n        if (result.error) {\n          return setError(result.msg)\n        } else {\n          props.handleRefresh()\n          props.handleClose()\n        }\n      })\n      .catch(err => {\n        console.warn(err)\n        return setError('o noz! there was an error creating user')\n      })\n      .finally(() => setDiabled(false))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <h2>Add New User</h2>\n            <div>\n              <TextField\n                type=\"email\"\n                margin=\"dense\"\n                label=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(event: any) => setEmail(event.target.value)}\n                autoFocus\n                fullWidth\n              />\n\n              <FormControl fullWidth>\n                <InputLabel id=\"role-select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  id=\"role-select\"\n                  margin=\"dense\"\n                  value={role}\n                  onChange={event =>\n                    event.target &&\n                    event.target.value &&\n                    setRole(event.target.value as string)\n                  }\n                >\n                  {ROLES.map(name => (\n                    <MenuItem value={name} key={`role-select${name}`}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createUser}\n                disabled={disabled}\n              >\n                CREATE\n              </Button>\n\n              {error && (\n                <Box color=\"error.main\">\n                  <Typography component=\"p\">{error}</Typography>\n                </Box>\n              )}\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { User } from '../types/User'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserRolesMenu(props: {\n  user: User\n  disabled: boolean\n}) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [role, setRole] = React.useState(props.user.role || 'none')\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleRoleChange = (id: string | undefined, role: string) => {\n    if (!id) {\n      return\n    }\n    fetch(`${API_HOST}/user/role`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, role })\n    })\n      .then(response => response.json())\n      .then(resp => {\n        // console.log('resp success!?', resp)\n        handleClose()\n        setRole(role)\n      })\n      .catch(err => console.warn('handleRoleChange caught err:', err))\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"user-roles-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        disabled={props.disabled}\n      >\n        {role}\n      </Button>\n      <StyledMenu\n        id=\"user-roles-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* <StyledMenuItem>\n          <ListItemText\n            primary=\"Superuser\"\n            onClick={() => handleRoleChange(props.user.id, 'superuser')}\n          />\n        </StyledMenuItem> */}\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"admin\"\n            onClick={() => handleRoleChange(props.user.id, 'admin')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"member\"\n            onClick={() => handleRoleChange(props.user.id, 'member')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"guest\"\n            onClick={() => handleRoleChange(props.user.id, 'guest')}\n          />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import Add from '@material-ui/icons/Add'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n// import Snackbar from '@material-ui/core/Snackbar'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\n// import { Switch } from 'react-router'\n// import ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\n// import { useAllUsersService } from './useUserService'\nimport { UserRouterProps } from '../types/UserRouterProps'\nimport { User } from '../types/User'\nimport NewUserModal from './NewUserModal'\nimport UserRolesMenu from './UserRolesMenu'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Users(props: Props & RouteComponentProps<UserRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n  const tableRef = createRef<any>()\n\n  console.log('#TODO: deal with userService:', userService)\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const token = localStorage && localStorage.getItem('token')\n  const [newUserModalOpen, setNewUserModalOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newUserAction = {\n    icon: 'add',\n    tooltip: 'add new user',\n    isFreeAction: true,\n    onClick: () => setNewUserModalOpen(true)\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove User',\n    icon: 'delete',\n    onClick: (e: any, user: User) => {\n      if (\n        userService &&\n        userService.user &&\n        userService.user.email === user.email\n      ) {\n        alert('you cannot delete yrself!')\n      } else {\n        if (!user.id) {\n          return\n        }\n        if (window.confirm(`Are you sure you want to delete ${user.email}?`)) {\n          fetch(`${API_HOST}/user`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({ id: user.id })\n          })\n            .then(response => response.json())\n            .then(() => tableRef.current && tableRef.current.onQueryChange())\n            .catch(err => console.warn('user deleteAction caught err', err))\n        }\n      }\n    }\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newUserAction,\n    deleteAction\n  ])\n\n  useEffect(() => {\n    setActions([searchAction, newUserAction, deleteAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'role',\n            field: 'role',\n            type: 'string',\n            render: row => (\n              <UserRolesMenu\n                user={row as User}\n                disabled={\n                  !!(\n                    userService &&\n                    userService.user &&\n                    userService.user.email === row.email\n                  )\n                }\n              />\n            )\n          },\n          { title: 'email', field: 'email', type: 'string' },\n          {\n            title: 'active',\n            field: 'active',\n            type: 'boolean',\n            filtering: false\n          },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.updatedAt).toLocaleString()\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/users`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Users\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n\n      <NewUserModal\n        open={newUserModalOpen}\n        handleClose={() => {\n          setNewUserModalOpen(false)\n        }}\n        handleRefresh={() =>\n          tableRef.current && tableRef.current.onQueryChange()\n        }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Users))\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n// import MoreVertIcon from '@material-ui/icons/MoreVert'\n// import IconButton from '@material-ui/core/IconButton'\n// import Tooltip from '@material-ui/core/Tooltip'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string | undefined) {\n  return (\n    codes &&\n    codes\n      .split(', ')\n      .map((code, idx) =>\n        PROPERTY_MAP[code] ? (\n          <Chip\n            label={PROPERTY_MAP[code]}\n            style={{ margin: 5 }}\n            size=\"small\"\n            key={`pprop${idx}`}\n          />\n        ) : (\n          ''\n        )\n      )\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\nfunction Products() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map(p => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ ids })\n        })\n          .catch(err => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then(response => response.json())\n      .then(result => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filtering: false,\n            render: row => {\n              if (row.name) {\n                return `${row.name} -- ${row.description}`\n              } else {\n                return row.description\n              }\n            }\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: row => renderCodes(row.codes)\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Products\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      zIndex: 2\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    }\n  })\n)\n\nexport default function ImportProducts() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [vendor, setVendor] = useState('')\n  const [importTag, setImportTag] = useState('')\n  const [prevImportTag, setPrevImportTag] = useState('')\n  const [markup, setMarkup] = useState(0.0)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  const [importTagsLookup, setImportTagsLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/import_tags`)\n      .then(response => response.json())\n      .then(result => setImportTagsLookup(result))\n  })\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('vendor')\n    formData.delete('import_tag')\n    formData.delete('prev_import_tag')\n    formData.delete('markup')\n    formData.append('vendor', vendor)\n    formData.append('import_tag', importTag)\n    formData.append('prev_import_tag', prevImportTag)\n    formData.append('markup', `${markup}`)\n\n    fetch(`${API_HOST}/products/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  const [\n    vendorMenuAnchorEl,\n    setVendorMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleVendorMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setVendorMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleVendorMenuClose = () => {\n    setVendorMenuAnchorEl(null)\n  }\n\n  const handleVendorSelect = (vendor: string) => {\n    setVendor(vendor)\n    handleVendorMenuClose()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Import Products</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <div className={classes.vendor}>\n            <TextField\n              label=\"Vendor\"\n              helperText=\"Required.\"\n              fullWidth\n              value={vendor}\n              onChange={event => setVendor(event.target.value)}\n            />\n\n            <div>\n              <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleVendorMenuOpen}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </div>\n\n            <Menu\n              id=\"vendor-menu\"\n              anchorEl={vendorMenuAnchorEl}\n              keepMounted\n              open={Boolean(vendorMenuAnchorEl)}\n              onClose={handleVendorMenuClose}\n            >\n              {vendorLookup &&\n                Object.keys(vendorLookup).map(vendor => (\n                  <MenuItem\n                    key={`vendor-sel-${vendor}`}\n                    onClick={() => handleVendorSelect(vendor)}\n                  >\n                    {vendor}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </div>\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <InputLabel id=\"prev-import-tag-select-label\">\n              Previous Import Tag\n            </InputLabel>\n            <Select\n              labelId=\"prev-import-tag-select-label\"\n              id=\"prev-import-tag-select\"\n              value={prevImportTag}\n              onChange={event =>\n                event.target && setPrevImportTag(event.target.value as string)\n              }\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {importTagsLookup &&\n                Object.keys(importTagsLookup).map(tag => (\n                  <MenuItem key={`tag-sel-${tag}`} value={tag}>\n                    {tag}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>\n              If updating, products with the tag you select here will first be\n              removed.\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label=\"Import Tag\"\n            helperText=\"Required. This should be unique.\"\n            fullWidth\n            value={importTag}\n            onChange={event => setImportTag(event.target.value)}\n            className={classes.gridItem}\n          />\n          <TextField\n            label=\"Markup\"\n            helperText=\"Markup percentage. Use decimal format.\"\n            type=\"number\"\n            inputProps={{\n              min: '0',\n              max: '1',\n              step: '0.01'\n            }}\n            fullWidth\n            value={markup}\n            onChange={event =>\n              setMarkup(\n                isNaN(parseFloat(event.target.value))\n                  ? 0.0\n                  : parseFloat(event.target.value)\n              )\n            }\n            className={classes.gridItem}\n          />\n\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={\n                loading || !importTag || !vendor || formData === undefined\n              }\n              onClick={() => submitData()}\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              IMPORT\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>What kind of file should be uploaded?</dt>\n              <dd>Comma separated value files with the extension .csv</dd>\n\n              <dt>What columns will get processed?</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>name</b>, <b>description</b>,{' '}\n                <b>pk</b>, <b>size</b>, <b>unit_type</b>, <b>ws_price</b>,{' '}\n                <b>u_price</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>Are any of these optional?</dt>\n              <dd>\n                <b>unf</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>\n                <b>codes</b> column\n              </dt>\n              <dd>\n                the <b>codes</b> column value can be a comma-separated list of\n                codes. the values that can be entered in this field are any\n                combination of a, r, c, l, d, f, g, v, w, y, k, ft, m, s, n, og,\n                1, 2, 3.\n              </dd>\n\n              <dt>How do the code columns translate?</dt>\n              <dd>\n                The values in the code columns need to be the same as the\n                header. so for example if there's a column <b>a</b> then the\n                value for the fields in the column need to be <i>a</i> (or blank\n                if not appliciable). except for the <b>og</b> column which can\n                have values og, 1, 2, or 3.\n                <br />\n                <br />\n                <table>\n                  <thead>\n                    <tr>\n                      <th>code</th>\n                      <th>translation</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>a</td>\n                      <td>Artificial ingredients</td>\n                    </tr>\n                    <tr>\n                      <td>c</td>\n                      <td>Low carb</td>\n                    </tr>\n                    <tr>\n                      <td>d</td>\n                      <td>Dairy free</td>\n                    </tr>\n                    <tr>\n                      <td>f</td>\n                      <td>Food Service items</td>\n                    </tr>\n                    <tr>\n                      <td>g</td>\n                      <td>Gluten free</td>\n                    </tr>\n                    <tr>\n                      <td>k</td>\n                      <td>Kosher</td>\n                    </tr>\n                    <tr>\n                      <td>l</td>\n                      <td>Low sodium/no salt</td>\n                    </tr>\n                    <tr>\n                      <td>m</td>\n                      <td>Non-GMO Project Verified</td>\n                    </tr>\n                    <tr>\n                      <td>r</td>\n                      <td>Refined sugar</td>\n                    </tr>\n                    <tr>\n                      <td>v</td>\n                      <td>Vegan</td>\n                    </tr>\n                    <tr>\n                      <td>w</td>\n                      <td>Wheat free</td>\n                    </tr>\n                    <tr>\n                      <td>ft</td>\n                      <td>Fair Trade</td>\n                    </tr>\n                    <tr>\n                      <td>n</td>\n                      <td>Natural</td>\n                    </tr>\n                    <tr>\n                      <td>s</td>\n                      <td>Specialty Only</td>\n                    </tr>\n                    <tr>\n                      <td>y</td>\n                      <td>Yeast free</td>\n                    </tr>\n                    <tr>\n                      <td>og</td>\n                      <td>Organic</td>\n                    </tr>\n                    <tr>\n                      <td>1</td>\n                      <td>100% organic</td>\n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>95%+ organic</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>70%+ organic</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </dd>\n\n              <dt>How is markup applied?</dt>\n              <dd>\n                Markup is a percentage in decimal format so 0.10 will markup\n                products by 10%. The formula is: <i>PRICE + (PRICE * MARKUP)</i>{' '}\n                so if the value of <b>ws_price</b> is 10.00 and the markup\n                specified is 0.10 the the markup price will be 11.00.\n                <br />\n                <br />\n                If any rows of the price sheet has a non-empty, non-zero value\n                in the <b>ws_price_markup</b> or <b>u_price_markup</b> then that\n                will be used as the markup price. This means only some rows of\n                the price sheet can contain special markups while the rest of\n                the sheet can have a single markup applied.\n              </dd>\n\n              <dt>Import Tag</dt>\n              <dd>\n                This field is used to track changes to new price sheets that are\n                meant to update products that have already been imported once. A\n                use-case for this is when uploading partial lists of product for\n                a vendor. So for example if a sub-set of products are imported,\n                then a while later a new sheet of products can be imported\n                without having to destroy and re-import all the products for a\n                vendor. If uploading a complete list of all products for a\n                particular vendor then it would be reasonable to use the same\n                value as the Vendor field.\n                <br />\n                <br />\n                <b>NOTE:</b> it can be useful to include the current date in the\n                value for the Import Tag field (or otherwise make this a unique\n                value). When creating wholesale orders it might be useful to\n                know which price sheet a product that was ordered came from.\n                <br />\n                <br />\n                When the Previous Import Tag is specified, products with that\n                tag are first deleted before new products are created.\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Order } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Order>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/order/edit/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Order })\n      })\n      .catch(error => {\n        console.warn('useOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\n// const useOrderSaveService = (\n//   order: Order | undefined,\n//   doSave: boolean,\n//   setDoSave: (value: boolean) => void,\n//   setSnackMsg: (msg: string) => void,\n//   setSnackOpen: (value: boolean) => void\n// ) => {\n//   const [result, setResult] = useState<Service<Order>>({\n//     status: 'loading'\n//   })\n\n//   useEffect(() => {\n//     if (!doSave || !order) {\n//       setDoSave(false)\n//       return\n//     }\n\n//     console.log('need to save order', order)\n//     setResult({ status: 'error', error: new Error('#TODO') })\n//     fetch(`${API_HOST}/order/create`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: JSON.stringify(order)\n//     })\n//       .then(response => response.json())\n//       .then(response => {\n//         // console.log('usePageSaveService response:', response)\n//         setResult({ status: 'loaded', payload: response as Order })\n//         setSnackMsg(response.msg)\n//         setSnackOpen(true)\n//       })\n//       .catch(error => {\n//         console.warn('usePageSaveService fetch caught err:', error)\n//         setResult({ ...error })\n//         setSnackMsg(`o noz! ${error}`)\n//         setSnackOpen(true)\n//       })\n//       .finally(() => {\n//         setDoSave(false)\n//       })\n//   }, [order, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n//   return result\n// }\n\nexport { useOrderService }\n","import React, { useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nimport { LineItem } from '../types/Order'\nimport { TAX_RATE, TAX_RATE_STRING } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (num === undefined) {\n    return '0.00'\n  }\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'product')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction adjustmentsTotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'adjustment')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  const u_price =\n    line_item.data && line_item.data.product && line_item.data.product.u_price\n      ? parseFloat(line_item.data.product.u_price)\n      : line_item.price\n  const ws_price =\n    line_item.data && line_item.data.product\n      ? parseFloat(line_item.data.product.ws_price)\n      : line_item.price\n\n  return line_item.selected_unit === 'EA' && u_price\n    ? isNaN(line_item.quantity * u_price)\n      ? 0.0\n      : line_item.quantity * u_price\n    : isNaN(line_item.quantity * ws_price)\n    ? 0.0\n    : line_item.quantity * ws_price\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.pk &&\n    line_item.data.product.pk !== 1 &&\n    pksize.push(line_item.data.product.pk)\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.size &&\n    pksize.push(line_item.data.product.size)\n  return pksize.join(' / ')\n}\n\nfunction OrderLineItems(props: {\n  line_items: LineItem[]\n  onLineItemUpdated: (idx: number, line_item: LineItem) => void\n  removeLineItem: (idx: number) => void\n  onTaxesChange: (amount: number) => void\n  onTotalChange: (total: number) => void\n  onSubTotalChange: (subtotal: number) => void\n}) {\n  const classes = useStyles()\n\n  const orderSubtotal = subtotal(props.line_items)\n  const orderAdjustmentsTotal = adjustmentsTotal(props.line_items)\n  const orderTaxes = TAX_RATE * (orderSubtotal + orderAdjustmentsTotal)\n  const orderTotal = orderTaxes + orderSubtotal + orderAdjustmentsTotal\n\n  const { onTaxesChange, onTotalChange, onSubTotalChange } = props\n  useEffect(() => {\n    onTaxesChange(orderTaxes)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTaxes]) // adding onTaxesChange here causes infinite loopz\n\n  useEffect(() => {\n    onTotalChange(orderTotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTotal]) // adding onTotalChange causes infinite loopz :/\n\n  useEffect(() => {\n    onSubTotalChange(orderSubtotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderSubtotal])\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    if (line_item.data && line_item.data.product) {\n      line_item.price =\n        unit === 'CS'\n          ? +line_item.data.product.ws_price\n          : +line_item.data.product.u_price\n    }\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleDescriptionChange = (\n    line_item: LineItem,\n    description: string\n  ) => {\n    line_item.description = description\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handlePriceChange = (line_item: LineItem, price: number) => {\n    line_item.price = price\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const removeLineItem = (line_item: LineItem) => {\n    const idx = props.line_items.indexOf(line_item)\n    props.removeLineItem(idx)\n  }\n\n  const adjustments = props.line_items.filter(li => li.kind === 'adjustment')\n  const payments = props.line_items.filter(li => li.kind === 'payment')\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map(\n            (line_item, idx) =>\n              line_item.kind === 'product' && (\n                <TableRow key={`li${idx}`}>\n                  <TableCell align=\"center\">\n                    <Tooltip title=\"remove line item\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        onClick={(event: any) => removeLineItem(line_item)}\n                      >\n                        <ClearIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>{line_item.description}</TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      {line_item.data &&\n                      line_item.data.product &&\n                      line_item.selected_unit === 'EA' &&\n                      line_item.data.product.u_price\n                        ? usdFormat(line_item.data.product.u_price)\n                        : usdFormat(\n                            line_item.data && line_item.data.product\n                              ? line_item.data.product.ws_price\n                              : line_item.price\n                          )}\n                    </div>\n                    <div>{liPkSize(line_item)}</div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {line_item.data &&\n                    line_item.data.product &&\n                    line_item.data.product.u_price &&\n                    line_item.data.product.u_price !==\n                      line_item.data.product.ws_price ? (\n                      <Select\n                        value={line_item.selected_unit}\n                        onChange={(event: any) =>\n                          handleUnitChange(line_item, event.target.value)\n                        }\n                        margin=\"dense\"\n                      >\n                        <MenuItem value=\"CS\">Case</MenuItem>\n                        <MenuItem value=\"EA\">Each</MenuItem>\n                      </Select>\n                    ) : line_item.data &&\n                      line_item.data.product &&\n                      line_item.data.product.unit_type === 'CS' ? (\n                      'Case'\n                    ) : (\n                      'Each'\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      className={classes.qtyinput}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"dense\"\n                      fullWidth\n                      value={line_item.quantity}\n                      onChange={(event: any) =>\n                        handleQtyChange(line_item, event.target.value)\n                      }\n                      inputProps={{ min: '1', step: '1' }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {usdFormat(line_item.total)}\n                  </TableCell>\n                </TableRow>\n              )\n          )}\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(orderSubtotal)}</TableCell>\n          </TableRow>\n          {adjustments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '9999',\n                    step: '1'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Tax</TableCell>\n            <TableCell align=\"center\">{TAX_RATE_STRING}</TableCell>\n            <TableCell align=\"right\">{usdFormat(orderTaxes)}</TableCell>\n          </TableRow>\n\n          {payments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={4}>{line_item.description}</TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              <b>{usdFormat(orderTotal)}</b>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default OrderLineItems\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\ninterface ProductResponse {\n  data: Product[]\n}\n\ninterface ProductOption {\n  name: string\n  product: Product\n}\n\ninterface LineItemAutocompleteProps {\n  onItemSelected: (value: { name: string; product: Product }) => void\n}\n\nexport default function LineItemAutocomplete(props: LineItemAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<ProductOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/products`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const products = (await response.json()) as ProductResponse\n\n      if (active) {\n        setOptions(\n          products.data.map(p => ({\n            name: `${p.name} ${p.description} ${p.pk} ${p.size} $${\n              p.ws_price\n            } ${p.u_price !== p.ws_price ? `($${p.u_price} EA)` : ''}`,\n            product: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Product search\"\n          fullWidth\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\ninterface MemberResponse {\n  data: Member[]\n}\n\ninterface MemberOption {\n  name: string\n  member: Member\n}\n\ninterface MemberAutocompleteProps {\n  onItemSelected: (value: { name: string; member: Member }) => void\n}\n\nexport default function MemberAutocomplete(props: MemberAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<MemberOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const members = (await response.json()) as MemberResponse\n      if (active) {\n        setOptions(\n          members.data.map(p => ({\n            name: `${p.name} ${\n              p.User && p.User.email ? p.User.email : p.registration_email\n            }`,\n            member: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 0) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Member search\"\n          fullWidth\n          autoFocus\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport Loading from '../Loading'\nimport { useOrderService } from './useOrderService'\nimport {\n  Order,\n  OrderRouterProps,\n  OrderStatus,\n  ShipmentStatus,\n  PaymentStatus\n} from '../types/Order'\nimport { LineItem } from '../types/Order'\nimport OrderLineItems from './OrderLineItems'\nimport LineItemAutocomplete from './LineItemAutocomplete'\nimport MemberAutocomplete from './MemberAutocomplete'\nimport { Product } from '../types/Product'\nimport { Member } from '../types/Member'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES,\n  TAX_RATE_STRING\n} from '../constants'\n\nconst blankOrder: Order = {\n  id: 'new',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  total: 0.0,\n  item_count: 0,\n  subtotal: 0,\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  notes: '',\n  createdAt: '',\n  updatedAt: '',\n  OrderLineItems: []\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    form: {\n      marginBottom: theme.spacing(4)\n    },\n    formInput: {\n      display: 'block',\n      marginBottom: theme.spacing(2)\n    },\n    status: {\n      marginBottom: theme.spacing(2)\n    },\n    liHeader: {\n      display: 'inline-block',\n      marginRight: theme.spacing(2)\n    },\n    sticky: {\n      [theme.breakpoints.up('md')]: {\n        position: 'sticky',\n        top: '0px'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    saveBtn: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(2)\n    }\n  })\n)\n\ninterface EditOrderProps {\n  userService?: UserService\n}\n\nfunction EditOrder(\n  props: EditOrderProps & RouteComponentProps<OrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orderId, setOrderId] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [order, setOrder] = useState<Order>(blankOrder)\n  const [saving, setSaving] = useState(false)\n  const [showLiAutocomplete, setShowLiAutocomplete] = useState(false)\n  const [showMemberAutocomplete, setShowMemberAutocomplete] = useState(false)\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n  const [needToCheckForDiscounts, setNeedToCheckForDiscounts] = useState(true)\n  const [canApplyMemberDiscount, setCanApplyMemberDiscount] = useState(false)\n  const orderService = useOrderService(orderId, setLoading)\n\n  useEffect(() => {\n    if (orderService.status === 'loaded') {\n      if (orderService.payload) {\n        const _order = orderService.payload\n        if (\n          _order.Member &&\n          _order.Member.discount &&\n          _order.Member.discount > 0\n        ) {\n          setCanApplyMemberDiscount(true)\n        }\n        setOrder(_order)\n      }\n    }\n  }, [orderService])\n\n  const pOrderId = props.match.params.id\n\n  useEffect(() => {\n    if (pOrderId && pOrderId !== 'new') {\n      setOrderId(pOrderId)\n    }\n  }, [pOrderId])\n\n  useEffect(() => {\n    if (\n      order &&\n      !order.UserId &&\n      props.userService &&\n      props.userService.user &&\n      props.userService.user.id\n    ) {\n      const UserId = props.userService.user.id\n      UserId &&\n        setOrder(prevOrder => ({\n          ...prevOrder,\n          UserId\n        }))\n    }\n  }, [props.userService, order])\n\n  useEffect(() => {\n    if (!needToCheckForDiscounts || !order) {\n      setNeedToCheckForDiscounts(false)\n      return\n    }\n    if (order && order.OrderLineItems && canApplyMemberDiscount) {\n      const discountAmt = order.OrderLineItems.map(li => {\n        let canDiscount = false\n        if (li.data && li.data.product && li.selected_unit === 'CS') {\n          canDiscount =\n            li.data.product.ws_price !== li.data.product.ws_price_cost\n        } else if (li.data && li.data.product && li.selected_unit === 'EA') {\n          canDiscount = li.data.product.u_price !== li.data.product.u_price_cost\n        }\n        if (canDiscount && li.data && li.data.product) {\n          const price =\n            li.selected_unit === 'CS'\n              ? parseFloat(li.data.product.ws_price_cost)\n              : parseFloat(li.data.product.u_price_cost)\n\n          return +(li.total - price * li.quantity).toFixed(2)\n        } else {\n          return 0\n        }\n      }).reduce((acc, v) => acc + v, 0)\n\n      if (discountAmt > 0) {\n        const discountPrice = -discountAmt.toFixed(2)\n        const discounts = order.OrderLineItems.filter(\n          li => li.kind === 'adjustment' && li.description === 'member discount'\n        )\n        if (discounts[0]) {\n          if (discounts[0].total !== discountPrice) {\n            const idx = order.OrderLineItems.indexOf(discounts[0])\n            updateLineItem(idx, {\n              ...discounts[0],\n              price: discountPrice,\n              total: discountPrice\n            })\n          }\n        } else {\n          const adjustment: LineItem = {\n            description: 'member discount',\n            quantity: 1,\n            price: discountPrice,\n            total: discountPrice,\n            kind: 'adjustment'\n          }\n          setOrder(prevOrder => ({\n            ...prevOrder,\n            OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n          }))\n        }\n      }\n    }\n\n    setNeedToCheckForDiscounts(false)\n  }, [needToCheckForDiscounts, order, canApplyMemberDiscount])\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function onAddLineitem(value: { name: string; product: Product }) {\n    if (!value) {\n      return\n    }\n    const { product } = value\n    if (value && value.name && product) {\n      const lineItem: LineItem = {\n        description: `${product.name} ${product.description}`,\n        quantity: 1,\n        selected_unit: 'CS',\n        price: parseFloat(product.ws_price),\n        total: parseFloat(product.ws_price),\n        kind: 'product',\n        vendor: product.vendor,\n        data: { product }\n      }\n      setOrder(order => ({\n        ...order,\n        item_count:\n          order.OrderLineItems.filter(li => li.kind === 'product').length + 1,\n        OrderLineItems: [...order.OrderLineItems, lineItem]\n      }))\n      setNeedToCheckForDiscounts(true)\n    }\n  }\n\n  function updateLineItem(idx: number, line_item: LineItem) {\n    setOrder(prevOrder => {\n      let orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1, line_item)\n\n      return {\n        ...prevOrder,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n  function onLineItemUpdated(idx: number, line_item: LineItem) {\n    updateLineItem(idx, line_item)\n    setNeedToCheckForDiscounts(true)\n  }\n  function removeLineItem(idx: number) {\n    if (idx > -1) {\n      const li = order.OrderLineItems[idx]\n      if (li.kind === 'adjustment' && li.description === 'member discount') {\n        setCanApplyMemberDiscount(false)\n      }\n    }\n    setOrder(prevOrder => {\n      const orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1)\n      const item_count = orderLineItems.filter(li => li.kind === 'product')\n        .length\n      return {\n        ...prevOrder,\n        item_count,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n\n  function createAdjustment(event: any) {\n    const adjustment: LineItem = {\n      description: 'new adjustment',\n      quantity: 1,\n      price: 0.0,\n      total: 0.0,\n      kind: 'adjustment'\n    }\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function onMembertemSelected(value?: { name: string; member: Member }) {\n    if (value && value.member) {\n      const { id, name, phone, address } = value.member // email\n      const email =\n        value.member.User && value.member.User.email\n          ? value.member.User.email\n          : value.member.registration_email\n      setOrder(prevOrder => ({\n        ...prevOrder,\n        name: name || '',\n        email: email || '',\n        phone: phone || '',\n        address: address || '',\n        MemberId: id\n      }))\n      setShowMemberAutocomplete(false)\n    }\n  }\n\n  const onSaveBtnClick = (): void => {\n    setSaving(true)\n    const path =\n      orderId && orderId !== 'new' ? '/order/update' : '/order/create'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(order)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.success) {\n          setSnackOpen(true)\n          setSnackMsg('Saved order!')\n          if (response.order.id && (!orderId || orderId === 'new')) {\n            props.history.replace(`/orders/edit/${response.order.id}`)\n          }\n        }\n      })\n      .finally(() => setSaving(false))\n  }\n\n  function onTaxesChange(tax: number) {\n    console.log('onTaxesChange tax:', tax)\n    setOrder(prevOrder => {\n      const notTaxLineItems = prevOrder.OrderLineItems.filter(\n        li => li.kind !== 'tax'\n      )\n\n      return {\n        ...prevOrder,\n        OrderLineItems: [\n          ...notTaxLineItems,\n          {\n            kind: 'tax',\n            description: `tax ${TAX_RATE_STRING}`,\n            quantity: 1,\n            price: tax,\n            total: tax\n          }\n        ]\n      }\n    })\n  }\n\n  function onSubTotalChange(subtotal: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      subtotal\n    }))\n  }\n\n  function onTotalChange(total: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      total\n    }))\n  }\n\n  function valueFor(field: keyof Order) {\n    return order && order[field] ? order[field] : ''\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      status: event.target.value as OrderStatus\n    }))\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      payment_status: event.target.value as PaymentStatus\n    }))\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      shipment_status: event.target.value as ShipmentStatus\n    }))\n  }\n\n  const shouldShowAddMemberDiscount =\n    !canApplyMemberDiscount ||\n    (order &&\n      order.OrderLineItems.filter(li => li.description === 'member discount')\n        .length === 0)\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={12} md={4}>\n            <div className={classes.sticky}>\n              {showMemberAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowMemberAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <MemberAutocomplete onItemSelected={onMembertemSelected} />\n                </div>\n              ) : (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    minHeight: '54px'\n                  }}\n                >\n                  <div>\n                    <Tooltip title=\"BACK TO ORDERS\">\n                      <IconButton\n                        aria-label=\"back to orders\"\n                        onClick={() => props.history.push('/orders')}\n                      >\n                        <ArrowBackIcon />\n                      </IconButton>\n                    </Tooltip>\n\n                    <h2 style={{ display: 'inline-block' }}>\n                      {orderId && orderId !== 'new' ? (\n                        <>\n                          EDIT ORDER <i>#{order.id}</i>\n                        </>\n                      ) : (\n                        'CREATE ORDER'\n                      )}\n                    </h2>\n                  </div>\n                  <div className={classes.saveBtn}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={onSaveBtnClick}\n                      disabled={saving}\n                      fullWidth\n                    >\n                      Save\n                    </Button>\n                  </div>\n                  <div>\n                    <Tooltip title=\"ADD USER DETAILS\">\n                      <IconButton\n                        aria-label=\"add user details\"\n                        onClick={() => setShowMemberAutocomplete(true)}\n                      >\n                        <PeopleIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {order.status !== 'new' && order.status !== 'needs_review' && (\n              <Box color=\"error.main\">\n                <Typography variant=\"overline\" display=\"block\">\n                  ohey!\n                </Typography>\n                <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                  this order status is not \"new\" or \"needs review\" so making\n                  changes might not be great...\n                </Typography>\n              </Box>\n            )}\n            {order.Member && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has discount:{' '}\n                  <b>\n                    {order.Member.discount}{' '}\n                    {order.Member.discount_type &&\n                      `(${order.Member.discount_type})`}\n                  </b>\n                </Typography>\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has store credit: <b>{order.Member.store_credit}</b>\n                </Typography>\n              </Box>\n            )}\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"name\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.name}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, name: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"email\"\n                type=\"email\"\n                className={classes.formInput}\n                fullWidth\n                value={order.email}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, email: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"phone\"\n                type=\"phone\"\n                className={classes.formInput}\n                fullWidth\n                value={order.phone}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, phone: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"address\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.address}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, address: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"notes\"\n                className={classes.formInput}\n                multiline\n                rowsMax=\"20\"\n                fullWidth\n                value={order.notes}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, notes: event.target.value }))\n                }}\n              />\n\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </form>\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <div>\n              {showLiAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowLiAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <LineItemAutocomplete onItemSelected={onAddLineitem} />\n                </div>\n              ) : (\n                <>\n                  <Button\n                    aria-label=\"add line items\"\n                    size=\"large\"\n                    onClick={() => setShowLiAutocomplete(true)}\n                  >\n                    <AddIcon />\n                    LINE ITEMS\n                  </Button>\n\n                  <Button\n                    aria-label=\"add adjustment\"\n                    size=\"large\"\n                    onClick={createAdjustment}\n                  >\n                    <AddIcon />\n                    ADJUSTMENT\n                  </Button>\n\n                  {shouldShowAddMemberDiscount && (\n                    <Button\n                      aria-label=\"add member discount\"\n                      size=\"large\"\n                      onClick={() => {\n                        setCanApplyMemberDiscount(true)\n                        setNeedToCheckForDiscounts(true)\n                      }}\n                    >\n                      <AddIcon />\n                      MEMBER DISCOUNT\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n            <OrderLineItems\n              line_items={order.OrderLineItems}\n              onLineItemUpdated={onLineItemUpdated}\n              removeLineItem={removeLineItem}\n              onTaxesChange={onTaxesChange}\n              onTotalChange={onTotalChange}\n              onSubTotalChange={onSubTotalChange}\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(EditOrder))\n","import React, { createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { MemberRouterProps } from '../types/Member'\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Members(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const tableRef = createRef<any>()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const newMemberAction = {\n    icon: 'add',\n    tooltip: 'add new member',\n    isFreeAction: true,\n    onClick: () => props.history.push('/members/new')\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove Member',\n    icon: 'delete',\n    onClick: (e: any, member: Member | Member[]) => {\n      let members: Member[]\n      if (Array.isArray(member)) {\n        members = member\n      } else {\n        members = [member]\n      }\n\n      if (!members || members.length === 0) {\n        return\n      }\n      const id = members[0].id\n      if (window.confirm(`Are you sure you want to delete this member?`)) {\n        fetch(`${API_HOST}/member`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ id })\n        })\n          .then(response => response.json())\n          .then(() => tableRef.current && tableRef.current.onQueryChange())\n          .catch(err => console.warn('members deleteAction caught err', err))\n      }\n    }\n  }\n\n  const editAction = {\n    icon: 'edit',\n    tooltip: 'edit member',\n    onClick: (e: any, members: Member | Member[]) => {\n      let member: Member\n      if (Array.isArray(members)) {\n        member = members[0]\n      } else {\n        member = members\n      }\n      member.id && props.history.push(`/members/${member.id}`)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row =>\n              row.createdAt && new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'registration email',\n            field: 'registration_email',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'phone', field: 'phone', type: 'string', filtering: false },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'discount', field: 'discount', type: 'string' },\n          { title: 'discount type', field: 'discount_type', type: 'string' },\n          { title: 'fees paid', field: 'fees_paid', type: 'string' },\n          { title: 'store credit', field: 'store_credit', type: 'string' },\n          { title: 'shares', field: 'shares', type: 'string' },\n          { title: 'type', field: 'member_type', type: 'string' },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            hidden: true\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/members`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Members\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={[newMemberAction, deleteAction, editAction]}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Members)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\n// import FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\n// import Menu from '@material-ui/core/Menu'\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Member, MemberRouterProps } from '../types/Member'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankMember: Member = {\n  id: 'new',\n  registration_email: '',\n  name: '',\n  phone: '',\n  address: '',\n  discount: 0,\n  discount_type: '',\n  fees_paid: 0,\n  store_credit: 0,\n  shares: 0,\n  member_type: '',\n  data: {}\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    sticky: {\n      [theme.breakpoints.up('sm')]: {\n        position: 'sticky',\n        top: '0'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n)\n\nfunction EditMember(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const [loadingMember, setLoadingMember] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n  const memberId = props.match.params.id\n\n  const [member, setMember] = useState<Member>(blankMember)\n\n  useEffect(() => {\n    if (!memberId || memberId === 'undefined') {\n      return\n    }\n\n    if (memberId === 'new') {\n      setMember(blankMember)\n      setLoadingMember(false)\n    } else {\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          filters: [\n            {\n              column: {\n                field: 'id'\n              },\n              value: memberId\n            }\n          ]\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('zomfg response:', response)\n          setMember(response.data[0] as Member)\n        })\n        .catch(err => setMember(blankMember))\n        .finally(() => setLoadingMember(false))\n    }\n  }, [memberId])\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n\n    const path = memberId === 'new' ? '/create' : '/update'\n\n    fetch(`${API_HOST}/member${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ member })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      {loadingMember ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={6}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                minHeight: '54px'\n              }}\n              className={classes.sticky}\n            >\n              <Tooltip title=\"BACK TO MEMBERS\">\n                <IconButton\n                  aria-label=\"back to members\"\n                  onClick={() => props.history.push('/members')}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </Tooltip>\n\n              <h2>{memberId === 'new' ? 'Create' : 'Edit'} Member</h2>\n            </div>\n\n            <TextField\n              label=\"email\"\n              fullWidth\n              value={member.registration_email}\n              className={classes.gridItem}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  registration_email: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"name\"\n              fullWidth\n              value={member.name}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  name: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"phone\"\n              fullWidth\n              value={member.phone}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  phone: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"address\"\n              fullWidth\n              value={member.address}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  address: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount\"\n              fullWidth\n              value={member.discount}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount type\"\n              fullWidth\n              value={member.discount_type}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount_type: event.target.value\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"fees paid\"\n              fullWidth\n              value={member.fees_paid}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  fees_paid: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"store credit\"\n              fullWidth\n              value={member.store_credit}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  store_credit: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"shares\"\n              fullWidth\n              value={member.shares}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  shares: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <InputLabel id=\"prev-import-tag-select-label\">Type</InputLabel>\n              <Select\n                labelId=\"prev-import-tag-select-label\"\n                id=\"prev-import-tag-select\"\n                value={member.member_type}\n                onChange={event =>\n                  event.target &&\n                  event.target.value &&\n                  setMember(prevMember => ({\n                    ...prevMember,\n                    member_type: event.target.value as string\n                  }))\n                }\n              >\n                <MenuItem value=\"consumer-owners\">consumer-owner</MenuItem>\n                <MenuItem value=\"worker-owners\">worker-owner</MenuItem>\n                <MenuItem value=\"producer-owners\">producer owner</MenuItem>\n              </Select>\n            </FormControl>\n\n            <div className={classes.gridItem}>\n              <Button\n                disabled={loading}\n                onClick={() => submitData()}\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                {memberId === 'new' ? 'CREATE' : 'SAVE'}\n              </Button>\n            </div>\n          </Grid>\n\n          <Grid item sm={6} className={classes.sticky}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </Paper>\n  )\n}\n\nexport default withRouter(EditMember)\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport clsx from 'clsx'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport Fab from '@material-ui/core/Fab'\nimport MUISwitch from '@material-ui/core/Switch'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport FaceIcon from '@material-ui/icons/Face'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { darkTheme, lightTheme } from './theme'\nimport { mainListItems } from './listItems' // secondaryListItems\n\nimport { RootState } from './redux'\nimport { UserServiceProps } from './redux/session/reducers'\nimport { checkSession, logout } from './redux/session/actions'\n\nimport { Preferences } from './types/Preferences'\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\nimport { getPreferences, setPreferences } from './redux/preferences/actions'\n\nimport Loading from './Loading'\nimport Dashboard from './dashboard/Dashboard'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ProtectedRoute from './auth/ProtectedRoute'\n// import UserMenu from './auth/UserMenu'\nimport Pages from './pages/Pages'\nimport Orders from './orders/Orders'\nimport WholesaleOrders from './wholesaleorders/WholesaleOrders'\nimport Users from './users/Users'\nimport Products from './products/Products'\nimport ImportProducts from './products/ImportProducts'\nimport EditOrder from './orders/EditOrder'\nimport Members from './members/Members'\nimport EditMember from './members/EditMember'\nimport { APP_VERSION } from './constants'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: '100vh'\n    },\n    nav: {\n      // background: theme.palette.primary.main,\n      zIndex: theme.zIndex.speedDial,\n      display: 'flex',\n      // height: '48px',\n      // width: '48px',\n      alignItems: 'center',\n      position: 'fixed',\n      // bottom: theme.spacing(1),\n      // top: 'calc(50vh  - 28px)',\n      top: '-12px',\n      left: '-24px',\n      transition: '200ms ease-in-out',\n      '& svg': {\n        display: 'none'\n      },\n      '&:hover': {\n        top: -6,\n        left: -12\n      },\n      '&:hover svg': {\n        display: 'inline-block'\n      }\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    version: {\n      fontStyle: 'italic',\n      fontSize: '0.8em',\n      flexGrow: 1,\n      alignSelf: 'center',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    content: {\n      marginLeft: '16px'\n    }\n  })\n)\n\ninterface DispatchProps {\n  checkSession: () => void\n  getPreferences: () => void\n  setPreferences: (preferences: Preferences) => void\n  logout: () => void\n}\n\ntype Props = UserServiceProps & PreferencesServiceProps & DispatchProps\n\nexport function App(props: Props) {\n  const [loading, setLoading] = useState(true)\n  const [useDarkTheme, setUseDarkTheme] = useState<null | boolean>(null)\n\n  // checkSession is destructured from props and passed into useEffect\n  // which is a bit confusing since checkSession is also imported. ah scope.\n  const {\n    checkSession,\n    userService,\n    getPreferences,\n    preferencesService,\n    setPreferences\n  } = props\n\n  useEffect(() => {\n    getPreferences && getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      !preferencesService.isFetching &&\n      preferencesService.preferences\n    ) {\n      if (useDarkTheme === null) {\n        setUseDarkTheme(\n          preferencesService.preferences.dark_mode === 'true' ? true : false\n        )\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [preferencesService])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      preferencesService.preferences &&\n      (preferencesService.preferences.dark_mode === 'true' ? true : false) !==\n        useDarkTheme\n    ) {\n      setPreferences({ dark_mode: useDarkTheme ? 'true' : 'false' })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useDarkTheme])\n\n  useEffect(() => {\n    checkSession && checkSession()\n  }, [checkSession])\n\n  useEffect(() => {\n    if (userService) {\n      !userService.isFetching && userService.user && setLoading(false)\n      setOpen(userService.isFetching && !!userService.user)\n    }\n  }, [userService])\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  const theme =\n    preferencesService &&\n    preferencesService.preferences &&\n    preferencesService.preferences.dark_mode === 'true'\n      ? darkTheme\n      : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <div className={classes.nav}>\n                {/* <IconButton\n              edge=\"start\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(true)}\n            >\n              \n            </IconButton> */}\n\n                <Fab\n                  color=\"secondary\"\n                  aria-label=\"menu\"\n                  onClick={() => setOpen(true)}\n                >\n                  <MenuIcon />\n                </Fab>\n              </div>\n            )}\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <Drawer\n                classes={{\n                  paper: clsx(classes.drawerPaper)\n                }}\n                onClose={() => setOpen(false)}\n                open={open}\n              >\n                <List onClick={() => setOpen(false)}>{mainListItems}</List>\n\n                <Divider />\n                <ListItem button onClick={() => setUseDarkTheme(prev => !prev)}>\n                  <ListItemText>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <span>Dark Theme</span>\n                      <MUISwitch\n                        checked={\n                          useDarkTheme === null || useDarkTheme === undefined\n                            ? false\n                            : useDarkTheme\n                        }\n                        value=\"useDarkTheme\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </div>\n                  </ListItemText>\n                </ListItem>\n                <Divider />\n                <ListItem button onClick={() => props.logout()}>\n                  <ListItemIcon>\n                    <FaceIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"log out\"\n                    secondary={\n                      userService && userService.user\n                        ? userService.user.email\n                        : ''\n                    }\n                  />\n                </ListItem>\n\n                {/* <List>{secondaryListItems}</List>  */}\n                <div className={classes.version}>\n                  <span>{APP_VERSION}</span>\n                </div>\n              </Drawer>\n            )}\n\n          <main className={classes.content}>\n            {/* ROUTER */}\n\n            {loading ? (\n              <Loading />\n            ) : (\n              <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products\"\n                  component={Products}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products/import\"\n                  component={ImportProducts}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders\"\n                  exact\n                  component={Orders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/edit/:id\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/create\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/wholesaleorders\"\n                  component={WholesaleOrders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/users\"\n                  component={Users}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members\"\n                  component={Members}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members/:id\"\n                  component={EditMember}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/pages\"\n                  component={Pages}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/\"\n                  component={Dashboard}\n                />\n              </Switch>\n            )}\n\n            {/* <Box pt={4}>FOOT'r</Box> */}\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState\n): UserServiceProps & PreferencesServiceProps => {\n  return {\n    userService: states.session.userService,\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    checkSession: () => dispatch(checkSession()),\n    getPreferences: () => dispatch(getPreferences()),\n    setPreferences: (preferences: Preferences) =>\n      dispatch(setPreferences(preferences)),\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}