{"version":3,"sources":["listItems.tsx","constants.ts","redux/session/actions.ts","redux/preferences/actions.ts","Loading.tsx","dashboard/Title.tsx","dashboard/Orders.tsx","dashboard/Dashboard.tsx","auth/Login.tsx","auth/Register.tsx","auth/ProtectedRoute.tsx","auth/UserMenu.tsx","pages/usePageService.ts","pages/EditPageMenu.tsx","pages/EditPage.tsx","pages/Pages.tsx","orders/OrderDetailPanel.tsx","orders/Orders.tsx","wholesaleorders/useWholesaleOrderService.ts","wholesaleorders/EditMenu.tsx","wholesaleorders/WholesaleOrderLineItems.tsx","wholesaleorders/EditWholesaleOrder.tsx","wholesaleorders/AddWholesaleOrderLineItems.tsx","wholesaleorders/WholesaleOrders.tsx","users/NewUserModal.tsx","users/UserRolesMenu.tsx","users/Users.tsx","products/Products.tsx","products/ImportProducts.tsx","orders/useOrderService.ts","orders/OrderLineItems.tsx","orders/LineItemAutocomplete.tsx","orders/MemberAutocomplete.tsx","orders/EditOrder.tsx","members/Members.tsx","members/EditMember.tsx","App.tsx","theme.tsx","redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","index.tsx"],"names":["mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","API_HOST","TAX_RATE","TAX_RATE_STRING","toFixed","ORDER_STATUSES","new","needs_review","pending","complete","void","archived","PAYMENT_STATUSES","balance_due","paid","credit_owed","failed","SHIPMENT_STATUSES","backorder","ready","shipped","partial","canceled","APP_VERSION","process","npm_package_version","require","version","set","user","type","setError","error","isFetching","NULL_USER","id","undefined","email","token","DEFAULT_PREFERENCES","dark_mode","preferences","Loading","Container","fixed","Box","pt","style","textAlign","Title","props","Typography","variant","color","gutterBottom","children","createData","date","name","shipTo","paymentMethod","amount","rows","preventDefault","event","useStyles","makeStyles","theme","seeMore","marginTop","spacing","Orders","classes","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","className","href","onClick","root","padding","paper","display","overflow","flexDirection","fixedHeight","height","Dashboard","fixedHeightPaper","clsx","Grid","container","item","xs","md","lg","Paper","form","width","minHeight","justifyContent","submit","margin","connect","states","ownProps","userService","session","dispatch","login","password","a","async","Promise","resolve","fetch","method","headers","body","JSON","stringify","then","response","json","msg","localStorage","setItem","reason","message","catch","e","console","log","finally","withRouter","history","useState","useEffect","role","push","maxWidth","onSubmit","target","currentTarget","emailEl","elements","namedItem","passwordEl","value","length","TextField","label","autoFocus","fullWidth","required","Button","disabled","register","regKey","regKeyParam","URLSearchParams","useLocation","search","get","passwordConfirmEl","regKeyEl","ProtectedRoute","Component","rest","render","isAdmin","pathname","state","from","location","logout","removeItem","React","anchorEl","setAnchorEl","handleClose","IconButton","aria-controls","aria-haspopup","Badge","badgeContent","keepMounted","open","Boolean","onClose","MenuItem","getItem","usePageService","slug","setLoading","status","result","setResult","payload","warn","useAllPagesService","reloadPages","setReloadPages","Authorization","usePageSaveService","page","doSave","setDoSave","setSnackMsg","setSnackOpen","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","withStyles","backgroundColor","palette","main","common","white","EditPageMenu","ButtonGroup","aria-label","startIcon","onSaveBtnClick","window","confirm","onDeleteBtnClick","fontSize","createStyles","pageName","marginBottom","marginRight","pageSlug","setPageSlug","content","setPage","loading","pageService","snackOpen","snackMsg","handleSnackClose","match","params","onChange","prevPage","replace","multiline","rowsMax","Snackbar","autoHideDuration","ContentProps","action","title","alignItems","titleText","flexGrow","text","secondary","Default","pages","setPages","allPages","direction","justify","sm","List","Divider","idx","path","exact","EditPage","borderLeft","divider","gridHeading","gridItem","paddingBottom","paddingLeft","paddingRight","lastUpdated","marginLeft","OrderDetailPanel","order","line_items","OrderLineItems","adjustments","filter","li","kind","item_count","scope","vendor","description","data","product","unf","price","selected_unit","quantity","total","colSpan","subtotal","phone","address","User","Member","notes","createdAt","updatedAt","Date","toLocaleString","tableRef","createRef","searchExpanded","setSearchExpanded","isSelecting","setIsSelecting","searchAction","icon","tooltip","isFreeAction","newOrderAction","printAction","orderIds","wOpen","document","innerHTML","err","editAction","actions","setActions","columns","field","filtering","lookup","hidden","query","reject","totalCount","detailPanel","onRowClick","rowData","togglePanel","options","headerStyle","position","top","maxBodyHeight","pageSize","pageSizeOptions","debounceInterval","emptyRowsWhenPaging","selection","onSelectionChange","blankWholesaleOrder","payment_status","shipment_status","useWholesaleOrderService","reload","setReload","useAllWholesaleOrdersService","reloadWholesaleOrders","setReloadWholesaleOrders","useWholesaleOrderSaveService","wholesaleOrder","EditMenu","onProductsExportToCsv","liTable","deleteBtn","minWidth","groupedRow","background","default","groupedRowTotals","typography","h6","lineItems","lineItemData","setLineItemData","groupedLineItems","prevData","productTotal","adjustmentTotal","orderTotal","forEach","acc","qty","pk","liTotal","parseFloat","ws_price_cost","qtySum","totalSum","Object","values","reduce","v","Math","abs","u_price_cost","round","Tooltip","ids","removeLineItem","upc_code","category","sub_category","ws_price","u_price","import_tag","OrderId","keys","editMenu","wholesaleOrderId","setWholesaleOrderId","setWholesaleOrder","wholesaleOrderService","valueFor","prevOrder","FormControl","InputLabel","Select","labelId","setReloadOrders","onExportToCsv","Accept","responseText","filename","navigator","msSaveBlob","blobObject","Blob","anchor","createElement","download","URL","createObjectURL","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","saveStreamCSV","AddWholesaleOrderLineItems","needsRefresh","setNeedsRefresh","refreshTable","useCallback","current","onQueryChange","selectedLineItems","setSelectedLineItems","addAction","handleWholesaleOrderMenuOpen","Array","isArray","wholesaleorderLookup","setWholesaleOrderLookup","toLocaleDateString","wholesaleorderMenuAnchorEl","setWholesaleOrderMenuAnchorEl","handleWholesaleOrderMenuClose","handleWholesaleOrderSelect","filterPlaceholder","wholesaleorder","ExpansionPanel","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","paperNav","list","selectedListItem","noOrdersMsg","wholesaleOrders","setWholesaleOrders","reloadOrders","selectedStatus","setSelectedStatus","allWholesaleOrders","split","reverse","isNaN","parseInt","square","defaultExpanded","loadOrdersForStatus","expandIcon","modal","shadows","ROLES","NewUserModal","setEmail","setRole","setDiabled","includes","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","handleRefresh","UserRolesMenu","handleRoleChange","resp","newUserModalOpen","setNewUserModalOpen","newUserAction","deleteAction","alert","PROPERTY_MAP","c","d","f","g","k","l","m","og","r","w","ft","n","s","y","1","2","3","Products","p","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","setVendorLookup","vendorLookup","CS","EA","codes","code","Chip","ImportProducts","setVendor","importTag","setImportTag","prevImportTag","setPrevImportTag","markup","setMarkup","formData","setFormData","setResponse","setImportTagsLookup","importTagsLookup","vendorMenuAnchorEl","setVendorMenuAnchorEl","handleVendorMenuClose","helperText","handleVendorSelect","tag","FormHelperText","inputProps","min","max","step","accept","files","FormData","append","delete","toString","useOrderService","overflowX","table","borderCollapse","qtyinput","usdFormat","num","line_item","orderSubtotal","sum","i","orderAdjustmentsTotal","items","adjustmentsTotal","orderTaxes","onTaxesChange","onTotalChange","onSubTotalChange","handleQtyChange","indexOf","onLineItemUpdated","payments","pksize","join","liPkSize","unit","handleUnitChange","unit_type","InputLabelProps","shrink","rowSpan","handleDescriptionChange","handlePriceChange","InputProps","startAdornment","InputAdornment","LineItemAutocomplete","setOpen","setOptions","q","setQ","active","products","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onItemSelected","freeSolo","renderInput","endAdornment","CircularProgress","MemberAutocomplete","members","registration_email","member","blankOrder","formInput","liHeader","sticky","breakpoints","up","orderId","setOrderId","setOrder","saving","setSaving","showLiAutocomplete","setShowLiAutocomplete","showMemberAutocomplete","setShowMemberAutocomplete","needToCheckForDiscounts","setNeedToCheckForDiscounts","canApplyMemberDiscount","setCanApplyMemberDiscount","orderService","_order","discount","pOrderId","UserId","discountAmt","canDiscount","discountPrice","discounts","updateLineItem","adjustment","orderLineItems","splice","shouldShowAddMemberDiscount","MemberId","noValidate","autoComplete","persist","success","lineItem","tax","notTaxLineItems","newMemberAction","blankMember","discount_type","fees_paid","store_credit","shares","member_type","loadingMember","setLoadingMember","memberId","setMember","filters","column","prevMember","submitData","appBar","zIndex","drawer","flexShrink","drawerPaper","fontStyle","alignSelf","toolbar","mixins","preferencesService","checkSession","getPreferences","rject","parse","CssBaseline","AppBar","Toolbar","edge","noWrap","Drawer","Login","Register","EditOrder","WholesaleOrders","Users","Members","EditMember","Pages","createMuiTheme","red","A400","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","store","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.8a996969.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport PeopleIcon from '@material-ui/icons/People'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products\">\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/import\">\n      <ListItemIcon>\n        <OpenInBrowserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Import Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/orders\">\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/wholesaleorders\">\n      <ListItemIcon>\n        <LocalShippingIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Wholesale Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/users\">\n      <ListItemIcon>\n        <TagFacesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/members\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Members\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/pages\">\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pages\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n","import { OrderStatus, PaymentStatus, ShipmentStatus } from './types/Order'\n\nexport const API_HOST =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n\nexport const TAX_RATE = 0.06175\nexport const TAX_RATE_STRING = `${(TAX_RATE * 100).toFixed(3)}%`\n\ntype OrderStatusLookup = { [key in OrderStatus]: string }\nexport const ORDER_STATUSES: OrderStatusLookup = {\n  new: 'new',\n  needs_review: 'needs review',\n  pending: 'pending',\n  complete: 'complete',\n  void: 'void',\n  archived: 'archived'\n}\n\ntype OrderPaymentStatusLookup = { [key in PaymentStatus]: string }\nexport const PAYMENT_STATUSES: OrderPaymentStatusLookup = {\n  balance_due: 'balance due',\n  paid: 'paid',\n  credit_owed: 'credit owed',\n  failed: 'failed',\n  void: 'void'\n}\n\ntype OrderShipmentStatusLookup = { [key in ShipmentStatus]: string }\nexport const SHIPMENT_STATUSES: OrderShipmentStatusLookup = {\n  backorder: 'backorder',\n  pending: 'pending',\n  ready: 'ready',\n  shipped: 'shipped',\n  partial: 'partial',\n  canceled: 'canceled'\n}\n\nexport const APP_VERSION = `v${process.env.npm_package_version ||\n  require('../package.json').version} made with ♥ in NYC`\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { User, LoginError } from '../../types/User'\nimport { API_HOST } from '../../constants'\n\nexport interface SetAction {\n  type: 'SET'\n  user: User\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR'\n  error: LoginError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (user: User): SetAction => {\n  return { type: 'SET', user }\n}\nexport const setError = (error: LoginError): SetError => {\n  return { type: 'SET_ERROR', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING', isFetching }\n}\n\nconst NULL_USER: User = {\n  id: undefined,\n  email: undefined,\n  token: undefined\n}\n\nexport const checkSession = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      const token = localStorage && localStorage.getItem('token')\n\n      if (!token) {\n        // reject('no token')\n        dispatch(isFetching(false))\n        dispatch(set({ email: undefined, token: undefined }))\n        resolve()\n        return\n      }\n\n      fetch(`${API_HOST}/check_session`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('check_session', response)\n          if (response.msg === 'ok' && response.user) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(set(NULL_USER))\n          }\n        })\n        .catch(err => {\n          console.warn('check_session caught err:', err)\n          // hmm, maybe the API is just down? ...is it really necessary to NULL the user?\n          dispatch(set(NULL_USER))\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const register = (\n  regKey: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ regKey, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('register error:', e)\n          dispatch(\n            setError({\n              error: 'error',\n              reason: 'unable to register right now :('\n            })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('login error:', e)\n          dispatch(\n            setError({ error: 'error', reason: 'unable to login right now :(' })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n      localStorage && localStorage.removeItem('token')\n      dispatch(set(NULL_USER))\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'false'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React from 'react'\nimport { Container } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nexport default function Loading() {\n  return (\n    <Container fixed>\n      <Box pt={4} style={{ textAlign: 'center' }}>\n        L O A D I N G . . .\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: { children: React.ReactNode }) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\n\n// Generate Order Data\nfunction createData(\n  id: any,\n  date: any,\n  name: any,\n  shipTo: any,\n  paymentMethod: any,\n  amount: any\n) {\n  return { id, date, name, shipTo, paymentMethod, amount }\n}\n\nconst rows = [\n  createData(\n    0,\n    '16 Mar, 2019',\n    'Elvis Presley',\n    'Tupelo, MS',\n    'VISA ⠀•••• 3719',\n    312.44\n  ),\n  createData(\n    1,\n    '16 Mar, 2019',\n    'Paul McCartney',\n    'London, UK',\n    'VISA ⠀•••• 2574',\n    866.99\n  ),\n  createData(\n    2,\n    '16 Mar, 2019',\n    'Tom Scholz',\n    'Boston, MA',\n    'MC ⠀•••• 1253',\n    100.81\n  ),\n  createData(\n    3,\n    '16 Mar, 2019',\n    'Michael Jackson',\n    'Gary, IN',\n    'AMEX ⠀•••• 2000',\n    654.39\n  ),\n  createData(\n    4,\n    '15 Mar, 2019',\n    'Bruce Springsteen',\n    'Long Branch, NJ',\n    'VISA ⠀•••• 5919',\n    212.79\n  )\n]\n\nfunction preventDefault(event: any) {\n  event.preventDefault()\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nexport default function Orders() {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n// import Link from '@material-ui/core/Link'\nimport Orders from './Orders'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <Grid container spacing={3} className={classes.root}>\n      {/* Chart */}\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>CHART</Paper>\n      </Grid>\n      {/* Recent Deposits */}\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>DEPOZ</Paper>\n      </Grid>\n      {/* Recent Orders */}\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <Orders />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { login } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  login: (email: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%',\n    minHeight: 'calc(100vh - 64px)',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction Login(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n    const emailEl = target.elements.namedItem('email') as HTMLInputElement\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n\n    if (\n      emailEl &&\n      emailEl.value.length > 0 &&\n      passwordEl &&\n      passwordEl.value.length > 0\n    ) {\n      props.login(emailEl.value, passwordEl.value)\n    }\n  }\n\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={doLogin} className={classes.form}>\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoFocus\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps, useLocation } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { register } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  register: (regKey: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    // minHeight: 'calc(100vh - 64px)'\n  },\n  form: {\n    width: '100%',\n    minHeight: 'calc(100vh - 64px)',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nfunction Register(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n    const passwordConfirmEl = target.elements.namedItem(\n      'password_confirm'\n    ) as HTMLInputElement\n\n    let regKey: string = ''\n\n    if (regKeyParam) {\n      regKey = regKeyParam\n    }\n\n    if (!regKey) {\n      const regKeyEl = target.elements.namedItem('regKey') as HTMLInputElement\n      if (regKeyEl && regKeyEl.value.length > 1) {\n        regKey = regKeyEl.value\n      }\n    }\n\n    if (!regKey) {\n      setError('no registration key')\n    }\n\n    if (\n      passwordEl &&\n      passwordEl.value.length > 0 &&\n      passwordConfirmEl &&\n      passwordConfirmEl.value.length > 0\n    ) {\n      if (passwordConfirmEl.value !== passwordEl.value) {\n        setError('passwords do not match')\n      } else {\n        props.register(regKey, passwordConfirmEl.value)\n      }\n    }\n  }\n\n  let query = useQuery()\n  const regKeyParam = query.get('regKey')\n  console.log('[Register] regKeyParam', regKeyParam)\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={doLogin} className={classes.form}>\n        {!regKeyParam && (\n          <TextField\n            label=\"registration key\"\n            name=\"regKey\"\n            type=\"text\"\n            autoFocus\n            fullWidth\n            required\n          />\n        )}\n\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoFocus={!!regKeyParam}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password_confirm\"\n          name=\"password_confirm\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            submit\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    register: (regKey, password) => dispatch(register(regKey, password))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Register))\n","import React from 'react'\nimport { RouteProps, Redirect, Route } from 'react-router-dom'\n\nimport { UserServiceProps, UserService } from '../redux/session/reducers'\n\nconst isAdmin = (userService: UserService): boolean =>\n  userService.user && userService.user.role && userService.user.role === 'admin'\n    ? true\n    : false\n\ninterface ProtectedRouteProps {\n  children?: React.ReactNode\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  userService,\n  children,\n  ...rest\n}: ProtectedRouteProps & RouteProps & UserServiceProps) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAdmin(userService) ? (\n        Component ? (\n          <Component {...props} />\n        ) : (\n          children\n        )\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default ProtectedRoute\n","import React from 'react'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport TagFaces from '@material-ui/icons/TagFaces'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { RootState } from '../redux'\nimport { UserService } from '../redux/session/reducers'\n// import { UserServiceProps } from '../redux/session/reducers'\nimport { logout } from '../redux/session/actions'\n\ninterface UserServiceProps {\n  userService?: UserService\n}\n\ninterface DispatchProps {\n  logout: () => void\n}\n\nfunction UserMenu(props: UserServiceProps & DispatchProps) {\n  const { userService, logout } = props\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleLogout = () => {\n    logout()\n    handleClose()\n  }\n\n  const isAdmin = (): boolean => {\n    return !!(\n      userService &&\n      userService.user &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    )\n  }\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"user-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <Badge badgeContent={0} color=\"secondary\">\n          <TagFaces />\n        </Badge>\n      </IconButton>\n\n      <Menu\n        id=\"user-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* {isAdmin() && <MenuItem onClick={handleClose}>Profile</MenuItem>}\n        {isAdmin() && <MenuItem onClick={handleClose}>My account</MenuItem>} */}\n        {isAdmin() && <MenuItem onClick={handleLogout}>Logout</MenuItem>}\n\n        {!isAdmin() && <MenuItem onClick={handleClose}>Login</MenuItem>}\n      </Menu>\n    </>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst usePageService = (\n  slug: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!slug || slug.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page?slug=${slug}`)\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Page })\n      })\n      .catch(error => {\n        console.warn('usePageService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [slug, setLoading])\n\n  return result\n}\n\nconst useAllPagesService = (\n  reloadPages: boolean,\n  setReloadPages: (reloadPages: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadPages &&\n      fetch(`${API_HOST}/pages`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('page', response)\n          setResult({ status: 'loaded', payload: response.rows as Page[] })\n        })\n        .catch(error => {\n          console.warn('usePageService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => setReloadPages(false))\n  }, [reloadPages, setReloadPages])\n\n  return result\n}\n\nconst usePageSaveService = (\n  page: Page | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !page || page.slug.length === 0) {\n      setDoSave(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('usePageSaveService response:', response)\n        setResult({ status: 'loaded', payload: response as Page })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('usePageSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [page, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport { usePageService, useAllPagesService, usePageSaveService }\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport SaveIcon from '@material-ui/icons/Save'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Page } from '../types/Page'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditPageMenuProps {\n  page: Page\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n}\n\nexport default function EditPageMenu(props: EditPageMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.page.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete page\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport Loading from '../Loading'\nimport { usePageService, usePageSaveService } from './usePageService'\nimport EditPageMenu from './EditPageMenu'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    row: {\n      display: 'flex'\n    },\n    pageName: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n)\n\nfunction EditPage(props: RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n\n  const [pageSlug, setPageSlug] = useState('')\n  const [page, setPage] = useState<Page>({ slug: '', content: '' })\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n\n  const pageService = usePageService(pageSlug, setLoading)\n\n  useEffect(() => {\n    if (pageService.status === 'loaded') {\n      if (pageService.payload) {\n        setPage(pageService.payload)\n      } else {\n        setPage({ slug: pageSlug, content: '' })\n      }\n    }\n  }, [pageService, pageSlug])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handlePageContentChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPage(prevPage => ({ ...prevPage, content: event.target.value }))\n  }\n\n  const handlePageNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(prevPage => ({ ...prevPage, slug: event.target.value }))\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const slug = props.match.params.slug\n\n  useEffect(() => {\n    if (slug) {\n      setPageSlug(slug)\n    }\n  }, [slug])\n\n  const onSaveBtnClick = (): void => {\n    setDoSave(true)\n  }\n\n  usePageSaveService(page, doSave, setDoSave, setSnackMsg, setSnackOpen)\n\n  const onDeleteBtnClick = (): void => {\n    fetch(`${API_HOST}/page`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setSnackMsg(response.msg)\n          setSnackOpen(true)\n        } else {\n          props.history.replace('/pages')\n        }\n      })\n      .catch(error => {\n        console.warn('delete page fetch caught err:', error)\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n  }\n\n  return page ? (\n    <>\n      <div className={classes.row}>\n        <TextField\n          className={classes.pageName}\n          label=\"permalink\"\n          fullWidth\n          value={page.slug}\n          onChange={handlePageNameChange}\n        />\n\n        <EditPageMenu\n          page={page}\n          onSaveBtnClick={onSaveBtnClick}\n          onDeleteBtnClick={onDeleteBtnClick}\n        />\n      </div>\n\n      {loading ? (\n        <Loading />\n      ) : (\n        <TextField\n          label=\"content\"\n          multiline\n          fullWidth\n          rows={4}\n          rowsMax={28}\n          value={page.content}\n          onChange={handlePageContentChange}\n        />\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditPage)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditPage from './EditPage'\nimport { useAllPagesService } from './usePageService'\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport { Page } from '../types/Page'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    }\n  })\n)\n\nconst Default = () => <h3>pages!</h3>\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Pages(props: Props & RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [pages, setPages] = useState<Page[]>([])\n  const [reloadPages, setReloadPages] = useState(true)\n  const allPages = useAllPagesService(reloadPages, setReloadPages)\n\n  useEffect(() => {\n    allPages.status === 'loaded' && setPages(allPages.payload)\n  }, [allPages])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addPage() {\n    props.history.push('/pages/edit/newpage')\n    setSnackOpen(true)\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid xs={12} sm={4} md={3} lg={2} item>\n          <Paper className={classes.paper}>\n            <List>\n              <ListItem>\n                <ListItemText>\n                  <div className={classes.title}>\n                    <span className={classes.titleText}>PAGES</span>\n                    <IconButton\n                      aria-label=\"add page\"\n                      title=\"add page\"\n                      onClick={() => addPage()}\n                    >\n                      <Add />\n                    </IconButton>\n                  </div>\n                </ListItemText>\n              </ListItem>\n              <Divider />\n              {pages.map((page: Page, idx: number) => (\n                <ListItem\n                  button\n                  component={Link}\n                  to={`/pages/edit/${page.slug}`}\n                  key={`page${idx}`}\n                >\n                  <ListItemText primary={page.slug} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        <Grid xs={12} sm={8} md={9} lg={10} item>\n          <Paper className={classes.paper}>\n            <Switch>\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages\"\n                component={Default}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages/edit/:slug\"\n                component={EditPage}\n              />\n            </Switch>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new page!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Pages))\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\n\nimport { Order } from '../types/Order'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(2),\n      borderLeft: `${theme.spacing(6)}px solid ${theme.palette.divider}`\n    },\n    gridHeading: {\n      color: theme.palette.text.secondary\n    },\n    gridItem: {\n      paddingBottom: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center'\n    },\n    lastUpdated: {\n      marginLeft: theme.spacing(2)\n    }\n  })\n)\n\nexport default function OrderDetailPanel(props: { order: Order }) {\n  const classes = useStyles()\n  const order = props.order\n  const line_items = props.order.OrderLineItems || []\n  const adjustments = line_items.filter(li => li.kind !== 'product')\n\n  return (\n    <div className={classes.root}>\n      <Table aria-label=\"order details table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">\n              Line Items ({order.item_count})\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              price\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              unit\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              qty\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {line_items.map(\n            (li, idx) =>\n              li.kind === 'product' && (\n                <TableRow key={`orderli${idx}`}>\n                  <TableCell component=\"td\" scope=\"row\">\n                    {li.vendor && `[${li.vendor}] ${li.description} `}\n                    {li.data && li.data.product ? `${li.data.product.unf}` : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.price}</TableCell>\n                  <TableCell align=\"right\">{li.selected_unit}</TableCell>\n                  <TableCell align=\"right\">{li.quantity}</TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              )\n          )}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Sub Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.subtotal}\n            </TableCell>\n          </TableRow>\n\n          {adjustments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Adjustments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {adjustments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {`(${li.kind}) `} {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              customer\n            </Typography>\n            <Typography variant=\"body1\">\n              {order.name}{' '}\n              <Link color=\"primary\" href={`mailto:${order.email}`}>\n                {order.email}\n              </Link>\n              <br />\n              <Link color=\"primary\" href={`tel:${order.phone}`}>\n                {order.phone}\n              </Link>\n              <br />\n              {order.address} <br />\n            </Typography>\n          </div>\n        </Grid>\n        {order.User && order.User !== order.Member && (\n          <Grid item xs={4}>\n            <div className={classes.gridItem}>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                className={classes.gridHeading}\n                gutterBottom\n              >\n                created by\n              </Typography>\n              <Typography variant=\"body1\">\n                <Link color=\"primary\" href={`mailto:${order.User.email}`}>\n                  {order.User.email}\n                </Link>{' '}\n                {order.User.role && <>({order.User.role}) </>}\n              </Typography>\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              notes\n            </Typography>\n            <Typography variant=\"body2\">{order.notes}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      {order.createdAt !== order.updatedAt && (\n        <div className={classes.lastUpdated}>\n          <i>Last updated</i> {new Date(order.updatedAt).toLocaleString()}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\nimport { Order } from '../types/Order'\nimport OrderDetailPanel from './OrderDetailPanel'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    }\n  })\n)\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'CLOSE SEARCH' : 'SEARCH',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newOrderAction = {\n    icon: 'add',\n    tooltip: 'NEW ORDER',\n    isFreeAction: true,\n    onClick: () => props.history.push('/orders/create')\n  }\n\n  const printAction = {\n    tooltip: 'PRINT',\n    icon: 'print',\n    onClick: (e: any, data: Order[]) => {\n      const orderIds = data.map(order => order.id)\n      console.log('printAction orderIds:', orderIds, ' data:', data)\n\n      fetch(`${API_HOST}/orders/print`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ orderIds })\n      })\n        .then(response => response.text())\n        .then(result => {\n          try {\n            // eslint-disable-next-line\n            const wOpen = window.open('about:blank')\n            if (wOpen) {\n              wOpen.document.body.innerHTML += result\n            }\n          } catch (e) {\n            console.warn('caught error doing this razzle dazze shit e:', e)\n          }\n        })\n        .catch(err => {\n          console.warn(err)\n        })\n    }\n  }\n\n  const editAction = {\n    tooltip: 'EDIT',\n    icon: 'edit',\n    onClick: (e: any, data: Order[]) => {\n      data[0] && data[0].id && props.history.push(`/orders/edit/${data[0].id}`)\n    }\n  }\n\n  // const archiveAction = {\n  //   tooltip: 'ARCHIVE',\n  //   icon: 'archive',\n  //   onClick: (e: any, data: Order[]) => {\n  //     console.log('archive these muthafuckaz')\n  //   }\n  // }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newOrderAction\n  ])\n\n  useEffect(() => {\n    !isSelecting && setActions([searchAction, newOrderAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, isSelecting]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (order: Order) => new Date(order.createdAt).toLocaleString()\n          },\n          {\n            title: 'status',\n            field: 'status',\n            type: 'string',\n            lookup: ORDER_STATUSES\n          },\n          {\n            title: 'payment status',\n            field: 'payment_status',\n            type: 'string',\n            lookup: PAYMENT_STATUSES\n          },\n          {\n            title: 'shipment status',\n            field: 'shipment_status',\n            type: 'string',\n            lookup: SHIPMENT_STATUSES\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'email', field: 'email', type: 'string', filtering: false },\n          {\n            title: 'items',\n            field: 'item_count',\n            type: 'numeric',\n            filtering: false\n          },\n          {\n            title: 'total',\n            field: 'total',\n            type: 'currency',\n            filtering: false\n          },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            hidden: true\n            // render: (order: Order) =>\n            //   order.updatedAt\n            //     ? new Date(order.updatedAt).toLocaleString()\n            //     : null\n          },\n          { title: 'phone', field: 'phone', type: 'string', hidden: true },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'notes', field: 'notes', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'history', field: 'history', type: 'string', hidden: true },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            // console.log('query:', query)\n            fetch(`${API_HOST}/orders`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                // console.log('result', result)\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        detailPanel={order => <OrderDetailPanel order={order} />}\n        onRowClick={(event, rowData, togglePanel) =>\n          togglePanel && togglePanel()\n        }\n        title=\"Orders\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 64px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        onSelectionChange={(data: Order[], rowData?: Order | undefined) => {\n          searchExpanded && setSearchExpanded(false)\n          if (data.length === 0) {\n            setIsSelecting(false)\n            return\n          }\n          setIsSelecting(true)\n          if (data.length === 1) {\n            setActions([printAction, editAction])\n          } else {\n            setActions([printAction])\n          }\n        }}\n        actions={actions}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Orders)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\nimport { OrderStatus } from '../types/Order'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankWholesaleOrder: WholesaleOrder = {\n  id: '',\n  vendor: '',\n  notes: '',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  createdAt: '',\n  updatedAt: ''\n}\n\nconst useWholesaleOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void,\n  reload: boolean,\n  setReload: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id) {\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    if (id === 'new') {\n      setResult({ status: 'loaded', payload: blankWholesaleOrder })\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    fetch(`${API_HOST}/wholesaleorder/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({ status: 'loaded', payload: response as WholesaleOrder })\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n        setReload(false)\n      })\n  }, [id, setLoading, reload, setReload])\n\n  return result\n}\n\nconst useAllWholesaleOrdersService = (\n  status: OrderStatus,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  reloadWholesaleOrders: boolean,\n  setReloadWholesaleOrders: (reloadWholesaleOrders: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadWholesaleOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          setResult({\n            status: 'loaded',\n            payload: response.data as WholesaleOrder[]\n          })\n        })\n        .catch(error => {\n          console.warn('useWholesaleOrderService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => {\n          setReloadWholesaleOrders(false)\n          setLoading(false)\n        })\n  }, [reloadWholesaleOrders, setReloadWholesaleOrders, status, setLoading])\n\n  return result\n}\n\nconst useWholesaleOrderSaveService = (\n  wholesaleOrder: WholesaleOrder | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !wholesaleOrder || !wholesaleOrder.id) {\n      setDoSave(false)\n      return\n    }\n\n    const path =\n      wholesaleOrder.id === 'new'\n        ? '/wholesaleorder/create'\n        : '/wholesaleorder/upsert'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(wholesaleOrder)\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({\n          status: 'loaded',\n          payload: response.order as WholesaleOrder\n        })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [wholesaleOrder, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport {\n  useWholesaleOrderService,\n  useAllWholesaleOrdersService,\n  useWholesaleOrderSaveService\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport FileIcon from '@material-ui/icons/FileCopy'\n\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditWholesaleOrderMenuProps {\n  wholesaleOrder: WholesaleOrder\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n  onExportToCsv: () => void\n  onProductsExportToCsv: () => void\n}\n\nexport default function EditMenu(props: EditWholesaleOrderMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"wholesaleorders-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"wholesaleorders-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete wholesale order\" />\n        </StyledMenuItem>\n\n        {/* <StyledMenuItem\n          onClick={() => {\n            props.onExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export to .csv\" />\n        </StyledMenuItem> */}\n\n        <StyledMenuItem\n          onClick={() => {\n            props.onProductsExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"export products to .csv\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { LineItemData, GroupedItem } from './EditWholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    liTable: {\n      marginTop: theme.spacing(4)\n    },\n    deleteBtn: {\n      width: '88px'\n    },\n    unf: {\n      minWidth: '105px'\n    },\n    groupedRow: {\n      backgroundColor: theme.palette.background.default\n    },\n    groupedRowTotals: theme.typography.h6\n  })\n)\n\nfunction WholesaleOrderLineItems(\n  props: {\n    wholesaleOrder?: WholesaleOrder\n    setReload: React.Dispatch<React.SetStateAction<boolean>>\n    lineItemData: LineItemData\n    setLineItemData: React.Dispatch<React.SetStateAction<LineItemData>>\n  } & RouteComponentProps\n) {\n  const classes = useStyles()\n  const lineItems = props?.wholesaleOrder?.OrderLineItems\n  const { lineItemData, setLineItemData } = props\n\n  function calc() {\n    let groupedLineItems: {\n      [key: string]: GroupedItem\n    } = {}\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      productTotal: 0,\n      adjustmentTotal: 0,\n      orderTotal: 0\n    }))\n\n    lineItems?.forEach(li => {\n      const id = li.data && li.data.product && li.data.product.id\n      const key = id ? id : li.description\n\n      let acc = groupedLineItems[key]\n\n      const qty =\n        li.data && li.data.product && li.selected_unit === 'EA'\n          ? li.quantity / li.data.product.pk\n          : li.quantity\n\n      const liTotal =\n        li.data && li.data.product\n          ? +(parseFloat(li.data.product.ws_price_cost) * qty).toFixed(2)\n          : li.total\n\n      groupedLineItems[key] = {\n        qtySum: acc ? acc.qtySum + qty : qty,\n        totalSum: acc ? acc.totalSum + liTotal : liTotal,\n        product: li && li.data && li.data.product,\n        vendor: li.vendor,\n        description: li.description,\n        line_items: acc ? [...acc.line_items, li] : [li]\n      }\n\n      setLineItemData(prevData => ({\n        ...prevData,\n        productTotal: prevData.productTotal + parseFloat(`${liTotal}`),\n        orderTotal: prevData.orderTotal + liTotal\n      }))\n    })\n\n    Object.values(groupedLineItems).forEach(item => {\n      // check if qtySum is not a round number (i.e. a partial case)\n      if (item.qtySum % 1 !== 0 && item.product) {\n        const pk = item.product.pk\n        const qty = item.line_items.reduce((acc, v) => acc + v.quantity, 0)\n        // quantity needed to complete a case\n        const quantity = Math.abs((qty % pk) - pk)\n        const price = +(\n          quantity * parseFloat(item.product.u_price_cost)\n        ).toFixed(2)\n\n        const total = price\n        item.line_items.push({\n          quantity,\n          price,\n          total,\n          kind: 'adjustment',\n          description: `add ${quantity} EA`\n        })\n        // also add to the sums when creating this adjustment.\n        item.totalSum = item.totalSum + total\n        item.qtySum = Math.round(item.qtySum + quantity / pk)\n\n        setLineItemData(prevData => ({\n          ...prevData,\n          adjustmentTotal: prevData.adjustmentTotal + +total,\n          orderTotal: prevData.orderTotal + total\n        }))\n      }\n    })\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      groupedLineItems\n    }))\n  }\n\n  useEffect(calc, [lineItems])\n\n  function removeLineItem(item: GroupedItem) {\n    const ids = item.line_items.map(li => li.id).filter(a => a)\n    if (ids && ids.length && window.confirm('are you sure?')) {\n      const token = localStorage && localStorage.getItem('token')\n      fetch(`${API_HOST}/wholesaleorder/removelineitem`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ ids })\n      })\n        .then(response => response.json())\n        .then(response => !response.error && props.setReload(true))\n        .catch(err => console.warn('members removelineitem caught err', err))\n    }\n  }\n\n  return (\n    <Table size=\"small\" className={classes.liTable}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.deleteBtn} />\n          <TableCell className={classes.unf}>unf</TableCell>\n          <TableCell>description</TableCell>\n          <TableCell>price</TableCell>\n          <TableCell>cost</TableCell>\n          <TableCell>pk</TableCell>\n\n          <TableCell align=\"center\">qty</TableCell>\n          <TableCell align=\"right\">total</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.values(lineItemData.groupedLineItems).map(\n          (item: GroupedItem, idx: number) => (\n            <React.Fragment key={`wsgli${idx}`}>\n              <TableRow className={classes.groupedRow}>\n                <TableCell className={classes.deleteBtn}>\n                  <Tooltip title=\"remove these line item(s)\">\n                    <IconButton\n                      aria-label=\"remove these line item(s)\"\n                      onClick={() => removeLineItem(item)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${\n                      item.product.unf\n                        ? item.product.unf\n                        : item.product.upc_code\n                    } `}\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${item.product.name} ${item.product.description}`}\n                  {item.product && (\n                    <>\n                      <br />\n                      {`${item.product.upc_code} ${item.product.category} > ${item.product.sub_category}`}{' '}\n                    </>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && item.product.ws_price}\n                  {item.product &&\n                  item.product.ws_price !== item.product.u_price ? (\n                    <>\n                      <br />\n                      {`(${item.product.u_price}EA)`}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && ` ${item.product.ws_price_cost}`}\n                  <br />\n                  {item.product &&\n                    `${\n                      item.product.ws_price_cost !== item.product.u_price_cost\n                        ? `(${item.product.u_price_cost}EA)`\n                        : ''\n                    }`}\n                </TableCell>\n                <TableCell>{item.product && item.product.pk}</TableCell>\n\n                <TableCell align=\"center\" className={classes.groupedRowTotals}>\n                  {+item.qtySum.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.groupedRowTotals}>\n                  {item.totalSum.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              {item.line_items.map(li => (\n                <TableRow key={`wsli${li.id}`}>\n                  <TableCell colSpan={2} />\n                  <TableCell>\n                    [{li.kind}] {li.vendor}{' '}\n                    {li.data && li.data.product && li.data.product.import_tag\n                      ? li.data.product.import_tag\n                      : li.description}{' '}\n                    {li.OrderId && (\n                      <Link\n                        color=\"primary\"\n                        href=\"\"\n                        onClick={(e: any) => {\n                          e.preventDefault()\n                          props.history.push(`/orders/edit/${li.OrderId}`)\n                        }}\n                      >\n                        Order #{li.OrderId}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell>\n                    {li.kind === 'adjustment'\n                      ? `${li.quantity} EA`\n                      : `${li.quantity} ${li.selected_unit}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {li.data && li.data.product && li.selected_unit === 'EA'\n                      ? +(li.quantity / li.data.product.pk).toFixed(2)\n                      : null}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              ))}\n            </React.Fragment>\n          )\n        )}\n\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            ITEM COUNT\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            PRODUCT TOTAL\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            ADJUSTMENTS TOTAL\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            TOTAL\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            {Object.keys(lineItemData.groupedLineItems).length}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.productTotal.toFixed(2)}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.adjustmentTotal.toFixed(2)}\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            {lineItemData.orderTotal.toFixed(2)}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default withRouter(WholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { LineItem } from '../types/Order'\nimport { Product } from '../types/Product'\nimport {\n  WholesaleOrder,\n  WholesaleOrderRouterProps\n} from '../types/WholesaleOrder'\nimport { OrderStatus, ShipmentStatus, PaymentStatus } from '../types/Order'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport Loading from '../Loading'\nimport {\n  useWholesaleOrderService,\n  useWholesaleOrderSaveService\n} from './useWholesaleOrderService'\nimport EditMenu from './EditMenu'\nimport WholesaleOrderLineItems from './WholesaleOrderLineItems'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    vendor: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    editMenu: {\n      padding: `${theme.spacing(2)}px 0`,\n      textAlign: 'right'\n    }\n  })\n)\n\nexport interface GroupedItem {\n  qtySum: number\n  totalSum: number\n  product: Product | undefined\n  vendor: string | undefined\n  description: string\n  line_items: LineItem[]\n}\n\nexport interface LineItemData {\n  groupedLineItems: {\n    [key: string]: GroupedItem\n  }\n  orderTotal: number\n  productTotal: number\n  adjustmentTotal: number\n}\n\ninterface EditWholesaleOrderProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction EditWholesaleOrder(\n  props: EditWholesaleOrderProps &\n    RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const [wholesaleOrderId, setWholesaleOrderId] = useState('')\n  const [wholesaleOrder, setWholesaleOrder] = useState<WholesaleOrder>()\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [reload, setReload] = useState(true)\n\n  const [lineItemData, setLineItemData] = useState<LineItemData>({\n    groupedLineItems: {},\n    productTotal: 0,\n    adjustmentTotal: 0,\n    orderTotal: 0\n  })\n\n  const wholesaleOrderService = useWholesaleOrderService(\n    wholesaleOrderId,\n    setLoading,\n    reload,\n    setReload\n  )\n\n  useEffect(() => {\n    if (wholesaleOrderService.status === 'loaded') {\n      if (wholesaleOrderService.payload) {\n        setWholesaleOrder(wholesaleOrderService.payload)\n      }\n    }\n  }, [wholesaleOrderService, wholesaleOrderId])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handleOrderNotesChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          notes: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleOrderVendorChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          vendor: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          status: event.target.value as OrderStatus\n        }\n      }\n    })\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          payment_status: event.target.value as PaymentStatus\n        }\n      }\n    })\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          shipment_status: event.target.value as ShipmentStatus\n        }\n      }\n    })\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const id = props.match.params.id\n\n  useEffect(() => {\n    if (id) {\n      setWholesaleOrderId(id)\n    }\n  }, [id])\n\n  const onSaveBtnClick = (): void => {\n    if (wholesaleOrderId === 'new') {\n      setWholesaleOrder(prevOrder => {\n        if (prevOrder) {\n          return {\n            ...prevOrder,\n            id: 'new'\n          }\n        }\n      })\n    }\n    setDoSave(true)\n    props.setReloadOrders(true)\n  }\n\n  useWholesaleOrderSaveService(\n    wholesaleOrder,\n    doSave,\n    setDoSave,\n    setSnackMsg,\n    setSnackOpen\n  )\n\n  const onDeleteBtnClick = (): void => {\n    wholesaleOrder &&\n      fetch(`${API_HOST}/wholesaleorder`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ id: wholesaleOrder.id })\n      })\n        .then(response => response.json())\n        .then(response => {\n          if (response.error) {\n            setSnackMsg(response.msg)\n            setSnackOpen(true)\n          } else {\n            props.history.replace('/wholesaleorders')\n          }\n        })\n        .catch(error => {\n          console.warn('delete wholesaleOrder fetch caught err:', error)\n          setSnackMsg(`o noz! ${error}`)\n          setSnackOpen(true)\n        })\n  }\n\n  const saveStreamCSV = (filename: string, text: any) => {\n    // lolol shoutout to https://stackoverflow.com/questions/37095233/downloading-and-saving-data-with-fetch-from-authenticated-rest\n    if (window.navigator.msSaveBlob) {\n      // IE 10 and later, and Edge.\n      const blobObject = new Blob([text], { type: 'text/csv' })\n      window.navigator.msSaveBlob(blobObject, filename)\n    } else {\n      // Everthing else (except old IE).\n      // Create a dummy anchor (with a download attribute) to click.\n      const anchor = document.createElement('a')\n      anchor.download = filename\n      if (window.URL.createObjectURL) {\n        // Everything else new.\n        const blobObject = new Blob([text], { type: 'text/csv' })\n        anchor.href = window.URL.createObjectURL(blobObject)\n      } else {\n        // Fallback for older browsers (limited to 2MB on post-2010 Chrome).\n        // Load up the data into the URI for \"download.\"\n        anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(text)\n      }\n      // Now, click it.\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        anchor.dispatchEvent(event)\n      } else {\n        anchor.click()\n      }\n    }\n  }\n\n  const onExportToCsv = (): void => {\n    console.log('handle onExportToCsv wholesaleOrder:', lineItemData)\n  }\n  const onProductsExportToCsv = (): void => {\n    const vendor = wholesaleOrder && wholesaleOrder.vendor\n    if (!vendor) {\n      return\n    }\n    fetch(`${API_HOST}/whosaleorder/exportcsv`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/csv',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        lineItemData\n      })\n    })\n      .then(response => response.text())\n      .then(responseText => saveStreamCSV(`${vendor}.csv`, responseText))\n      .catch(error => {\n        console.warn('wholesaleOrder onExportToCsv fetch caught err:', error)\n        setSnackMsg(`o noz! ran into a problem ;(`)\n        setSnackOpen(true)\n      })\n  }\n\n  function valueFor(field: keyof WholesaleOrder) {\n    return wholesaleOrder && wholesaleOrder[field] ? wholesaleOrder[field] : ''\n  }\n\n  return wholesaleOrder ? (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item sm={5}>\n              <TextField\n                className={classes.vendor}\n                label=\"vendor\"\n                fullWidth\n                value={valueFor('vendor')}\n                onChange={handleOrderVendorChange}\n              />\n              <FormControl fullWidth>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={7}>\n              <TextField\n                label=\"notes\"\n                multiline\n                fullWidth\n                rows={4}\n                rowsMax={28}\n                value={valueFor('notes')}\n                onChange={handleOrderNotesChange}\n              />\n              <div className={classes.editMenu}>\n                <EditMenu\n                  wholesaleOrder={wholesaleOrder}\n                  onSaveBtnClick={onSaveBtnClick}\n                  onDeleteBtnClick={onDeleteBtnClick}\n                  onExportToCsv={onExportToCsv}\n                  onProductsExportToCsv={onProductsExportToCsv}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <WholesaleOrderLineItems\n            wholesaleOrder={wholesaleOrder}\n            setReload={setReload}\n            lineItemData={lineItemData}\n            setLineItemData={setLineItemData}\n          />\n        </>\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditWholesaleOrder)\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport MaterialTable from 'material-table'\n\nimport { LineItem } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100vw'\n    }\n  })\n)\n\ninterface AddWholesaleOrderLineItemsProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction AddWholesaleOrderLineItems(props: AddWholesaleOrderLineItemsProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const [selectedLineItems, setSelectedLineItems] = useState<string[]>()\n\n  const addAction = {\n    tooltip: 'ADD LINE ITEMS TO ORDER',\n    icon: 'add',\n    onClick: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      data: LineItem | LineItem[]\n    ) => {\n      handleWholesaleOrderMenuOpen(event)\n      if (Array.isArray(data)) {\n        // ain't nobody (tsc) tell me nothin\n        setSelectedLineItems(data.map(li => li.id) as string[])\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [wholesaleorderLookup, setWholesaleOrderLookup] = useState<\n    Array<{ id: string; name: string }>\n  >()\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ status: ['new', 'needs_review'] })\n    })\n      .then(response => response.json())\n      .then(result =>\n        setWholesaleOrderLookup(\n          result.data.map(\n            (order: { id: string; vendor: string; createdAt: string }) => ({\n              id: order.id,\n              name: `${order.vendor} ${new Date(\n                order.createdAt\n              ).toLocaleDateString()}`\n            })\n          )\n        )\n      )\n      .catch(console.warn)\n  }, [])\n  const [\n    wholesaleorderMenuAnchorEl,\n    setWholesaleOrderMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleWholesaleOrderMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setWholesaleOrderMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleWholesaleOrderMenuClose = () => {\n    setSelectedLineItems([])\n    setWholesaleOrderMenuAnchorEl(null)\n  }\n\n  const handleWholesaleOrderSelect = (id: string) => {\n    fetch(`${API_HOST}/wholesaleorder/addlineitems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, selectedLineItems })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('update line items result:', result)\n      })\n      .catch(console.warn)\n      .finally(() => {\n        handleWholesaleOrderMenuClose()\n        setNeedsRefresh(true)\n        props.setReloadOrders(true)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'qty',\n            field: 'quantity',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'total', field: 'total', type: 'string', filtering: false },\n          {\n            title: 'product',\n            field: 'data',\n            type: 'string',\n            render: row =>\n              row.data && row.data.product\n                ? `${row.data.product.name} ${row.data.product.description}`\n                : null\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true },\n          { title: 'OrderId', field: 'OrderId', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/wholesaleorders/lineitems`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Line Items\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 64px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[addAction]}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={wholesaleorderMenuAnchorEl}\n        keepMounted\n        open={Boolean(wholesaleorderMenuAnchorEl)}\n        onClose={handleWholesaleOrderMenuClose}\n      >\n        <MenuItem onClick={() => handleWholesaleOrderSelect('new')}>\n          New wholesale order\n        </MenuItem>\n        <Divider />\n        {wholesaleorderLookup &&\n          wholesaleorderLookup.map(\n            (wholesaleorder: { id: string; name: string }) => (\n              <MenuItem\n                key={`wholesaleorder-sel-${wholesaleorder.id}`}\n                onClick={() => handleWholesaleOrderSelect(wholesaleorder.id)}\n              >\n                {wholesaleorder.name}\n              </MenuItem>\n            )\n          )}\n      </Menu>\n    </div>\n  )\n}\n\nexport default AddWholesaleOrderLineItems\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MUILink from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditWholesaleOrder from './EditWholesaleOrder'\nimport { useAllWholesaleOrdersService } from './useWholesaleOrderService'\nimport { WholesaleOrderRouterProps } from '../types/WholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport { withStyles } from '@material-ui/core/styles'\nimport { OrderStatus } from '../types/Order'\nimport Loading from '../Loading'\nimport { ORDER_STATUSES } from '../constants'\nimport AddWholesaleOrderLineItems from './AddWholesaleOrderLineItems'\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: 0 //theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      textAlign: 'left',\n      marginLeft: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    paperNav: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    list: {\n      padding: 0,\n      width: '100%'\n    },\n    selectedListItem: {\n      borderLeft: `${theme.spacing(2)}px solid ${theme.palette.divider}`\n    },\n    noOrdersMsg: {\n      padding: theme.spacing(2)\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction WholesaleOrders(\n  props: Props & RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [wholesaleOrders, setWholesaleOrders] = useState<WholesaleOrder[]>([])\n  const [reloadOrders, setReloadOrders] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>('new')\n  const allWholesaleOrders = useAllWholesaleOrdersService(\n    selectedStatus,\n    setLoading,\n    reloadOrders,\n    setReloadOrders\n  )\n\n  useEffect(() => {\n    allWholesaleOrders.status === 'loaded' &&\n      setWholesaleOrders(allWholesaleOrders.payload)\n  }, [allWholesaleOrders])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addWholesaleOrder() {\n    props.history.push('/wholesaleorders/edit/new')\n    setSnackOpen(true)\n  }\n\n  function loadOrdersForStatus(status: OrderStatus, expanded: boolean) {\n    if (expanded) {\n      setSelectedStatus(status)\n      setReloadOrders(true)\n    }\n  }\n\n  let id: string | number | undefined\n  try {\n    id = window.location.pathname.split('/').reverse()[0]\n    if (isNaN(parseInt(id))) {\n      id = undefined\n    }\n  } catch {\n    /* wellfuck */\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid sm={12} md={3} lg={2} item>\n          <Paper className={classes.paperNav}>\n            <div className={classes.title}>\n              <MUILink\n                color=\"textPrimary\"\n                href=\"\"\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push('/wholesaleorders')\n                }}\n                className={classes.titleText}\n              >\n                WHOLESALE ORDERS\n              </MUILink>\n              <IconButton\n                aria-label=\"add wholesale order\"\n                title=\"add wholeslae order\"\n                onClick={() => addWholesaleOrder()}\n              >\n                <Add />\n              </IconButton>\n            </div>\n\n            {Object.keys(ORDER_STATUSES).map(status => (\n              <ExpansionPanel\n                square\n                key={`EP${status}`}\n                defaultExpanded={status === 'new'}\n                expanded={selectedStatus === status}\n                onChange={(event: any, expanded: boolean) =>\n                  loadOrdersForStatus(status as OrderStatus, expanded)\n                }\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`panel${status}-content`}\n                  id={`panel${status}-header`}\n                >\n                  <Typography>\n                    {ORDER_STATUSES[status as OrderStatus]}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {loading ? (\n                    <Loading />\n                  ) : (\n                    <List className={classes.list}>\n                      {wholesaleOrders && wholesaleOrders.length ? (\n                        wholesaleOrders.map(\n                          (order: WholesaleOrder, idx: number) => (\n                            <ListItem\n                              button\n                              component={Link}\n                              to={`/wholesaleorders/edit/${order.id}`}\n                              key={`wsorder${idx}`}\n                              className={\n                                // eslint-disable-next-line\n                                id == order.id\n                                  ? classes.selectedListItem\n                                  : undefined\n                              }\n                            >\n                              <ListItemText\n                                primary={order.vendor}\n                                secondary={new Date(\n                                  order.createdAt\n                                ).toLocaleDateString()}\n                              />\n                            </ListItem>\n                          )\n                        )\n                      ) : (\n                        <div className={classes.noOrdersMsg}>\n                          <i>No wholesale orders for this status...</i>\n                        </div>\n                      )}\n                    </List>\n                  )}\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Paper>\n        </Grid>\n\n        <Grid sm={12} md={9} lg={10} item>\n          <Switch>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders\"\n              exact\n            >\n              <AddWholesaleOrderLineItems setReloadOrders={setReloadOrders} />\n            </ProtectedRoute>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders/edit/:id\"\n            >\n              <Paper className={classes.paper}>\n                <EditWholesaleOrder setReloadOrders={setReloadOrders} />\n              </Paper>\n            </ProtectedRoute>\n          </Switch>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new Wholesale Order!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(WholesaleOrders))\n","import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n)\n\nconst ROLES = ['admin', 'member', 'guest']\n\nexport default function NewUserModal(props: {\n  open: boolean\n  handleClose: () => void\n  handleRefresh: () => void\n}) {\n  const token = localStorage && localStorage.getItem('token')\n\n  const classes = useStyles()\n\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('guest')\n  const [disabled, setDiabled] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (email && email.includes('@')) {\n      setDiabled(false)\n    } else {\n      setDiabled(true)\n    }\n  }, [email])\n\n  const createUser = () => {\n    if (!email) {\n      setError('type an email!')\n      return\n    } else {\n      setError('')\n    }\n    fetch(`${API_HOST}/user/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ email, role })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result', result)\n        if (result.error) {\n          return setError(result.msg)\n        } else {\n          props.handleRefresh()\n          props.handleClose()\n        }\n      })\n      .catch(err => {\n        console.warn(err)\n        return setError('o noz! there was an error creating user')\n      })\n      .finally(() => setDiabled(false))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <h2>Add New User</h2>\n            <div>\n              <TextField\n                type=\"email\"\n                margin=\"dense\"\n                label=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(event: any) => setEmail(event.target.value)}\n                autoFocus\n                fullWidth\n              />\n\n              <FormControl fullWidth>\n                <InputLabel id=\"role-select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  id=\"role-select\"\n                  margin=\"dense\"\n                  value={role}\n                  onChange={event =>\n                    event.target &&\n                    event.target.value &&\n                    setRole(event.target.value as string)\n                  }\n                >\n                  {ROLES.map(name => (\n                    <MenuItem value={name} key={`role-select${name}`}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createUser}\n                disabled={disabled}\n              >\n                CREATE\n              </Button>\n\n              {error && (\n                <Box color=\"error.main\">\n                  <Typography component=\"p\">{error}</Typography>\n                </Box>\n              )}\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { User } from '../types/User'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserRolesMenu(props: {\n  user: User\n  disabled: boolean\n}) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [role, setRole] = React.useState(props.user.role || 'none')\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleRoleChange = (id: string | undefined, role: string) => {\n    if (!id) {\n      return\n    }\n    fetch(`${API_HOST}/user/role`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, role })\n    })\n      .then(response => response.json())\n      .then(resp => {\n        // console.log('resp success!?', resp)\n        handleClose()\n        setRole(role)\n      })\n      .catch(err => console.warn('handleRoleChange caught err:', err))\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"user-roles-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        disabled={props.disabled}\n      >\n        {role}\n      </Button>\n      <StyledMenu\n        id=\"user-roles-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* <StyledMenuItem>\n          <ListItemText\n            primary=\"Superuser\"\n            onClick={() => handleRoleChange(props.user.id, 'superuser')}\n          />\n        </StyledMenuItem> */}\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"admin\"\n            onClick={() => handleRoleChange(props.user.id, 'admin')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"member\"\n            onClick={() => handleRoleChange(props.user.id, 'member')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"guest\"\n            onClick={() => handleRoleChange(props.user.id, 'guest')}\n          />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import Add from '@material-ui/icons/Add'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n// import Snackbar from '@material-ui/core/Snackbar'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\n// import { Switch } from 'react-router'\n// import ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\n// import { useAllUsersService } from './useUserService'\nimport { UserRouterProps } from '../types/UserRouterProps'\nimport { User } from '../types/User'\nimport NewUserModal from './NewUserModal'\nimport UserRolesMenu from './UserRolesMenu'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Users(props: Props & RouteComponentProps<UserRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n  const tableRef = createRef<any>()\n\n  console.log('#TODO: deal with userService:', userService)\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const token = localStorage && localStorage.getItem('token')\n  const [newUserModalOpen, setNewUserModalOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newUserAction = {\n    icon: 'add',\n    tooltip: 'add new user',\n    isFreeAction: true,\n    onClick: () => setNewUserModalOpen(true)\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove User',\n    icon: 'delete',\n    onClick: (e: any, user: User) => {\n      if (\n        userService &&\n        userService.user &&\n        userService.user.email === user.email\n      ) {\n        alert('you cannot delete yrself!')\n      } else {\n        if (!user.id) {\n          return\n        }\n        if (window.confirm(`Are you sure you want to delete ${user.email}?`)) {\n          fetch(`${API_HOST}/user`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({ id: user.id })\n          })\n            .then(response => response.json())\n            .then(() => tableRef.current && tableRef.current.onQueryChange())\n            .catch(err => console.warn('user deleteAction caught err', err))\n        }\n      }\n    }\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newUserAction,\n    deleteAction\n  ])\n\n  useEffect(() => {\n    setActions([searchAction, newUserAction, deleteAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'role',\n            field: 'role',\n            type: 'string',\n            render: row => (\n              <UserRolesMenu\n                user={row as User}\n                disabled={\n                  !!(\n                    userService &&\n                    userService.user &&\n                    userService.user.email === row.email\n                  )\n                }\n              />\n            )\n          },\n          { title: 'email', field: 'email', type: 'string' },\n          { title: 'active', field: 'active', type: 'boolean', filtering: false },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.updatedAt).toLocaleString()\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/users`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Users\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 64px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n\n      <NewUserModal\n        open={newUserModalOpen}\n        handleClose={() => {\n          setNewUserModalOpen(false)\n        }}\n        handleRefresh={() =>\n          tableRef.current && tableRef.current.onQueryChange()\n        }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Users))\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n// import MoreVertIcon from '@material-ui/icons/MoreVert'\n// import IconButton from '@material-ui/core/IconButton'\n// import Tooltip from '@material-ui/core/Tooltip'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string | undefined) {\n  return (\n    codes &&\n    codes\n      .split(', ')\n      .map((code, idx) =>\n        PROPERTY_MAP[code] ? (\n          <Chip\n            label={PROPERTY_MAP[code]}\n            style={{ margin: 5 }}\n            size=\"small\"\n            key={`pprop${idx}`}\n          />\n        ) : (\n          ''\n        )\n      )\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    }\n  })\n)\n\nfunction Products() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map(p => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ ids })\n        })\n          .catch(err => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then(response => response.json())\n      .then(result => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filtering: false,\n            render: row => `${row.name} -- ${row.description}`\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: row => renderCodes(row.codes)\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Products\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 64px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    }\n  })\n)\n\nexport default function ImportProducts() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [vendor, setVendor] = useState('')\n  const [importTag, setImportTag] = useState('')\n  const [prevImportTag, setPrevImportTag] = useState('')\n  const [markup, setMarkup] = useState(0.0)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  const [importTagsLookup, setImportTagsLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/import_tags`)\n      .then(response => response.json())\n      .then(result => setImportTagsLookup(result))\n  })\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('vendor')\n    formData.delete('import_tag')\n    formData.delete('prev_import_tag')\n    formData.delete('markup')\n    formData.append('vendor', vendor)\n    formData.append('import_tag', importTag)\n    formData.append('prev_import_tag', prevImportTag)\n    formData.append('markup', `${markup}`)\n\n    fetch(`${API_HOST}/products/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  const [\n    vendorMenuAnchorEl,\n    setVendorMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleVendorMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setVendorMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleVendorMenuClose = () => {\n    setVendorMenuAnchorEl(null)\n  }\n\n  const handleVendorSelect = (vendor: string) => {\n    setVendor(vendor)\n    handleVendorMenuClose()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Import Products</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <div className={classes.vendor}>\n            <TextField\n              label=\"Vendor\"\n              helperText=\"Required.\"\n              fullWidth\n              value={vendor}\n              onChange={event => setVendor(event.target.value)}\n            />\n\n            <div>\n              <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleVendorMenuOpen}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </div>\n\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={vendorMenuAnchorEl}\n              keepMounted\n              open={Boolean(vendorMenuAnchorEl)}\n              onClose={handleVendorMenuClose}\n            >\n              {vendorLookup &&\n                Object.keys(vendorLookup).map(vendor => (\n                  <MenuItem\n                    key={`vendor-sel-${vendor}`}\n                    onClick={() => handleVendorSelect(vendor)}\n                  >\n                    {vendor}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </div>\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <InputLabel id=\"prev-import-tag-select-label\">\n              Previous Import Tag\n            </InputLabel>\n            <Select\n              labelId=\"prev-import-tag-select-label\"\n              id=\"prev-import-tag-select\"\n              value={prevImportTag}\n              onChange={event =>\n                event.target &&\n                event.target.value &&\n                setPrevImportTag(event.target.value as string)\n              }\n            >\n              {importTagsLookup &&\n                Object.keys(importTagsLookup).map(tag => (\n                  <MenuItem key={`tag-sel-${tag}`} value={tag}>\n                    {tag}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>\n              If updating, products with the tag you select here will first be\n              removed.\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label=\"Import Tag\"\n            helperText=\"Required. This should be unique.\"\n            fullWidth\n            value={importTag}\n            onChange={event => setImportTag(event.target.value)}\n            className={classes.gridItem}\n          />\n          <TextField\n            label=\"Markup\"\n            helperText=\"Markup percentage. Use decimal format.\"\n            type=\"number\"\n            inputProps={{\n              min: '0',\n              max: '1',\n              step: '0.01'\n            }}\n            fullWidth\n            value={markup}\n            onChange={event =>\n              setMarkup(\n                isNaN(parseFloat(event.target.value))\n                  ? 0.0\n                  : parseFloat(event.target.value)\n              )\n            }\n            className={classes.gridItem}\n          />\n\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={\n                loading || !importTag || !vendor || formData === undefined\n              }\n              onClick={() => submitData()}\n              size=\"large\"\n            >\n              UPLOAD\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>What kind of file should be uploaded?</dt>\n              <dd>Comma separated value files with the extension .csv</dd>\n\n              <dt>What columns will get processed?</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>name</b>, <b>description</b>,{' '}\n                <b>pk</b>, <b>size</b>, <b>unit_type</b>, <b>ws_price</b>,{' '}\n                <b>u_price</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>Are any of these optional?</dt>\n              <dd>\n                <b>unf</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>\n                <b>codes</b> column\n              </dt>\n              <dd>\n                the <b>codes</b> column value can be a comma-separated list of\n                codes. the values that can be entered in this field are any\n                combination of a, r, c, l, d, f, g, v, w, y, k, ft, m, s, n, og,\n                1, 2, 3.\n              </dd>\n\n              <dt>How do the code columns translate?</dt>\n              <dd>\n                The values in the code columns need to be the same as the\n                header. so for example if there's a column <b>a</b> then the\n                value for the fields in the column need to be <i>a</i> (or blank\n                if not appliciable). except for the <b>og</b> column which can\n                have values og, 1, 2, or 3.\n                <br />\n                <br />\n                <table>\n                  <thead>\n                    <tr>\n                      <th>code</th>\n                      <th>translation</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>a</td>\n                      <td>Artificial ingredients</td>\n                    </tr>\n                    <tr>\n                      <td>c</td>\n                      <td>Low carb</td>\n                    </tr>\n                    <tr>\n                      <td>d</td>\n                      <td>Dairy free</td>\n                    </tr>\n                    <tr>\n                      <td>f</td>\n                      <td>Food Service items</td>\n                    </tr>\n                    <tr>\n                      <td>g</td>\n                      <td>Gluten free</td>\n                    </tr>\n                    <tr>\n                      <td>k</td>\n                      <td>Kosher</td>\n                    </tr>\n                    <tr>\n                      <td>l</td>\n                      <td>Low sodium/no salt</td>\n                    </tr>\n                    <tr>\n                      <td>m</td>\n                      <td>Non-GMO Project Verified</td>\n                    </tr>\n                    <tr>\n                      <td>r</td>\n                      <td>Refined sugar</td>\n                    </tr>\n                    <tr>\n                      <td>v</td>\n                      <td>Vegan</td>\n                    </tr>\n                    <tr>\n                      <td>w</td>\n                      <td>Wheat free</td>\n                    </tr>\n                    <tr>\n                      <td>ft</td>\n                      <td>Fair Trade</td>\n                    </tr>\n                    <tr>\n                      <td>n</td>\n                      <td>Natural</td>\n                    </tr>\n                    <tr>\n                      <td>s</td>\n                      <td>Specialty Only</td>\n                    </tr>\n                    <tr>\n                      <td>y</td>\n                      <td>Yeast free</td>\n                    </tr>\n                    <tr>\n                      <td>og</td>\n                      <td>Organic</td>\n                    </tr>\n                    <tr>\n                      <td>1</td>\n                      <td>100% organic</td>\n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>95%+ organic</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>70%+ organic</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </dd>\n\n              <dt>How is markup applied?</dt>\n              <dd>\n                Markup is a percentage in decimal format so 0.10 will markup\n                products by 10%. The formula is: <i>PRICE + (PRICE * MARKUP)</i>{' '}\n                so if the value of <b>ws_price</b> is 10.00 and the markup\n                specified is 0.10 the the markup price will be 11.00.\n                <br />\n                <br />\n                If any rows of the price sheet has a non-empty, non-zero value\n                in the <b>ws_price_markup</b> or <b>u_price_markup</b> then that\n                will be used as the markup price. This means only some rows of\n                the price sheet can contain special markups while the rest of\n                the sheet can have a single markup applied.\n              </dd>\n\n              <dt>Import Tag</dt>\n              <dd>\n                This field is used to track changes to new price sheets that are\n                meant to update products that have already been imported once. A\n                use-case for this is when uploading partial lists of product for\n                a vendor. So for example if a sub-set of products are imported,\n                then a while later a new sheet of products can be imported\n                without having to destroy and re-import all the products for a\n                vendor. If uploading a complete list of all products for a\n                particular vendor then it would be reasonable to use the same\n                value as the Vendor field.\n                <br />\n                <br />\n                <b>NOTE:</b> it can be useful to include the current date in the\n                value for the Import Tag field (or otherwise make this a unique\n                value). When creating wholesale orders it might be useful to\n                know which price sheet a product that was ordered came from.\n                <br />\n                <br />\n                When the Previous Import Tag is specified, products with that\n                tag are first deleted before new products are created.\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Order } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Order>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/order/edit/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Order })\n      })\n      .catch(error => {\n        console.warn('useOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\n// const useOrderSaveService = (\n//   order: Order | undefined,\n//   doSave: boolean,\n//   setDoSave: (value: boolean) => void,\n//   setSnackMsg: (msg: string) => void,\n//   setSnackOpen: (value: boolean) => void\n// ) => {\n//   const [result, setResult] = useState<Service<Order>>({\n//     status: 'loading'\n//   })\n\n//   useEffect(() => {\n//     if (!doSave || !order) {\n//       setDoSave(false)\n//       return\n//     }\n\n//     console.log('need to save order', order)\n//     setResult({ status: 'error', error: new Error('#TODO') })\n//     fetch(`${API_HOST}/order/create`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: JSON.stringify(order)\n//     })\n//       .then(response => response.json())\n//       .then(response => {\n//         // console.log('usePageSaveService response:', response)\n//         setResult({ status: 'loaded', payload: response as Order })\n//         setSnackMsg(response.msg)\n//         setSnackOpen(true)\n//       })\n//       .catch(error => {\n//         console.warn('usePageSaveService fetch caught err:', error)\n//         setResult({ ...error })\n//         setSnackMsg(`o noz! ${error}`)\n//         setSnackOpen(true)\n//       })\n//       .finally(() => {\n//         setDoSave(false)\n//       })\n//   }, [order, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n//   return result\n// }\n\nexport { useOrderService }\n","import React, { useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nimport { LineItem } from '../types/Order'\nimport { TAX_RATE, TAX_RATE_STRING } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (num === undefined) {\n    return '0.00'\n  }\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'product')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction adjustmentsTotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'adjustment')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  const u_price =\n    line_item.data && line_item.data.product && line_item.data.product.u_price\n      ? parseFloat(line_item.data.product.u_price)\n      : line_item.price\n  const ws_price =\n    line_item.data && line_item.data.product\n      ? parseFloat(line_item.data.product.ws_price)\n      : line_item.price\n\n  return line_item.selected_unit === 'EA' && u_price\n    ? isNaN(line_item.quantity * u_price)\n      ? 0.0\n      : line_item.quantity * u_price\n    : isNaN(line_item.quantity * ws_price)\n    ? 0.0\n    : line_item.quantity * ws_price\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.pk &&\n    line_item.data.product.pk !== 1 &&\n    pksize.push(line_item.data.product.pk)\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.size &&\n    pksize.push(line_item.data.product.size)\n  return pksize.join(' / ')\n}\n\nfunction OrderLineItems(props: {\n  line_items: LineItem[]\n  onLineItemUpdated: (idx: number, line_item: LineItem) => void\n  removeLineItem: (idx: number) => void\n  onTaxesChange: (amount: number) => void\n  onTotalChange: (total: number) => void\n  onSubTotalChange: (subtotal: number) => void\n}) {\n  const classes = useStyles()\n\n  const orderSubtotal = subtotal(props.line_items)\n  const orderAdjustmentsTotal = adjustmentsTotal(props.line_items)\n  const orderTaxes = TAX_RATE * (orderSubtotal + orderAdjustmentsTotal)\n  const orderTotal = orderTaxes + orderSubtotal + orderAdjustmentsTotal\n\n  const { onTaxesChange, onTotalChange, onSubTotalChange } = props\n  useEffect(() => {\n    onTaxesChange(orderTaxes)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTaxes]) // adding onTaxesChange here causes infinite loopz\n\n  useEffect(() => {\n    onTotalChange(orderTotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTotal]) // adding onTotalChange causes infinite loopz :/\n\n  useEffect(() => {\n    onSubTotalChange(orderSubtotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderSubtotal])\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    if (line_item.data && line_item.data.product) {\n      line_item.price =\n        unit === 'CS'\n          ? +line_item.data.product.ws_price\n          : +line_item.data.product.u_price\n    }\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleDescriptionChange = (\n    line_item: LineItem,\n    description: string\n  ) => {\n    line_item.description = description\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handlePriceChange = (line_item: LineItem, price: number) => {\n    line_item.price = price\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const removeLineItem = (line_item: LineItem) => {\n    const idx = props.line_items.indexOf(line_item)\n    props.removeLineItem(idx)\n  }\n\n  const adjustments = props.line_items.filter(li => li.kind === 'adjustment')\n  const payments = props.line_items.filter(li => li.kind === 'payment')\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map(\n            (line_item, idx) =>\n              line_item.kind === 'product' && (\n                <TableRow key={`li${idx}`}>\n                  <TableCell align=\"center\">\n                    <Tooltip title=\"remove line item\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        onClick={(event: any) => removeLineItem(line_item)}\n                      >\n                        <ClearIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>{line_item.description}</TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      {line_item.data &&\n                      line_item.data.product &&\n                      line_item.selected_unit === 'EA' &&\n                      line_item.data.product.u_price\n                        ? usdFormat(line_item.data.product.u_price)\n                        : usdFormat(\n                            line_item.data && line_item.data.product\n                              ? line_item.data.product.ws_price\n                              : line_item.price\n                          )}\n                    </div>\n                    <div>{liPkSize(line_item)}</div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {line_item.data &&\n                    line_item.data.product &&\n                    line_item.data.product.u_price &&\n                    line_item.data.product.u_price !==\n                      line_item.data.product.ws_price ? (\n                      <Select\n                        value={line_item.selected_unit}\n                        onChange={(event: any) =>\n                          handleUnitChange(line_item, event.target.value)\n                        }\n                        margin=\"dense\"\n                      >\n                        <MenuItem value=\"CS\">Case</MenuItem>\n                        <MenuItem value=\"EA\">Each</MenuItem>\n                      </Select>\n                    ) : line_item.data &&\n                      line_item.data.product &&\n                      line_item.data.product.unit_type === 'CS' ? (\n                      'Case'\n                    ) : (\n                      'Each'\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      className={classes.qtyinput}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"dense\"\n                      fullWidth\n                      value={line_item.quantity}\n                      onChange={(event: any) =>\n                        handleQtyChange(line_item, event.target.value)\n                      }\n                      inputProps={{ min: '1', step: '1' }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {usdFormat(line_item.total)}\n                  </TableCell>\n                </TableRow>\n              )\n          )}\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(orderSubtotal)}</TableCell>\n          </TableRow>\n          {adjustments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '9999',\n                    step: '1'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Tax</TableCell>\n            <TableCell align=\"center\">{TAX_RATE_STRING}</TableCell>\n            <TableCell align=\"right\">{usdFormat(orderTaxes)}</TableCell>\n          </TableRow>\n\n          {payments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={4}>{line_item.description}</TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              <b>{usdFormat(orderTotal)}</b>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default OrderLineItems\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\ninterface ProductResponse {\n  data: Product[]\n}\n\ninterface ProductOption {\n  name: string\n  product: Product\n}\n\ninterface LineItemAutocompleteProps {\n  onItemSelected: (value: { name: string; product: Product }) => void\n}\n\nexport default function LineItemAutocomplete(props: LineItemAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<ProductOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/products`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const products = (await response.json()) as ProductResponse\n\n      if (active) {\n        setOptions(\n          products.data.map(p => ({\n            name: `${p.name} ${p.description} ${p.pk} ${p.size} $${\n              p.ws_price\n            } ${p.u_price !== p.ws_price ? `($${p.u_price} EA)` : ''}`,\n            product: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Product search\"\n          fullWidth\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\ninterface MemberResponse {\n  data: Member[]\n}\n\ninterface MemberOption {\n  name: string\n  member: Member\n}\n\ninterface MemberAutocompleteProps {\n  onItemSelected: (value: { name: string; member: Member }) => void\n}\n\nexport default function MemberAutocomplete(props: MemberAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<MemberOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const members = (await response.json()) as MemberResponse\n      if (active) {\n        setOptions(\n          members.data.map(p => ({\n            name: `${p.name} ${\n              p.User && p.User.email ? p.User.email : p.registration_email\n            }`,\n            member: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Member search\"\n          fullWidth\n          autoFocus\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport Loading from '../Loading'\nimport { useOrderService } from './useOrderService'\nimport {\n  Order,\n  OrderRouterProps,\n  OrderStatus,\n  ShipmentStatus,\n  PaymentStatus\n} from '../types/Order'\nimport { LineItem } from '../types/Order'\nimport OrderLineItems from './OrderLineItems'\nimport LineItemAutocomplete from './LineItemAutocomplete'\nimport MemberAutocomplete from './MemberAutocomplete'\nimport { Product } from '../types/Product'\nimport { Member } from '../types/Member'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES,\n  TAX_RATE_STRING\n} from '../constants'\n\nconst blankOrder: Order = {\n  id: 'new',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  total: 0.0,\n  item_count: 0,\n  subtotal: 0,\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  notes: '',\n  createdAt: '',\n  updatedAt: '',\n  OrderLineItems: []\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    },\n    form: {\n      marginBottom: theme.spacing(4)\n    },\n    formInput: {\n      display: 'block',\n      marginBottom: theme.spacing(2)\n    },\n    status: {\n      marginBottom: theme.spacing(2)\n    },\n    liHeader: {\n      display: 'inline-block',\n      marginRight: theme.spacing(2)\n    },\n    sticky: {\n      [theme.breakpoints.up('md')]: {\n        position: 'sticky',\n        top: '72px'\n      }\n    }\n  })\n)\n\ninterface EditOrderProps {\n  userService?: UserService\n}\n\nfunction EditOrder(\n  props: EditOrderProps & RouteComponentProps<OrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orderId, setOrderId] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [order, setOrder] = useState<Order>(blankOrder)\n  const [saving, setSaving] = useState(false)\n  const [showLiAutocomplete, setShowLiAutocomplete] = useState(false)\n  const [showMemberAutocomplete, setShowMemberAutocomplete] = useState(false)\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n  const [needToCheckForDiscounts, setNeedToCheckForDiscounts] = useState(true)\n  const [canApplyMemberDiscount, setCanApplyMemberDiscount] = useState(false)\n  const orderService = useOrderService(orderId, setLoading)\n\n  useEffect(() => {\n    if (orderService.status === 'loaded') {\n      if (orderService.payload) {\n        const _order = orderService.payload\n        if (\n          _order.Member &&\n          _order.Member.discount &&\n          _order.Member.discount > 0\n        ) {\n          setCanApplyMemberDiscount(true)\n        }\n        setOrder(_order)\n      }\n    }\n  }, [orderService])\n\n  const pOrderId = props.match.params.id\n\n  useEffect(() => {\n    if (pOrderId && pOrderId !== 'new') {\n      setOrderId(pOrderId)\n    }\n  }, [pOrderId])\n\n  useEffect(() => {\n    if (\n      order &&\n      !order.UserId &&\n      props.userService &&\n      props.userService.user &&\n      props.userService.user.id\n    ) {\n      const UserId = props.userService.user.id\n      UserId &&\n        setOrder(prevOrder => ({\n          ...prevOrder,\n          UserId\n        }))\n    }\n  }, [props.userService, order])\n\n  useEffect(() => {\n    if (!needToCheckForDiscounts || !order) {\n      setNeedToCheckForDiscounts(false)\n      return\n    }\n    if (order && order.OrderLineItems && canApplyMemberDiscount) {\n      const discountAmt = order.OrderLineItems.map(li => {\n        let canDiscount = false\n        if (li.data && li.data.product && li.selected_unit === 'CS') {\n          canDiscount =\n            li.data.product.ws_price !== li.data.product.ws_price_cost\n        } else if (li.data && li.data.product && li.selected_unit === 'EA') {\n          canDiscount = li.data.product.u_price !== li.data.product.u_price_cost\n        }\n        if (canDiscount && li.data && li.data.product) {\n          const price =\n            li.selected_unit === 'CS'\n              ? parseFloat(li.data.product.ws_price_cost)\n              : parseFloat(li.data.product.u_price_cost)\n\n          return +(li.total - price * li.quantity).toFixed(2)\n        } else {\n          return 0\n        }\n      }).reduce((acc, v) => acc + v, 0)\n\n      if (discountAmt > 0) {\n        const discountPrice = -discountAmt.toFixed(2)\n        const discounts = order.OrderLineItems.filter(\n          li => li.kind === 'adjustment' && li.description === 'member discount'\n        )\n        if (discounts[0]) {\n          if (discounts[0].total !== discountPrice) {\n            const idx = order.OrderLineItems.indexOf(discounts[0])\n            updateLineItem(idx, {\n              ...discounts[0],\n              price: discountPrice,\n              total: discountPrice\n            })\n          }\n        } else {\n          const adjustment: LineItem = {\n            description: 'member discount',\n            quantity: 1,\n            price: discountPrice,\n            total: discountPrice,\n            kind: 'adjustment'\n          }\n          setOrder(prevOrder => ({\n            ...prevOrder,\n            OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n          }))\n        }\n      }\n    }\n\n    setNeedToCheckForDiscounts(false)\n  }, [needToCheckForDiscounts, order, canApplyMemberDiscount])\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function onAddLineitem(value: { name: string; product: Product }) {\n    if (!value) {\n      return\n    }\n    const { product } = value\n    if (value && value.name && product) {\n      const lineItem: LineItem = {\n        description: `${product.name} ${product.description}`,\n        quantity: 1,\n        selected_unit: 'CS',\n        price: parseFloat(product.ws_price),\n        total: parseFloat(product.ws_price),\n        kind: 'product',\n        vendor: product.vendor,\n        data: { product }\n      }\n      setOrder(order => ({\n        ...order,\n        item_count:\n          order.OrderLineItems.filter(li => li.kind === 'product').length + 1,\n        OrderLineItems: [...order.OrderLineItems, lineItem]\n      }))\n      setNeedToCheckForDiscounts(true)\n    }\n  }\n\n  function updateLineItem(idx: number, line_item: LineItem) {\n    setOrder(prevOrder => {\n      let orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1, line_item)\n\n      return {\n        ...prevOrder,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n  function onLineItemUpdated(idx: number, line_item: LineItem) {\n    updateLineItem(idx, line_item)\n    setNeedToCheckForDiscounts(true)\n  }\n  function removeLineItem(idx: number) {\n    if (idx > -1) {\n      const li = order.OrderLineItems[idx]\n      if (li.kind === 'adjustment' && li.description === 'member discount') {\n        setCanApplyMemberDiscount(false)\n      }\n    }\n    setOrder(prevOrder => {\n      const orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1)\n      const item_count = orderLineItems.filter(li => li.kind === 'product')\n        .length\n      return {\n        ...prevOrder,\n        item_count,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n\n  function createAdjustment(event: any) {\n    const adjustment: LineItem = {\n      description: 'new adjustment',\n      quantity: 1,\n      price: 0.0,\n      total: 0.0,\n      kind: 'adjustment'\n    }\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function onMembertemSelected(value?: { name: string; member: Member }) {\n    if (value && value.member) {\n      const { id, name, phone, address } = value.member // email\n      const email =\n        value.member.User && value.member.User.email\n          ? value.member.User.email\n          : value.member.registration_email\n      setOrder(prevOrder => ({\n        ...prevOrder,\n        name: name || '',\n        email: email || '',\n        phone: phone || '',\n        address: address || '',\n        MemberId: id\n      }))\n      setShowMemberAutocomplete(false)\n    }\n  }\n\n  const onSaveBtnClick = (): void => {\n    setSaving(true)\n    const path =\n      orderId && orderId !== 'new' ? '/order/update' : '/order/create'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(order)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.success) {\n          setSnackOpen(true)\n          setSnackMsg('Saved order!')\n          if (response.order.id && (!orderId || orderId === 'new')) {\n            props.history.replace(`/orders/edit/${response.order.id}`)\n          }\n        }\n      })\n      .finally(() => setSaving(false))\n  }\n\n  function onTaxesChange(tax: number) {\n    console.log('onTaxesChange tax:', tax)\n    setOrder(prevOrder => {\n      const notTaxLineItems = prevOrder.OrderLineItems.filter(\n        li => li.kind !== 'tax'\n      )\n\n      return {\n        ...prevOrder,\n        OrderLineItems: [\n          ...notTaxLineItems,\n          {\n            kind: 'tax',\n            description: `tax ${TAX_RATE_STRING}`,\n            quantity: 1,\n            price: tax,\n            total: tax\n          }\n        ]\n      }\n    })\n  }\n\n  function onSubTotalChange(subtotal: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      subtotal\n    }))\n  }\n\n  function onTotalChange(total: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      total\n    }))\n  }\n\n  function valueFor(field: keyof Order) {\n    return order && order[field] ? order[field] : ''\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      status: event.target.value as OrderStatus\n    }))\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      payment_status: event.target.value as PaymentStatus\n    }))\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      shipment_status: event.target.value as ShipmentStatus\n    }))\n  }\n\n  const shouldShowAddMemberDiscount =\n    !canApplyMemberDiscount ||\n    (order &&\n      order.OrderLineItems.filter(li => li.description === 'member discount')\n        .length === 0)\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={12} md={4} className={classes.sticky}>\n            {showMemberAutocomplete ? (\n              <div style={{ display: 'flex' }}>\n                <Tooltip title=\"close\">\n                  <IconButton\n                    aria-label=\"close\"\n                    onClick={() => setShowMemberAutocomplete(false)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n                <MemberAutocomplete onItemSelected={onMembertemSelected} />\n              </div>\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  minHeight: '54px'\n                }}\n              >\n                <div>\n                  <Tooltip title=\"BACK TO ORDERS\">\n                    <IconButton\n                      aria-label=\"back to orders\"\n                      onClick={() => props.history.push('/orders')}\n                    >\n                      <ArrowBackIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <h2 style={{ display: 'inline' }}>\n                    {orderId && orderId !== 'new' ? (\n                      <>\n                        EDIT ORDER <i>#{order.id}</i>\n                      </>\n                    ) : (\n                      'CREATE ORDER'\n                    )}\n                  </h2>\n                </div>\n                <div>\n                  <Tooltip title=\"ADD USER DETAILS\">\n                    <IconButton\n                      aria-label=\"add user details\"\n                      onClick={() => setShowMemberAutocomplete(true)}\n                    >\n                      <PeopleIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              </div>\n            )}\n\n            {order.status !== 'new' && order.status !== 'needs_review' && (\n              <Box color=\"error.main\">\n                <Typography variant=\"overline\" display=\"block\">\n                  ohey!\n                </Typography>\n                <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                  this order status is not \"new\" or \"needs review\" so making\n                  changes might not be great...\n                </Typography>\n              </Box>\n            )}\n            {order.Member && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has discount {order.Member.discount}\n                </Typography>\n              </Box>\n            )}\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"name\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.name}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, name: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"email\"\n                type=\"email\"\n                className={classes.formInput}\n                fullWidth\n                value={order.email}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, email: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"phone\"\n                type=\"phone\"\n                className={classes.formInput}\n                fullWidth\n                value={order.phone}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, phone: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"address\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.address}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, address: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"notes\"\n                className={classes.formInput}\n                multiline\n                rowsMax=\"20\"\n                fullWidth\n                value={order.notes}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, notes: event.target.value }))\n                }}\n              />\n\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </form>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onSaveBtnClick}\n              disabled={saving}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item sm={12} md={8}>\n            <div>\n              {showLiAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowLiAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <LineItemAutocomplete onItemSelected={onAddLineitem} />\n                </div>\n              ) : (\n                <>\n                  <Button\n                    aria-label=\"add line items\"\n                    size=\"large\"\n                    onClick={() => setShowLiAutocomplete(true)}\n                  >\n                    <AddIcon />\n                    LINE ITEMS\n                  </Button>\n\n                  <Button\n                    aria-label=\"add adjustment\"\n                    size=\"large\"\n                    onClick={createAdjustment}\n                  >\n                    <AddIcon />\n                    ADJUSTMENT\n                  </Button>\n\n                  {shouldShowAddMemberDiscount && (\n                    <Button\n                      aria-label=\"add member discount\"\n                      size=\"large\"\n                      onClick={() => {\n                        setCanApplyMemberDiscount(true)\n                        setNeedToCheckForDiscounts(true)\n                      }}\n                    >\n                      <AddIcon />\n                      MEMBER DISCOUNT\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n            <OrderLineItems\n              line_items={order.OrderLineItems}\n              onLineItemUpdated={onLineItemUpdated}\n              removeLineItem={removeLineItem}\n              onTaxesChange={onTaxesChange}\n              onTotalChange={onTotalChange}\n              onSubTotalChange={onSubTotalChange}\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(EditOrder))\n","import React, { createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { MemberRouterProps } from '../types/Member'\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: 'calc(100vh - 64px)'\n    }\n  })\n)\n\nfunction Members(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const tableRef = createRef<any>()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const newMemberAction = {\n    icon: 'add',\n    tooltip: 'add new member',\n    isFreeAction: true,\n    onClick: () => props.history.push('/members/new')\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove Member',\n    icon: 'delete',\n    onClick: (e: any, member: Member | Member[]) => {\n      let members: Member[]\n      if (Array.isArray(member)) {\n        members = member\n      } else {\n        members = [member]\n      }\n\n      if (!members || members.length === 0) {\n        return\n      }\n      const id = members[0].id\n      if (window.confirm(`Are you sure you want to delete this member?`)) {\n        fetch(`${API_HOST}/member`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ id })\n        })\n          .then(response => response.json())\n          .then(() => tableRef.current && tableRef.current.onQueryChange())\n          .catch(err => console.warn('members deleteAction caught err', err))\n      }\n    }\n  }\n\n  const editAction = {\n    icon: 'edit',\n    tooltip: 'edit member',\n    onClick: (e: any, members: Member | Member[]) => {\n      let member: Member\n      if (Array.isArray(members)) {\n        member = members[0]\n      } else {\n        member = members\n      }\n      member.id && props.history.push(`/members/${member.id}`)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row =>\n              row.createdAt && new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'registration email',\n            field: 'registration_email',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'phone', field: 'phone', type: 'string', filtering: false },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'discount', field: 'discount', type: 'string' },\n          { title: 'discount type', field: 'discount_type', type: 'string' },\n          { title: 'fees paid', field: 'fees_paid', type: 'string' },\n          { title: 'store credit', field: 'store_credit', type: 'string' },\n          { title: 'shares', field: 'shares', type: 'string' },\n          { title: 'type', field: 'member_type', type: 'string' },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            hidden: true\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/members`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Members\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 64px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={[newMemberAction, deleteAction, editAction]}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Members)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\n// import FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\n// import Menu from '@material-ui/core/Menu'\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Member, MemberRouterProps } from '../types/Member'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankMember: Member = {\n  id: 'new',\n  registration_email: '',\n  name: '',\n  phone: '',\n  address: '',\n  discount: 0,\n  discount_type: '',\n  fees_paid: 0,\n  store_credit: 0,\n  shares: 0,\n  member_type: '',\n  data: {}\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    sticky: {\n      [theme.breakpoints.up('sm')]: {\n        position: 'sticky',\n        top: '64px'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n)\n\nfunction EditMember(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const [loadingMember, setLoadingMember] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n  const memberId = props.match.params.id\n\n  const [member, setMember] = useState<Member>(blankMember)\n\n  useEffect(() => {\n    if (!memberId || memberId === 'undefined') {\n      return\n    }\n\n    if (memberId === 'new') {\n      setMember(blankMember)\n      setLoadingMember(false)\n    } else {\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          filters: [\n            {\n              column: {\n                field: 'id'\n              },\n              value: memberId\n            }\n          ]\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('zomfg response:', response)\n          setMember(response.data[0] as Member)\n        })\n        .catch(err => setMember(blankMember))\n        .finally(() => setLoadingMember(false))\n    }\n  }, [memberId])\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n\n    const path = memberId === 'new' ? '/create' : '/update'\n\n    fetch(`${API_HOST}/member${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ member })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      {loadingMember ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={6}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                minHeight: '54px'\n              }}\n              className={classes.sticky}\n            >\n              <Tooltip title=\"BACK TO MEMBERS\">\n                <IconButton\n                  aria-label=\"back to members\"\n                  onClick={() => props.history.push('/members')}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </Tooltip>\n\n              <h2>{memberId === 'new' ? 'Create' : 'Edit'} Member</h2>\n            </div>\n\n            <TextField\n              label=\"email\"\n              fullWidth\n              value={member.registration_email}\n              className={classes.gridItem}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  registration_email: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"name\"\n              fullWidth\n              value={member.name}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  name: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"phone\"\n              fullWidth\n              value={member.phone}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  phone: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"address\"\n              fullWidth\n              value={member.address}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  address: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount\"\n              fullWidth\n              value={member.discount}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount type\"\n              fullWidth\n              value={member.discount_type}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount_type: event.target.value\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"fees paid\"\n              fullWidth\n              value={member.fees_paid}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  fees_paid: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"store credit\"\n              fullWidth\n              value={member.store_credit}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  store_credit: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"shares\"\n              fullWidth\n              value={member.shares}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  shares: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <InputLabel id=\"prev-import-tag-select-label\">Type</InputLabel>\n              <Select\n                labelId=\"prev-import-tag-select-label\"\n                id=\"prev-import-tag-select\"\n                value={member.member_type}\n                onChange={event =>\n                  event.target &&\n                  event.target.value &&\n                  setMember(prevMember => ({\n                    ...prevMember,\n                    member_type: event.target.value as string\n                  }))\n                }\n              >\n                <MenuItem value=\"consumer-owners\">consumer-owner</MenuItem>\n                <MenuItem value=\"worker-owners\">worker-owner</MenuItem>\n                <MenuItem value=\"producer-owners\">producer owner</MenuItem>\n              </Select>\n            </FormControl>\n\n            <div className={classes.gridItem}>\n              <Button\n                disabled={loading}\n                onClick={() => submitData()}\n                size=\"large\"\n              >\n                {memberId === 'new' ? 'CREATE' : 'SAVE'}\n              </Button>\n            </div>\n          </Grid>\n\n          <Grid item sm={6} className={classes.sticky}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </Paper>\n  )\n}\n\nexport default withRouter(EditMember)\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport clsx from 'clsx'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\n// import Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport { mainListItems } from './listItems' // secondaryListItems\n\nimport { RootState } from './redux'\nimport { UserServiceProps } from './redux/session/reducers'\nimport { checkSession } from './redux/session/actions'\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\nimport { getPreferences } from './redux/preferences/actions'\n\nimport Loading from './Loading'\nimport Dashboard from './dashboard/Dashboard'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ProtectedRoute from './auth/ProtectedRoute'\nimport UserMenu from './auth/UserMenu'\nimport Pages from './pages/Pages'\nimport Orders from './orders/Orders'\nimport WholesaleOrders from './wholesaleorders/WholesaleOrders'\nimport Users from './users/Users'\nimport Products from './products/Products'\nimport ImportProducts from './products/ImportProducts'\nimport EditOrder from './orders/EditOrder'\nimport Members from './members/Members'\nimport EditMember from './members/EditMember'\nimport { APP_VERSION } from './constants'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    title: {\n      flexGrow: 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    version: {\n      fontStyle: 'italic',\n      fontSize: '0.8em',\n      flexGrow: 1,\n      alignSelf: 'center',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    content: {\n      flexGrow: 1\n    },\n    toolbar: theme.mixins.toolbar\n  })\n)\n\ninterface DispatchProps {\n  checkSession: () => void\n  getPreferences: () => void\n}\n\ntype Props = UserServiceProps & PreferencesServiceProps & DispatchProps\n\nconst App: React.FC<Props> = (props: Props) => {\n  const [loading, setLoading] = useState(true)\n\n  // checkSession is destructured from props and passed into useEffect\n  // which is a bit confusing since checkSession is also imported. ah scope.\n  const {\n    checkSession,\n    userService,\n    getPreferences\n    // ,preferencesService\n  } = props\n\n  useEffect(() => {\n    getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    checkSession()\n  }, [checkSession])\n\n  useEffect(() => {\n    // console.log(\n    //   'userService fx.. userService.isFetching:',\n    //   !userService.isFetching && !!userService.user,\n    //   'userService:',\n    //   userService\n    // )\n    !userService.isFetching && userService.user && setLoading(false)\n    setOpen(userService.isFetching && !!userService.user)\n  }, [userService])\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  // #TODO: move this. i guess.\n  // console.log(preferencesService)\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n            {userService.user && (\n              <IconButton\n                edge=\"start\"\n                aria-label=\"open drawer\"\n                onClick={() => setOpen(true)}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              className={classes.title}\n              noWrap\n            >\n              MARSH\n            </Typography>\n            <UserMenu />\n          </Toolbar>\n        </AppBar>\n\n        {userService && userService.user && userService.user.email && (\n          <Drawer\n            classes={{\n              paper: clsx(classes.drawerPaper)\n            }}\n            onClose={() => setOpen(false)}\n            open={open}\n          >\n            <List onClick={() => setOpen(false)}>{mainListItems}</List>\n\n            {/* <Divider /> */}\n            {/* <List>{secondaryListItems}</List>  */}\n            <div className={classes.version}>\n              <span>{APP_VERSION}</span>\n            </div>\n          </Drawer>\n        )}\n\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {/* ROUTER */}\n\n          {loading ? (\n            <Loading />\n          ) : (\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/products\"\n                component={Products}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/products/import\"\n                component={ImportProducts}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders\"\n                exact\n                component={Orders}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders/edit/:id\"\n                component={EditOrder}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders/create\"\n                component={EditOrder}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/wholesaleorders\"\n                component={WholesaleOrders}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/users\"\n                component={Users}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/members\"\n                component={Members}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/members/:id\"\n                component={EditMember}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages\"\n                component={Pages}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/\"\n                component={Dashboard}\n              />\n            </Switch>\n          )}\n\n          {/* <Box pt={4}>FOOT'r</Box> */}\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState\n): UserServiceProps & PreferencesServiceProps => {\n  return {\n    userService: states.session.userService,\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    checkSession: () => dispatch(checkSession()),\n    getPreferences: () => dispatch(getPreferences())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n    // background: {\n    //   default: '#fff',\n    // },\n  }\n})\n\nexport default theme\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport theme from './theme'\nimport store from './redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}