{"version":3,"sources":["redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","theme.tsx","listItems.tsx","constants.ts","redux/session/actions.ts","redux/preferences/actions.ts","Loading.tsx","dashboard/Title.tsx","dashboard/Orders.tsx","dashboard/WholesaleOrders.tsx","dashboard/Members.tsx","dashboard/Dashboard.tsx","auth/Login.tsx","auth/Register.tsx","auth/ProtectedRoute.tsx","members/StoreCredits.tsx","orders/OrderDetailPanel.tsx","orders/Orders.tsx","wholesaleorders/useWholesaleOrderService.ts","wholesaleorders/EditMenu.tsx","wholesaleorders/WholesaleOrderLineItems.tsx","wholesaleorders/EditWholesaleOrder.tsx","wholesaleorders/AddWholesaleOrderLineItems.tsx","wholesaleorders/WholesaleOrders.tsx","users/NewUserModal.tsx","users/UserRolesMenu.tsx","users/Users.tsx","products/Products.tsx","products/ImportProducts.tsx","orders/useOrderService.ts","orders/OrderLineItems.tsx","orders/LineItemAutocomplete.tsx","orders/MemberAutocomplete.tsx","orders/EditOrder.tsx","members/Members.tsx","members/EditMember.tsx","App.tsx","index.tsx"],"names":["combineReducers","userService","state","isFetching","action","type","user","error","undefined","preferencesService","preferences","createStore","session","applyMiddleware","thunk","darkTheme","createMuiTheme","palette","primary","main","secondary","red","A400","lightTheme","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","ListSubheader","inset","API_HOST","TAX_RATE","TAX_RATE_STRING","toFixed","ORDER_STATUSES","new","needs_review","pending","complete","void","archived","PAYMENT_STATUSES","balance_due","paid","credit_owed","failed","SHIPMENT_STATUSES","backorder","ready","shipped","partial","canceled","APP_VERSION","process","npm_package_version","require","version","set","setError","NULL_USER","id","email","token","DEFAULT_PREFERENCES","dark_mode","Loading","Container","fixed","Box","pt","style","textAlign","Title","props","Typography","variant","color","gutterBottom","children","useStyles","makeStyles","theme","seeMore","marginTop","spacing","rowHover","backgroundColor","background","default","cursor","withRouter","classes","localStorage","getItem","useState","data","page","totalCount","orders","setOrders","useEffect","fetch","method","headers","Authorization","body","JSON","stringify","pageSize","then","response","json","catch","err","console","warn","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","order","key","className","onClick","history","push","createdAt","Date","toLocaleString","status","name","item_count","subtotal","total","Button","event","vendor","payment_status","shipment_status","members","setMembers","member","registration_email","fees_paid","root","padding","minHeight","paper","display","overflowX","flexDirection","Dashboard","Grid","container","item","xs","md","Paper","form","width","justifyContent","title","alignItems","submit","margin","connect","states","ownProps","dispatch","login","password","a","async","Promise","resolve","msg","setItem","reason","message","e","log","finally","role","maxWidth","onSubmit","preventDefault","target","currentTarget","emailEl","elements","namedItem","passwordEl","value","length","TextField","label","autoFocus","fullWidth","required","disabled","register","regKey","regKeyParam","URLSearchParams","useLocation","search","get","passwordConfirmEl","regKeyEl","ProtectedRoute","Component","rest","render","isAdmin","pathname","from","location","header","fontSize","text","row","nested","paddingLeft","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","content","MuiExpansionPanelSummary","ExpansionPanelDetails","marginLeft","MuiExpansionPanelDetails","result","List","aria-labelledby","subheader","Tooltip","store_credit","square","expandIcon","aria-controls","colSpan","credits","credits_sum","li","OrderId","description","adjustments","adjustments_sum","createStyles","marginRight","borderLeft","divider","gridHeading","gridItem","paddingBottom","paddingRight","lastUpdated","squareLink","OrderDetailPanel","line_items","OrderLineItems","filter","kind","payments","paymentsTotal","reduce","acc","v","parseFloat","creditsTotal","balance","aria-label","idx","scope","product","unf","price","selected_unit","quantity","payment","receipt_number","href","receipt_url","rel","Math","abs","direction","justify","phone","address","User","Member","notes","updatedAt","tableRef","createRef","searchExpanded","setSearchExpanded","isSelecting","setIsSelecting","searchAction","icon","tooltip","isFreeAction","newOrderAction","printAction","orderIds","wOpen","window","open","document","innerHTML","editAction","actions","setActions","columns","field","filtering","lookup","hidden","query","reject","detailPanel","onRowClick","rowData","togglePanel","options","headerStyle","position","top","maxBodyHeight","pageSizeOptions","debounceInterval","emptyRowsWhenPaging","selection","onSelectionChange","blankWholesaleOrder","useWholesaleOrderService","setLoading","reload","setReload","setResult","payload","useAllWholesaleOrdersService","reloadWholesaleOrders","setReloadWholesaleOrders","useWholesaleOrderSaveService","wholesaleOrder","doSave","setDoSave","setSnackMsg","setSnackOpen","path","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","common","white","MenuItem","EditMenu","React","anchorEl","setAnchorEl","handleClose","ButtonGroup","onSaveBtnClick","aria-haspopup","keepMounted","Boolean","onClose","confirm","onDeleteBtnClick","onProductsExportToCsv","liTable","deleteBtn","minWidth","groupedRow","groupedRowTotals","typography","h6","lineItems","lineItemData","setLineItemData","groupedLineItems","prevData","productTotal","adjustmentTotal","orderTotal","forEach","upc_code","qty","pk","liTotal","ws_price_cost","qtySum","totalSum","Object","values","u_price_cost","round","IconButton","ids","removeLineItem","items","o","issueOrderCredits","category","sub_category","ws_price","u_price","import_tag","keys","Parser","editMenu","wholesaleOrderId","setWholesaleOrderId","setWholesaleOrder","loading","wholesaleOrderService","snackOpen","snackMsg","handleSnackClose","match","params","valueFor","sm","onChange","prevOrder","FormControl","InputLabel","Select","labelId","multiline","rows","rowsMax","setReloadOrders","replace","csvout","fields","parse","filename","navigator","msSaveBlob","blobObject","Blob","anchor","createElement","download","URL","createObjectURL","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","saveStreamCSV","Snackbar","autoHideDuration","ContentProps","needsRefresh","setNeedsRefresh","refreshTable","useCallback","current","onQueryChange","selectedLineItems","setSelectedLineItems","addAction","handleWholesaleOrderMenuOpen","Array","isArray","wholesaleorderLookup","setWholesaleOrderLookup","toLocaleDateString","wholesaleorderMenuAnchorEl","setWholesaleOrderMenuAnchorEl","handleWholesaleOrderMenuClose","handleWholesaleOrderSelect","filterPlaceholder","Divider","wholesaleorder","titleText","flexGrow","height","paperNav","list","selectedListItem","noOrdersMsg","wholesaleOrders","setWholesaleOrders","reloadOrders","selectedStatus","setSelectedStatus","allWholesaleOrders","split","reverse","isNaN","parseInt","lg","defaultExpanded","loadOrdersForStatus","exact","modal","shadows","ROLES","NewUserModal","setEmail","setRole","setDiabled","includes","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","handleRefresh","UserRolesMenu","handleRoleChange","resp","newUserModalOpen","setNewUserModalOpen","newUserAction","deleteAction","alert","PROPERTY_MAP","c","d","f","g","k","l","m","og","r","w","ft","n","s","y","1","2","3","Products","p","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","setVendorLookup","vendorLookup","filterCellStyle","paddingTop","CS","EA","codes","code","Chip","zIndex","ImportProducts","setVendor","importTag","setImportTag","prevImportTag","setPrevImportTag","markup","setMarkup","formData","setFormData","setResponse","setImportTagsLookup","importTagsLookup","vendorMenuAnchorEl","setVendorMenuAnchorEl","handleVendorMenuClose","helperText","handleVendorSelect","tag","FormHelperText","inputProps","min","max","step","accept","files","FormData","append","delete","toString","useOrderService","table","borderCollapse","qtyinput","usdFormat","num","line_item","orderSubtotal","sum","i","orderAdjustmentsTotal","adjustmentsTotal","orderTaxes","onTaxesChange","onTotalChange","onSubTotalChange","handleQtyChange","indexOf","onLineItemUpdated","handleDescriptionChange","handlePriceChange","createCreditFromLineItem","createLineItemCredit","pksize","join","liPkSize","unit","handleUnitChange","unit_type","InputLabelProps","shrink","rowSpan","InputProps","startAdornment","InputAdornment","LineItemAutocomplete","setOpen","setOptions","q","setQ","active","products","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onItemSelected","freeSolo","renderInput","endAdornment","CircularProgress","MemberAutocomplete","blankOrder","formInput","liHeader","sticky","breakpoints","up","saveBtn","orderSideHeading","emailIcon","fetchStoreCredit","MemberId","setStoreCredit","orderId","setOrderId","setOrder","saving","setSaving","showLiAutocomplete","setShowLiAutocomplete","showMemberAutocomplete","setShowMemberAutocomplete","needToCheckForDiscounts","setNeedToCheckForDiscounts","canApplyMemberDiscount","setCanApplyMemberDiscount","orderService","storeCredit","_order","discount","pOrderId","UserId","discountAmt","canDiscount","discountPrice","discounts","updateLineItem","adjustment","orderLineItems","splice","createCredit","li_total","absPrice","credit","shouldShowAddMemberDiscount","success","discount_type","amt","applyStoreCredit","noValidate","autoComplete","persist","lineItem","tax","notTaxLineItems","newMemberAction","blankMember","shares","member_type","ordersHeader","loadingMember","setLoadingMember","memberId","setMember","createNewUser","setCreateNewUser","filters","column","fetchMemberOrders","prevMember","FormControlLabel","control","Checkbox","checked","submitData","zeroMinWidth","nav","speedDial","left","transition","drawer","flexShrink","drawerPaper","fontStyle","alignSelf","checkSession","getPreferences","rject","setPreferences","logout","removeItem","useDarkTheme","setUseDarkTheme","ThemeProvider","CssBaseline","Fab","Drawer","clsx","prev","textOverflow","overflow","Login","Register","Orders","EditOrder","WholesaleOrders","Users","Members","EditMember","StoreCredits","bugsnagClient","bugsnag","use","bugsnagReact","ErrorBoundary","getPlugin","ReactDOM","store","querySelector"],"mappings":"gmDAiCeA,cAAkC,CAC/CC,YAnBkB,WAGD,IAFjBC,EAEgB,uDAFK,CAAEC,YAAY,GACnCC,EACgB,uCAChB,OAAQA,EAAOC,MACb,IAAK,MACH,OAAO,eAAKH,EAAZ,CAAmBI,KAAMF,EAAOE,KAAMC,WAAOC,IAC/C,IAAK,eACH,OAAO,eACFN,EADL,CAEEC,WAAYC,EAAOD,aAEvB,IAAK,YACH,OAAO,eAAKD,EAAZ,CAAmBI,UAAME,EAAWD,MAAOH,EAAOG,QAEtD,OAAOL,KCGMF,cAAyC,CACtDS,mBAnByB,WAGD,IAFxBP,EAEuB,uDAFK,CAAEC,YAAY,GAC1CC,EACuB,uCACvB,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,eAAKH,EAAZ,CAAmBQ,YAAaN,EAAOM,YAAaH,WAAOC,IAC7D,IAAK,2BACH,OAAO,eACFN,EADL,CAEEC,WAAYC,EAAOD,aAEvB,IAAK,wBACH,OAAO,eAAKD,EAAZ,CAAmBQ,iBAAaF,EAAWD,MAAOH,EAAOG,QAE7D,OAAOL,KCpBMS,cACbX,YAA2B,CACzBY,UACAF,gBAEFG,YAAgBC,M,yMCZZC,EAAYC,YAAe,CAC/BC,QAAS,CACPZ,KAAM,OACNa,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERZ,MAAO,CACLY,KAAME,IAAIC,SAKVC,EAAaP,YAAe,CAChCC,QAAS,CACPZ,KAAM,QACNa,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERZ,MAAO,CACLY,KAAME,IAAIC,S,uLCZHE,GACX,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,KACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,eAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,aACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,cAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,oBACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,qBAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,WACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,YAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,oBACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,sBAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,UACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,WAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,YACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,aAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMC,GAAG,iBACnC,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,oB,IAM1B,6BACE,kBAACc,EAAA,EAAD,CAAeC,OAAK,GAApB,iBACA,kBAACR,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,mBAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,kBAExB,kBAACO,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,oB,kBCtFfgB,GAEP,4BAGOC,GAAW,OACXC,GAAe,WAAkB,IAAXD,IAAgBE,QAAQ,GAA/B,KAGfC,GAAoC,CAC/CC,IAAK,MACLC,aAAc,eACdC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,SAAU,YAICC,GAA6C,CACxDC,YAAa,cACbC,KAAM,OACNC,YAAa,cACbC,OAAQ,SACRN,KAAM,QAIKO,GAA+C,CAC1DC,UAAW,YACXV,QAAS,UACTW,MAAO,QACPC,QAAS,UACTC,QAAS,UACTC,SAAU,YAGCC,GAAW,WACtBC,8CAAYC,qBAAuBC,EAAQ,KAAmBC,QADxC,4BClBXC,GAAM,SAACvD,GAClB,MAAO,CAAED,KAAM,MAAOC,SAEXwD,GAAW,SAACvD,GACvB,MAAO,CAAEF,KAAM,YAAaE,UAEjBJ,GAAa,SAACA,GACzB,MAAO,CAAEE,KAAM,eAAgBF,eAG3B4D,GAAkB,CACtBC,QAAIxD,EACJyD,WAAOzD,EACP0D,WAAO1D,GC7BH2D,GAAmC,CACvCC,UAAW,QAkBAP,GAAM,SAACnD,GAClB,MAAO,CAAEL,KAAM,kBAAmBK,gBAKvBP,GAAa,SAACA,GACzB,MAAO,CAAEE,KAAM,2BAA4BF,e,oBC3B9B,SAASkE,KACtB,OACE,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,CAAKC,GAAI,EAAGC,MAAO,CAAEC,UAAW,WAAhC,wB,6FCJS,SAASC,GAAMC,GAC5B,OACE,kBAACC,GAAA,EAAD,CAAYnD,UAAU,KAAKoD,QAAQ,KAAKC,MAAM,cAAcC,cAAY,GACrEJ,EAAMK,UCeb,IAAMC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,IAE3BC,SAAU,CACR,UAAW,CACTC,gBAAiBL,EAAMpE,QAAQ0E,WAAWC,QAC1CC,OAAQ,gBAqFCC,oBAhFf,SAAgBjB,GACd,IAAMkB,EAAUZ,KAEVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAHT,EAKdC,mBAAoB,CAC9CC,KAAM,GACNC,KAAM,EACNC,WAAY,IAR4B,mBAKnCC,EALmC,KAK3BC,EAL2B,KA8B1C,OAnBAC,qBAAU,WACRtC,GACEqC,GACAE,MAAM,GAAD,OAAIvE,GAAJ,WAAuB,CAC1BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEC,SAAU,OAEhCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKV,GACLa,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACN,CAAElB,KAAM,GAAIC,KAAM,EAAGC,WAAY,QAE7C,CAACnC,EAAOqC,IAGT,kBAAC,IAAMiB,SAAP,KACE,kBAAC5C,GAAD,sBACA,kBAAC6C,GAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,WAGJ,kBAACC,GAAA,EAAD,KACGzB,EAAOH,KAAK6B,KAAI,SAACC,GAAD,OACf,kBAACL,GAAA,EAAD,CACEM,IAAKD,EAAMjE,GACXmE,UAAWpC,EAAQN,SACnB2C,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAd,uBAAmCL,EAAMjE,OAExD,kBAAC6D,GAAA,EAAD,KACGI,EAAMM,WAAa,IAAIC,KAAKP,EAAMM,WAAWE,kBAEhD,kBAACZ,GAAA,EAAD,KAAYI,EAAMS,QAClB,kBAACb,GAAA,EAAD,KAAYI,EAAMU,MAClB,kBAACd,GAAA,EAAD,KAAYI,EAAMhE,OAClB,kBAAC4D,GAAA,EAAD,KAAYI,EAAMW,YAClB,kBAACf,GAAA,EAAD,KAAYI,EAAMY,UAClB,kBAAChB,GAAA,EAAD,CAAWC,MAAM,SAASG,EAAMa,aAKxC,yBAAKX,UAAWpC,EAAQT,SACtB,kBAACyD,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QAAS,SAACY,GACRnE,EAAMwD,QAAQC,KAAK,aAJvB,wBC9EFnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,IAE3BC,SAAU,CACR,UAAW,CACTC,gBAAiBL,EAAMpE,QAAQ0E,WAAWC,QAC1CC,OAAQ,gBAyFCC,oBApFf,SAAyBjB,GACvB,IAAMkB,EAAUZ,KAEVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAHA,EAKvBC,mBAA6B,CACvDC,KAAM,GACNC,KAAM,EACNC,WAAY,IARqC,mBAK5CC,EAL4C,KAKpCC,EALoC,KA8BnD,OAnBAC,qBAAU,WACRtC,GACEqC,GACAE,MAAM,GAAD,OAAIvE,GAAJ,oBAAgC,CACnCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEC,SAAU,OAEhCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKV,GACLa,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACN,CAAElB,KAAM,GAAIC,KAAM,EAAGC,WAAY,QAE7C,CAACnC,EAAOqC,IAGT,kBAAC,IAAMiB,SAAP,KACE,kBAAC5C,GAAD,gCACA,kBAAC6C,GAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,0BAMJ,kBAACE,GAAA,EAAD,KACGzB,EAAOH,KAAK6B,KAAI,SAACC,GAAD,OACf,kBAACL,GAAA,EAAD,CACEM,IAAKD,EAAMjE,GACXmE,UAAWpC,EAAQN,SACnB2C,QAAS,kBACPvD,EAAMwD,QAAQC,KAAd,gCAA4CL,EAAMjE,OAGpD,kBAAC6D,GAAA,EAAD,KACGI,EAAMM,WAAa,IAAIC,KAAKP,EAAMM,WAAWE,kBAEhD,kBAACZ,GAAA,EAAD,KAAYI,EAAMgB,QAClB,kBAACpB,GAAA,EAAD,KAAYI,EAAMS,QAClB,kBAACb,GAAA,EAAD,KAAYI,EAAMiB,gBAClB,kBAACrB,GAAA,EAAD,KAAYI,EAAMkB,uBAQ1B,yBAAKhB,UAAWpC,EAAQT,SACtB,kBAACyD,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QAAS,SAACY,GACRnE,EAAMwD,QAAQC,KAAK,sBAJvB,iBClFFnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,IAE3BC,SAAU,CACR,UAAW,CACTC,gBAAiBL,EAAMpE,QAAQ0E,WAAWC,QAC1CC,OAAQ,gBAgFCC,oBA3Ef,SAAiBjB,GACf,IAAMkB,EAAUZ,KAEVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAHR,EAKbC,mBAAqB,CACjDC,KAAM,GACNC,KAAM,EACNC,WAAY,IAR6B,mBAKpC+C,EALoC,KAK3BC,EAL2B,KA8B3C,OAnBA7C,qBAAU,WACRtC,GACEmF,GACA5C,MAAM,GAAD,OAAIvE,GAAJ,YAAwB,CAC3BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEC,SAAU,OAEhCC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,KAAKoC,GACLjC,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACN,CAAElB,KAAM,GAAIC,KAAM,EAAGC,WAAY,QAE7C,CAACnC,EAAOmF,IAGT,kBAAC,IAAM7B,SAAP,KACE,kBAAC5C,GAAD,uBACA,kBAAC6C,GAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gBACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,eAGJ,kBAACC,GAAA,EAAD,KACGqB,EAAQjD,KAAK6B,KAAI,SAACsB,GAAD,OAChB,kBAAC1B,GAAA,EAAD,CACEM,IAAKoB,EAAOtF,GACZmE,UAAWpC,EAAQN,SACnB2C,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAd,mBAA+BgB,EAAOtF,OAErD,kBAAC6D,GAAA,EAAD,KACGyB,EAAOf,WACN,IAAIC,KAAKc,EAAOf,WAAWE,kBAE/B,kBAACZ,GAAA,EAAD,KAAYyB,EAAOX,MACnB,kBAACd,GAAA,EAAD,KAAYyB,EAAOC,oBACnB,kBAAC1B,GAAA,EAAD,CAAWC,MAAM,SAASwB,EAAOE,iBAKzC,yBAAKrB,UAAWpC,EAAQT,SACtB,kBAACyD,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QAAS,SAACY,GACRnE,EAAMwD,QAAQC,KAAK,cAJvB,wBCrFFnD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoE,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBmE,UAAW,SAEbC,MAAO,CACLF,QAASrE,EAAMG,QAAQ,GACvBqE,QAAS,OACTC,UAAW,SACXC,cAAe,cAIJ,SAASC,KACtB,IAAMjE,EAAUZ,KAEhB,OACE,yBAAKgD,UAAWpC,EAAQ0D,MACtB,kBAACQ,GAAA,EAAD,CAAMC,WAAS,EAAC1E,QAAS,GACvB,kBAACyE,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ6D,OACxB,kBAAC,GAAD,QAGJ,kBAACK,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ6D,OACxB,kBAAC,GAAD,QAGJ,kBAACK,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACE,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ6D,OACxB,kBAAC,GAAD,U,cCnBNzE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkF,KAAM,CACJC,MAAO,OACPb,UAAW,QACXpE,UAAWF,EAAMG,QAAQ,GACzBqE,QAAS,OACTE,cAAe,SACfU,eAAgB,UAElBC,MAAO,CACLb,QAAS,OACTY,eAAgB,gBAChBE,WAAY,YAEdC,OAAQ,CACNC,OAAQxF,EAAMG,QAAQ,EAAG,EAAG,QA4GhC,IAkBesF,gBAlBS,SACtBC,EACAC,GAEA,MAAO,CACL/K,YAAa8K,EAAOnK,QAAQX,gBAIL,SACzBgL,EACAD,GAEA,MAAO,CACLE,MAAO,SAACjH,EAAOkH,GAAR,OAAqBF,ERjCX,SACnBhH,EACAkH,GAEA,OAAO,SAAOF,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,GACxBN,EAAS9K,IAAW,IAEpBsG,MAAM,GAAD,OAAIvE,GAAJ,UAAsB,CACzBwE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CAAE9C,QAAOkH,eAE7BlE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAEgB,OAAjBA,EAASsE,KAAgBtE,EAAS5G,MAAQ4G,EAAS5G,KAAK4D,OAC1D8B,cAAgBA,aAAayF,QAAQ,QAASvE,EAAS5G,KAAK4D,OAC5D+G,EAASpH,GAAIqD,EAAS5G,QAEtB2K,EAASnH,GAAS,CAAEvD,MAAO,QAASmL,OAAQxE,EAASyE,cAGxDvE,OAAM,SAACwE,GACNtE,QAAQuE,IAAI,eAAgBD,GAC5BX,EACEnH,GAAS,CAAEvD,MAAO,QAASmL,OAAQ,qCAGtCI,SAAQ,WACPb,EAAS9K,IAAW,IACpBoL,WA7BD,sCQ6BgCL,CAAMjH,EAAOkH,QAIvCL,CAA6ChF,aA1H5D,SAAejB,GACb,IAiBQ5E,EAAyB4E,EAAzB5E,YAAaoI,EAAYxD,EAAZwD,QACftC,EAAUZ,KAnBW,EAoBDe,mBAAS,IApBR,mBAoBpB3F,EApBoB,KAoBbuD,EApBa,KAqC3B,OAdA0C,qBAAU,WAENvG,EAAYK,OACXL,EAAYE,YACbF,EAAYK,KAAKyL,MACS,UAA1B9L,EAAYK,KAAKyL,MAEjB1D,EAAQC,KAAK,OAKd,CAACrI,EAAaoI,IAGf,kBAAC/D,GAAA,EAAD,CAAW0H,SAAS,MAClB,0BAAMC,SAtCM,SAACjD,GACfA,EAAMkD,iBACNpI,EAAS,IACT,IAAMqI,EAASnD,EAAMoD,cACfC,EAAUF,EAAOG,SAASC,UAAU,SACpCC,EAAaL,EAAOG,SAASC,UAAU,YAG3CF,GACAA,EAAQI,MAAMC,OAAS,GACvBF,GACAA,EAAWC,MAAMC,OAAS,GAE1B7H,EAAMqG,MAAMmB,EAAQI,MAAOD,EAAWC,QAyBbtE,UAAWpC,EAAQwE,MAC1C,yBAAKpC,UAAWpC,EAAQ2E,OACtB,kBAAC5F,GAAA,EAAD,CAAYC,QAAQ,KAAK8E,QAAQ,SAAjC,cAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,UAAvC,UAIF,kBAAC8C,GAAA,EAAD,CACEC,MAAM,QACNjE,KAAK,QACLtI,KAAK,OACLwM,WAAS,EACTC,WAAS,EACTC,UAAQ,IAEV,kBAACJ,GAAA,EAAD,CACEC,MAAM,WACNjE,KAAK,WACLtI,KAAK,WACLyM,WAAS,EACTC,UAAQ,IAGV,6BACE,kBAAChE,GAAA,EAAD,CACE1I,KAAK,SACLyM,WAAS,EACT/H,QAAQ,YACRC,MAAM,UACNgI,SAAUnI,EAAM5E,YAAYE,WAC5BgI,UAAWpC,EAAQ6E,QANrB,UAYF,kBAACpG,GAAA,EAAD,CAAKQ,MAAM,cACRH,EAAM5E,YAAYM,OACjB,oCACE,kBAACuE,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,SAAvC,mBAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,QAAQ8E,QAAQ,QAAQ5E,cAAY,GACrDJ,EAAM5E,YAAYM,MAAMmL,SAI9BnL,GACC,oCACE,kBAACuE,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,SAAvC,mBAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,QAAQ8E,QAAQ,QAAQ5E,cAAY,GACrD1E,WCjHX4E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6E,UAAW,GAGXK,KAAM,CACJC,MAAO,OACPb,UAAW,QACXpE,UAAWF,EAAMG,QAAQ,GACzBqE,QAAS,OACTE,cAAe,SACfU,eAAgB,UAElBG,OAAQ,CACNC,OAAQxF,EAAMG,QAAQ,EAAG,EAAG,QA8IhC,IAkBesF,gBAlBS,SACtBC,EACAC,GAEA,MAAO,CACL/K,YAAa8K,EAAOnK,QAAQX,gBAIL,SACzBgL,EACAD,GAEA,MAAO,CACLiC,SAAU,SAACC,EAAQ/B,GAAT,OAAsBF,ET3GZ,SACtBiC,EACA/B,GAEA,OAAO,SAAOF,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,GACxBN,EAAS9K,IAAW,IAEpBsG,MAAM,GAAD,OAAIvE,GAAJ,aAAyB,CAC5BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CAAEmG,SAAQ/B,eAE9BlE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAEgB,OAAjBA,EAASsE,KAAgBtE,EAAS5G,MAAQ4G,EAAS5G,KAAK4D,OAC1D8B,cAAgBA,aAAayF,QAAQ,QAASvE,EAAS5G,KAAK4D,OAC5D+G,EAASpH,GAAIqD,EAAS5G,QAEtB2K,EAASnH,GAAS,CAAEvD,MAAO,QAASmL,OAAQxE,EAASyE,cAGxDvE,OAAM,SAACwE,GACNtE,QAAQuE,IAAI,kBAAmBD,GAC/BX,EACEnH,GAAS,CACPvD,MAAO,QACPmL,OAAQ,wCAIbI,SAAQ,WACPb,EAAS9K,IAAW,IACpBoL,WAhCD,sCSuGoC0B,CAASC,EAAQ/B,QAI/CL,CAGbhF,aA3JF,SAAkBjB,GAChB,IA0CMsI,EA9CC,IAAIC,gBAAgBC,cAAcC,QA8CfC,IAAI,UAC9BjG,QAAQuE,IAAI,yBAA0BsB,GA5CR,IA6CtBlN,EAAyB4E,EAAzB5E,YAAaoI,EAAYxD,EAAZwD,QACftC,EAAUZ,KA9Cc,EA+CJe,mBAAS,IA/CL,mBA+CvB3F,EA/CuB,KA+ChBuD,EA/CgB,KAgE9B,OAdA0C,qBAAU,WAENvG,EAAYK,OACXL,EAAYE,YACbF,EAAYK,KAAKyL,MACS,UAA1B9L,EAAYK,KAAKyL,MAEjB1D,EAAQC,KAAK,OAKd,CAACrI,EAAaoI,IAGf,kBAAC/D,GAAA,EAAD,CAAW0H,SAAS,KAAK7D,UAAWpC,EAAQmE,WAC1C,0BAAM+B,SAjEM,SAACjD,GACfA,EAAMkD,iBACNpI,EAAS,IACT,IAAMqI,EAASnD,EAAMoD,cAEfI,EAAaL,EAAOG,SAASC,UAAU,YACvCiB,EAAoBrB,EAAOG,SAASC,UACxC,oBAGEW,EAAiB,GAMrB,GAJIC,IACFD,EAASC,IAGND,EAAQ,CACX,IAAMO,EAAWtB,EAAOG,SAASC,UAAU,UACvCkB,GAAYA,EAAShB,MAAMC,OAAS,IACtCQ,EAASO,EAAShB,OAIjBS,GACHpJ,EAAS,uBAIT0I,GACAA,EAAWC,MAAMC,OAAS,GAC1Bc,GACAA,EAAkBf,MAAMC,OAAS,IAE7Bc,EAAkBf,QAAUD,EAAWC,MACzC3I,EAAS,0BAETe,EAAMoI,SAASC,EAAQM,EAAkBf,SA6BlBtE,UAAWpC,EAAQwE,OACxC4C,GACA,kBAACR,GAAA,EAAD,CACEC,MAAM,mBACNjE,KAAK,SACLtI,KAAK,OACLwM,WAAS,EACTC,WAAS,EACTC,UAAQ,IAIZ,kBAACJ,GAAA,EAAD,CACEC,MAAM,WACNjE,KAAK,WACLtI,KAAK,WACLwM,YAAaM,EACbL,WAAS,EACTC,UAAQ,IAEV,kBAACJ,GAAA,EAAD,CACEC,MAAM,mBACNjE,KAAK,mBACLtI,KAAK,WACLyM,WAAS,EACTC,UAAQ,IAGV,6BACE,kBAAChE,GAAA,EAAD,CACE1I,KAAK,SACLyM,WAAS,EACT/H,QAAQ,YACRC,MAAM,UACNgI,SAAUnI,EAAM5E,YAAYE,WAC5BgI,UAAWpC,EAAQ6E,QANrB,WAYF,kBAACpG,GAAA,EAAD,CAAKQ,MAAM,cACRH,EAAM5E,YAAYM,OACjB,oCACE,kBAACuE,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,SAAvC,mBAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,QAAQ8E,QAAQ,QAAQ5E,cAAY,GACrDJ,EAAM5E,YAAYM,MAAMmL,SAI9BnL,GACC,oCACE,kBAACuE,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,SAAvC,mBAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,QAAQ8E,QAAQ,QAAQ5E,cAAY,GACrD1E,W,UC7HFmN,GA3BQ,SAAC,GAAD,IACVC,EADU,EACrBhM,UACA1B,EAFqB,EAErBA,YACAiF,EAHqB,EAGrBA,SACG0I,EAJkB,8DAMrB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAChJ,GAAD,OAjBI,SAAC5E,GAAD,SACdA,EAAYK,OAAQL,EAAYK,KAAKyL,MAAkC,UAA1B9L,EAAYK,KAAKyL,MAiB1D+B,CAAQ7N,GACN0N,EACE,kBAACA,EAAc9I,GAEfK,EAGF,kBAAC,IAAD,CACErD,GAAI,CACFkM,SAAU,SACV7N,MAAO,CAAE8N,KAAMnJ,EAAMoJ,kB,qECT3B9I,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoE,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBqF,OAAQxF,EAAMG,QAAQ,GACtBwG,SAAU,QACVrC,UAAW,SAEbuE,OAAQ,CACNC,SAAU,QACVnJ,MAAOK,EAAMpE,QAAQmN,KAAKlN,QAC1BwE,gBAAiBL,EAAMpE,QAAQ0E,WAAWiE,OAE5CyE,IAAK,CACH7D,MAAO,OACPd,QAAS,QACTG,QAAS,OACTY,eAAgB,gBAChBE,WAAY,UAEd2D,OAAQ,CACNC,YAAalJ,EAAMG,QAAQ,IAE7BF,QAAS,CACPC,UAAWF,EAAMG,QAAQ,IAE3BC,SAAU,CACR,UAAW,CACTC,gBAAiBL,EAAMpE,QAAQ0E,WAAWiE,YAK1C4E,GAAiBC,cAAW,SAACpJ,GAAD,MAAY,CAC5CoE,KAAM,CACJ/D,gBAAiBL,EAAMpE,QAAQ0E,WAAWC,QAC1C8I,OAAQ,gCACRC,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACV/E,QAAS,QAEX,aAAc,CACZgB,OAAQ,SAGZgE,SAAU,MAfWJ,CAgBnBK,MAEEC,GAAwBN,aAAW,CACvChF,KAAM,CACJ/D,gBAAiB,qBACjBkJ,aAAc,gCACdI,cAAe,EACfrF,UAAW,GACX,aAAc,CACZA,UAAW,KAGfsF,QAAS,CACP,aAAc,CACZpE,OAAQ,WAGZgE,SAAU,IAfkBJ,CAgB3BS,MAEGC,GAAwBV,cAAW,SAACpJ,GAAD,MAAY,CACnDoE,KAAM,CACJ2F,WAAY/J,EAAMG,QAAQ,OAFAiJ,CAI1BY,MA8JWvJ,oBApJf,SAAsBjB,GACpB,IAAMkB,EAAUZ,KAGVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAJH,EAMlBC,mBAA2B,IANT,mBAMzCkD,EANyC,KAMhCC,EANgC,KA2BhD,OApBA7C,qBAAU,WACRC,MAAM,GAAD,OAAIvE,GAAJ,8BAA0C,CAC7CwE,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,MAG1B+C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GACLhI,QAAQuE,IAAI,8BAA+ByD,GAC3CjG,EAAWiG,MAEZlI,OAAM,SAACC,GACNC,QAAQC,KAAKF,GACbgC,EAAW,SAEd,CAACnF,IAEJoD,QAAQuE,IAAI,WAAYzC,GAEtB,kBAACkB,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ0D,MACxB,kBAAC8F,EAAA,EAAD,CACE5N,UAAU,MACV6N,kBAAgB,wBAChBC,UACE,kBAACzN,EAAA,EAAD,CAAeL,UAAU,KAAKwG,UAAWpC,EAAQmI,QAAjD,kBAKD9E,EAAQpB,KAAI,SAACsB,GAAD,OACX,kBAAC,IAAM9B,SAAP,CAAgBU,IAAKoB,EAAOtF,IAC1B,kBAACvC,EAAA,EAAD,KACE,yBAAK0G,UAAWpC,EAAQsI,KACtB,kBAACqB,GAAA,EAAD,CAAShF,MAAM,eACb,kBAAC3B,GAAA,EAAD,CACEX,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAd,mBAA+BgB,EAAOtF,OAEpDsF,EAAOX,OAGZ,kBAAC7D,GAAA,EAAD,KAAawE,EAAOC,oBACpB,kBAACzE,GAAA,EAAD,UAAewE,EAAOqG,aAAatN,QAAQ,MAG/C,kBAAC,GAAD,CAAgBuN,QAAM,GACpB,kBAAC,GAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAA,eAAuBxG,EAAOtF,GAA9B,YACAA,GAAE,eAAUsF,EAAOtF,GAAjB,YAEF,kBAACc,GAAA,EAAD,0BAEF,kBAAC,GAAD,KACE,kBAAC2C,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,WAGJ,kBAACC,GAAA,EAAD,KACE,kBAACH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,UAA7B,YACYwB,EAAO0G,QAAQtD,OAD3B,KAGA,kBAAC7E,GAAA,EAAD,CAAWC,MAAM,SAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAASwB,EAAO2G,cAElC3G,EAAO0G,QAAQhI,KAAI,SAACkI,GAAD,OAClB,kBAACtI,GAAA,EAAD,CACEM,IAAG,UAAKoB,EAAOtF,IAAZ,OAAiBkM,EAAGlM,IACvBmE,UAAWpC,EAAQN,UAEnB,kBAACoC,GAAA,EAAD,KACGqI,EAAG3H,WACF,IAAIC,KAAK0H,EAAG3H,WAAWE,kBAE3B,kBAACZ,GAAA,EAAD,KACE,kBAAC6H,GAAA,EAAD,CAAShF,MAAM,cACb,kBAAC3B,GAAA,EAAD,CACEX,QAAS,kBACPvD,EAAMwD,QAAQC,KAAd,uBAAmC4H,EAAGC,YAF1C,IAKID,EAAGC,WAIX,kBAACtI,GAAA,EAAD,KAAYqI,EAAGE,aACf,kBAACvI,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,WAIjC,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,UAA7B,gBACgBwB,EAAO+G,YAAY3D,OADnC,KAGA,kBAAC7E,GAAA,EAAD,CAAWC,MAAM,SAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SACdwB,EAAOgH,kBAGXhH,EAAO+G,YAAYrI,KAAI,SAACkI,GAAD,OACtB,kBAACtI,GAAA,EAAD,CACEM,IAAG,UAAKoB,EAAOtF,IAAZ,OAAiBkM,EAAGlM,IACvBmE,UAAWpC,EAAQN,UAEnB,kBAACoC,GAAA,EAAD,KACGqI,EAAG3H,WACF,IAAIC,KAAK0H,EAAG3H,WAAWE,kBAE3B,kBAACZ,GAAA,EAAD,KACE,kBAAC6H,GAAA,EAAD,CAAShF,MAAM,cACb,kBAAC3B,GAAA,EAAD,CACEX,QAAS,kBACPvD,EAAMwD,QAAQC,KAAd,uBAAmC4H,EAAGC,YAF1C,IAKID,EAAGC,WAIX,kBAACtI,GAAA,EAAD,KAAYqI,EAAGE,aACf,kBAACvI,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,wB,8BCnO/C3D,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJ+G,YAAanL,EAAMG,QAAQ,GAC3BiL,WAAW,GAAD,OAAKpL,EAAMG,QAAQ,GAAnB,oBAAiCH,EAAMpE,QAAQyP,UAE3DC,YAAa,CACX3L,MAAOK,EAAMpE,QAAQmN,KAAKhN,WAE5BwP,SAAU,CACRC,cAAexL,EAAMG,QAAQ,GAC7B+I,YAAalJ,EAAMG,QAAQ,GAC3BsL,aAAczL,EAAMG,QAAQ,GAC5Bb,UAAW,UAEboM,YAAa,CACX3B,WAAY/J,EAAMG,QAAQ,IAE5BwL,WAAY,CACV5B,WAAY,YAKH,SAAS6B,GAAiBpM,GACvC,IAAMkB,EAAUZ,KACV8C,EAAQpD,EAAMoD,MACdiJ,EAAarM,EAAMoD,MAAMkJ,gBAAkB,GAC3Cd,EAAca,EAAWE,QAC7B,SAAClB,GAAD,MACc,YAAZA,EAAGmB,MAAkC,YAAZnB,EAAGmB,MAAkC,WAAZnB,EAAGmB,QAEnDC,EAAWJ,EAAWE,QAAO,SAAClB,GAAD,MAAoB,YAAZA,EAAGmB,QACxCE,EAAgBD,EAASE,QAC7B,SAACC,EAAKC,GAAN,OAAYD,EAAME,WAAW,GAAD,OAAID,EAAE5I,UAClC,GAEIkH,EAAUkB,EAAWE,QAAO,SAAClB,GAAD,MAAoB,WAAZA,EAAGmB,QACvCO,EAAe5B,EAAQwB,QAC3B,SAACC,EAAKC,GAAN,OAAYD,EAAME,WAAW,GAAD,OAAID,EAAE5I,UAClC,GAEI+I,EACJF,WAAW,GAAD,OAAI1J,EAAMa,QACpB6I,WAAW,GAAD,OAAIC,IACdD,WAAW,GAAD,OAAIJ,IAEhB,OACE,yBAAKpJ,UAAWpC,EAAQ0D,MACtB,kBAAChC,GAAA,EAAD,CAAOqK,aAAW,sBAAsBpK,KAAK,SAC3C,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,MAArB,eACesG,EAAMW,WADrB,KAGA,kBAACf,GAAA,EAAD,CAAWlG,UAAU,KAAKmG,MAAM,SAAhC,SAGA,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKmG,MAAM,SAAhC,QAGA,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKmG,MAAM,SAAhC,OAGA,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKmG,MAAM,SAAhC,WAKJ,kBAACC,GAAA,EAAD,KACGmJ,EAAWlJ,KACV,SAACkI,EAAI6B,GAAL,MACc,YAAZ7B,EAAGmB,MACD,kBAACzJ,GAAA,EAAD,CAAUM,IAAG,iBAAY6J,IACvB,kBAAClK,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC7B9B,EAAGjH,QAAH,WAAiBiH,EAAGjH,OAApB,MACAiH,EAAGE,YACHF,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,QAAnB,WACO/B,EAAG/J,KAAK8L,QAAQC,KACpB,IAEN,kBAACrK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGiC,OAC7B,kBAACtK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGkC,eAC7B,kBAACvK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGmC,UAC7B,kBAACxK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,WAKrC,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,yCAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SACzCG,EAAMY,WAIVwH,EAAY3D,OAAS,GACpB,kBAAC9E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC9B,4CAIL3B,EAAYrI,KAAI,SAACkI,EAAI6B,GAAL,OACf,kBAACnK,GAAA,EAAD,CAAUM,IAAG,iBAAY6J,IACvB,kBAAClK,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,GAA/C,WACOG,EAAGmB,KADV,UACqBnB,EAAGE,aAExB,kBAACvI,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGmC,UAC7B,kBAACxK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,WAIjC,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,qCAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SACzCG,EAAMa,QAIVwI,GAAYA,EAAS5E,OAAS,GAC7B,kBAAC9E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC9B,yCAILV,EAAStJ,KAAI,SAACkI,EAAI6B,GAAL,OACZ,kBAACnK,GAAA,EAAD,CAAUM,IAAG,iBAAY6J,IACvB,kBAAClK,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,GAC5CG,EAAGE,YACHF,EAAG/J,MAAQ+J,EAAG/J,KAAKmM,SAAWpC,EAAG/J,KAAKmM,QAAQC,gBAC7C,kBAAC3Q,GAAA,EAAD,CACEuG,UAAWpC,EAAQiL,WACnBhM,MAAM,YACNwN,KAAMtC,EAAG/J,KAAKmM,QAAQG,YACtBtG,OAAO,SACPuG,IAAI,uBAEHxC,EAAG/J,KAAKmM,QAAQC,iBAIvB,kBAAC1K,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGmC,UAC7B,kBAACxK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,WAIhCkH,GAAWA,EAAQtD,OAAS,GAC3B,kBAAC9E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC9B,wCAILhC,EAAQhI,KAAI,SAACkI,EAAI6B,GAAL,OACX,kBAACnK,GAAA,EAAD,CAAUM,IAAG,iBAAY6J,IACvB,kBAAClK,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,GAC5CG,EAAGE,aAEN,kBAACvI,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGmC,UAC7B,kBAACxK,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,WAIhC+I,EAAU,GACT,kBAACjK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,2CAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SACzC+J,EAAQxP,QAAQ,KAKtBwP,EAAU,GACT,kBAACjK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,2CAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SACzC6K,KAAKC,IAAIf,GAASxP,QAAQ,OAOrC,kBAAC4H,GAAA,EAAD,CAAMC,WAAS,EAAC2I,UAAU,MAAMC,QAAQ,SAASnI,WAAW,cAC1D,kBAACV,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBAAKjC,UAAWpC,EAAQ6K,UACtB,kBAAC9L,GAAA,EAAD,CACEC,QAAQ,WACR8E,QAAQ,QACR1B,UAAWpC,EAAQ4K,YACnB1L,cAAY,GAJd,YAQA,kBAACH,GAAA,EAAD,CAAYC,QAAQ,SACjBkD,EAAMU,KAAM,IACb,kBAAC/G,GAAA,EAAD,CAAMoD,MAAM,YAAYwN,KAAI,iBAAYvK,EAAMhE,QAC3CgE,EAAMhE,OAET,6BACA,kBAACrC,GAAA,EAAD,CAAMoD,MAAM,YAAYwN,KAAI,cAASvK,EAAM8K,QACxC9K,EAAM8K,OAET,6BACC9K,EAAM+K,QAVT,IAUkB,gCAIrB/K,EAAMgL,MAAQhL,EAAMgL,OAAShL,EAAMiL,QAClC,kBAACjJ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBAAKjC,UAAWpC,EAAQ6K,UACtB,kBAAC9L,GAAA,EAAD,CACEC,QAAQ,WACR8E,QAAQ,QACR1B,UAAWpC,EAAQ4K,YACnB1L,cAAY,GAJd,cAQA,kBAACH,GAAA,EAAD,CAAYC,QAAQ,SAClB,kBAACnD,GAAA,EAAD,CAAMoD,MAAM,YAAYwN,KAAI,iBAAYvK,EAAMgL,KAAKhP,QAChDgE,EAAMgL,KAAKhP,OACN,IACPgE,EAAMgL,KAAKlH,MAAQ,wCAAI9D,EAAMgL,KAAKlH,KAAf,SAK5B,kBAAC9B,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,yBAAKjC,UAAWpC,EAAQ6K,UACtB,kBAAC9L,GAAA,EAAD,CACEC,QAAQ,WACR8E,QAAQ,QACR1B,UAAWpC,EAAQ4K,YACnB1L,cAAY,GAJd,SAQA,kBAACH,GAAA,EAAD,CAAYC,QAAQ,SAASkD,EAAMkL,UAIxClL,EAAMM,YAAcN,EAAMmL,WACzB,yBAAKjL,UAAWpC,EAAQgL,aACtB,2CADF,IACuB,IAAIvI,KAAKP,EAAMmL,WAAW3K,mBClQzD,IAAMtD,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAW,cAyNF7D,oBApNf,SAAgBjB,GACd,IAAMkB,EAAUZ,KACZkO,EAAWC,sBAF2B,EAIEpN,oBAAS,GAJX,mBAInCqN,EAJmC,KAInBC,EAJmB,OAKJtN,oBAAS,GALL,mBAKnCuN,EALmC,KAKtBC,EALsB,KAOpCxP,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAE7C0N,EAAe,CACnBC,KAAML,EAAiB,WAAa,SACpCM,QAASN,EAAiB,eAAiB,SAC3CO,cAAc,EACd1L,QAAS,kBAAMoL,GAAmBD,KAG9BQ,EAAiB,CACrBH,KAAM,MACNC,QAAS,YACTC,cAAc,EACd1L,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAK,oBAG9B0L,EAAc,CAClBH,QAAS,QACTD,KAAM,QACNxL,QAAS,SAACwD,EAAQzF,GAChB,IAAM8N,EAAW9N,EAAK6B,KAAI,SAACC,GAAD,OAAWA,EAAMjE,MAC3CsD,QAAQuE,IAAI,wBAAyBoI,EAAU,SAAU9N,GAEzDM,MAAM,GAAD,OAAIvE,GAAJ,iBAA6B,CAChCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEkN,eAEtBhN,MAAK,SAACC,GAAD,OAAcA,EAASkH,UAC5BnH,MAAK,SAACqI,GACL,IAEE,IAAM4E,EAAQC,OAAOC,KAAK,eACtBF,IACFA,EAAMG,SAASxN,KAAKyN,WAAahF,GAEnC,MAAO1D,GACPtE,QAAQC,KAAK,+CAAgDqE,OAGhExE,OAAM,SAACC,GACNC,QAAQC,KAAKF,QAKfkN,EAAa,CACjBV,QAAS,OACTD,KAAM,OACNxL,QAAS,SAACwD,EAAQzF,GAChBA,EAAK,IAAMA,EAAK,GAAGnC,IAAMa,EAAMwD,QAAQC,KAAd,uBAAmCnC,EAAK,GAAGnC,OA5D9B,EAwEZkC,mBAAwB,CACpDyN,EACAI,IA1EwC,mBAwEnCS,EAxEmC,KAwE1BC,EAxE0B,KAkF1C,OALAjO,qBAAU,YACPiN,GAAegB,EAAW,CAACd,EAAcI,MAEzC,CAACR,EAAgBE,IAGlB,yBAAKtL,UAAWpC,EAAQ0D,MACtB,kBAAC,KAAD,CACE4J,SAAUA,EACVqB,QAAS,CACP,CAAEhK,MAAO,IAAKiK,MAAO,KAAMtU,KAAM,SAAUuU,WAAW,GACtD,CACElK,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNuU,WAAW,EACX/G,OAAQ,SAAC5F,GAAD,OAAkB,IAAIO,KAAKP,EAAMM,WAAWE,mBAEtD,CACEiC,MAAO,SACPiK,MAAO,SACPtU,KAAM,SACNwU,OAAQvS,IAEV,CACEoI,MAAO,iBACPiK,MAAO,iBACPtU,KAAM,SACNwU,OAAQhS,IAEV,CACE6H,MAAO,kBACPiK,MAAO,kBACPtU,KAAM,SACNwU,OAAQ3R,IAEV,CAAEwH,MAAO,OAAQiK,MAAO,OAAQtU,KAAM,SAAUuU,WAAW,GAC3D,CAAElK,MAAO,QAASiK,MAAO,QAAStU,KAAM,SAAUuU,WAAW,GAC7D,CACElK,MAAO,QACPiK,MAAO,aACPtU,KAAM,UACNuU,WAAW,GAEb,CACElK,MAAO,QACPiK,MAAO,QACPtU,KAAM,WACNuU,WAAW,GAGb,CACElK,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNuU,WAAW,EACXE,QAAQ,GAMV,CAAEpK,MAAO,QAASiK,MAAO,QAAStU,KAAM,SAAUyU,QAAQ,GAC1D,CACEpK,MAAO,UACPiK,MAAO,UACPtU,KAAM,SACNyU,QAAQ,GAEV,CAAEpK,MAAO,QAASiK,MAAO,QAAStU,KAAM,SAAUyU,QAAQ,GAC1D,CACEpK,MAAO,mBACPiK,MAAO,mBACPtU,KAAM,SACNyU,QAAQ,GAEV,CAAEpK,MAAO,UAAWiK,MAAO,UAAWtU,KAAM,SAAUyU,QAAQ,IAEhE3O,KAAM,SAAC4O,GAAD,OACJ,IAAIzJ,SAAQ,SAACC,EAASyJ,GAEpBvO,MAAM,GAAD,OAAIvE,GAAJ,WAAuB,CAC1BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUgO,KAEpB9N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAEL/D,EAAQ+D,MAETlI,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACNkE,EAAQ,CAAEpF,KAAM,GAAIC,KAAM,EAAGC,WAAY,WAIxD4O,YAAa,SAAChN,GAAD,OAAW,kBAACgJ,GAAD,CAAkBhJ,MAAOA,KACjDiN,WAAY,SAAClM,EAAOmM,EAASC,GAAjB,OACVA,GAAeA,KAEjB1K,MAAM,SACN2K,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,6BACfzO,SAAU,GACV0O,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBf,WAAW,EACXtH,OAAQiG,EACRqC,qBAAqB,EACrBC,WAAW,GAEbC,kBAAmB,SAAC3P,EAAegP,GACjC5B,GAAkBC,GAAkB,GAChB,IAAhBrN,EAAKuG,QAITgH,GAAe,GACK,IAAhBvN,EAAKuG,OACP+H,EAAW,CAACT,EAAaO,IAEzBE,EAAW,CAACT,KAPZN,GAAe,IAUnBc,QAASA,Q,oGC9NXuB,GAAsC,CAC1C/R,GAAI,GACJiF,OAAQ,GACRkK,MAAO,GACPzK,OAAQ,MACRQ,eAAgB,cAChBC,gBAAiB,YACjBZ,UAAW,GACX6K,UAAW,IAGP4C,GAA2B,SAC/BhS,EACAiS,EACAC,EACAC,GACI,IAAD,EACyBjQ,mBAAkC,CAC5DwC,OAAQ,YAFP,mBACI4G,EADJ,KACY8G,EADZ,KAKGlS,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAmCnD,OAjCAO,qBAAU,WACR,OAAKxC,EAMM,QAAPA,GACFoS,EAAU,CAAE1N,OAAQ,SAAU2N,QAASN,KACvCE,GAAW,QACXE,GAAU,SAIZ1P,MAAM,GAAD,OAAIvE,GAAJ,2BAA+B8B,GAAM,CACxC2C,QAAS,CACPC,cAAc,UAAD,OAAY1C,MAG1B+C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLkP,EAAU,CAAE1N,OAAQ,SAAU2N,QAASnP,OAExCE,OAAM,SAAC7G,GACN+G,QAAQC,KAAK,6CAA8ChH,GAC3D6V,EAAU,eAAK7V,OAEhBuL,SAAQ,WACPmK,GAAW,GACXE,GAAU,OA3BZF,GAAW,QACXE,GAAU,MA4BX,CAACnS,EAAIiS,EAAYC,EAAQC,EAAWjS,IAEhCoL,GAGHgH,GAA+B,SACnC5N,EACAuN,EACAM,EACAC,GACI,IAAD,EACyBtQ,mBAAoC,CAC9DwC,OAAQ,YAFP,mBACI4G,EADJ,KACY8G,EADZ,KAKGlS,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAqCnD,OAnCAO,qBAAU,WACR+P,GACE9P,MAAM,GAAD,OAAIvE,GAAJ,oBAAgC,CACnCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CACnB2B,aAGDzB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLkP,EAAU,CACR1N,OAAQ,SACR2N,QAASnP,EAASf,UAGrBiB,OAAM,SAAC7G,GACN+G,QAAQC,KAAK,6CAA8ChH,GAC3D6V,EAAU,eAAK7V,OAEhBuL,SAAQ,WACP0K,GAAyB,GACzBP,GAAW,QAEhB,CACDM,EACAC,EACA9N,EACAuN,EACA/R,IAGKoL,GAGHmH,GAA+B,SACnCC,EACAC,EACAC,EACAC,EACAC,GACI,IAAD,EACyB5Q,mBAAkC,CAC5DwC,OAAQ,YAFP,mBACI4G,EADJ,KACY8G,EADZ,KAKGlS,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAwCnD,OAtCAO,qBAAU,WACR,GAAKmQ,GAAWD,GAAmBA,EAAe1S,GAAlD,CAKA,IAAM+S,EACkB,QAAtBL,EAAe1S,GACX,yBACA,yBACNyC,MAAM,GAAD,OAAIvE,IAAJ,OAAe6U,GAAQ,CAC1BrQ,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU2P,KAEpBzP,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLkP,EAAU,CACR1N,OAAQ,SACR2N,QAASnP,EAASe,QAEpB4O,EAAY3P,EAASsE,KACrBsL,GAAa,MAEd1P,OAAM,SAAC7G,GACN+G,QAAQC,KAAK,iDAAkDhH,GAC/D6V,EAAU,eAAK7V,IACfsW,EAAY,UAAD,OAAWtW,IACtBuW,GAAa,MAEdhL,SAAQ,WACP8K,GAAU,WAhCZA,GAAU,KAkCX,CAACF,EAAgBC,EAAQC,EAAWC,EAAaC,EAAc5S,IAE3DoL,G,mFCzJH0H,GAAa,SAACnS,GAAD,OACjB,kBAAC,KAAD,eACEoS,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAEVxS,KAIF0S,GAAiB9I,cAAW,SAACpJ,GAAD,MAAY,CAC5CoE,KAAM,CACJ,UAAW,CACT/D,gBAAiBL,EAAMpE,QAAQC,QAAQC,KACvC,sDAAuD,CACrD6D,MAAOK,EAAMpE,QAAQuW,OAAOC,YALbhJ,CASnBiJ,MASW,SAASC,GAAS9S,GAAqC,IAAD,EACnC+S,IAAM1R,SAA6B,MADA,mBAC5D2R,EAD4D,KAClDC,EADkD,KAO7DC,EAAc,WAClBD,EAAY,OAGd,OACE,oCACE,kBAACE,GAAA,EAAD,CACEjT,QAAQ,YACRC,MAAM,UACN8M,aAAW,gBAEX,kBAAC/I,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QAASvD,EAAMoT,gBAHjB,QAOA,kBAAClP,GAAA,EAAD,CACE+G,gBAAc,uBACdoI,gBAAc,OACdnT,QAAQ,YACRC,MAAM,UACN0C,KAAK,QACLU,QA5BY,SAACY,GACnB8O,EAAY9O,EAAMoD,iBA6BZ,kBAAC,KAAD,QAIJ,kBAAC,GAAD,CACEpI,GAAG,uBACH6T,SAAUA,EACVM,aAAW,EACX/D,KAAMgE,QAAQP,GACdQ,QAASN,GAET,kBAACR,GAAD,CACEnP,QAAS,WACH+L,OAAOmE,QAAQ,kBACjBzT,EAAM0T,mBAERR,KAEF/K,UAAWnI,EAAM6R,eAAe1S,IAEhC,kBAAClC,EAAA,EAAD,KACE,kBAAC,KAAD,CAAYqM,SAAS,WAEvB,kBAACpM,EAAA,EAAD,CAAcb,QAAQ,4BAGxB,kBAACqW,GAAD,CACEnP,QAAS,WACPvD,EAAM2T,wBACNT,KAEF/K,UAAWnI,EAAM6R,eAAe1S,IAEhC,kBAAClC,EAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,EAAA,EAAD,CAAcb,QAAQ,+B,aCnG1BiE,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACXkI,QAAS,CACPlT,UAAWF,EAAMG,QAAQ,IAE3BkT,UAAW,CACTlO,MAAO,QAET0H,IAAK,CACHyG,SAAU,SAEZC,WAAY,CACVlT,gBAAiBL,EAAMpE,QAAQ0E,WAAWC,SAE5CiT,iBAAkBxT,EAAMyT,WAAWC,QA+UxBjT,oBA3Uf,SACEjB,GAQC,IAAD,EACMkB,EAAUZ,KACVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAC7C+S,EAAS,OAAGnU,QAAH,IAAGA,OAAH,YAAGA,EAAO6R,sBAAV,aAAG,EAAuBvF,eACjC8H,EAA6DpU,EAA7DoU,aAAcC,EAA+CrU,EAA/CqU,gBAAiBrC,EAA8BhS,EAA9BgS,YAAaC,EAAiBjS,EAAjBiS,aAqJpD,OA5DAtQ,qBAvFA,WACE,IAAI2S,EAEA,GAEJD,GAAgB,SAACE,GAAD,sBACXA,EADW,CAEdC,aAAc,EACdC,gBAAiB,EACjBC,WAAY,OAGL,OAATP,QAAS,IAATA,KAAWQ,SAAQ,SAACtJ,GAClB,IAAMlM,EACJkM,EAAG/J,MACH+J,EAAG/J,KAAK8L,SADR,UAEG/B,EAAG/J,KAAK8L,QAAQC,KAFnB,OAEyBhC,EAAG/J,KAAK8L,QAAQwH,UACrCvR,EAAMlE,GAAUkM,EAAGE,YAErBqB,EAAM0H,EAAiBjR,GAErBwR,EACJxJ,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,SAAgC,OAArB/B,EAAGkC,cAC7BlC,EAAGmC,SAAWnC,EAAG/J,KAAK8L,QAAQ0H,GAC9BzJ,EAAGmC,SAEHuH,EACJ1J,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,UACbN,WAAWzB,EAAG/J,KAAK8L,QAAQ4H,eAAiBH,GAAKrX,QAAQ,GAC3D6N,EAAGpH,MAETqQ,EAAiBjR,GAAO,CACtB4R,OAAQrI,EAAMA,EAAIqI,OAASJ,EAAMA,EACjCK,SAAUtI,EAAMA,EAAIsI,SAAWH,EAAUA,EACzC3H,QAAS/B,GAAMA,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,QAClChJ,OAAQiH,EAAGjH,OACXmH,YAAaF,EAAGE,YAChBc,WAAYO,EAAG,uBAAOA,EAAIP,YAAX,CAAuBhB,IAAM,CAACA,IAG/CgJ,GAAgB,SAACE,GAAD,sBACXA,EADW,CAEdC,aAAcD,EAASC,aAAe1H,WAAW,GAAD,OAAIiI,IACpDL,WAAYH,EAASG,WAAaK,UAItCI,OAAOC,OAAOd,GAAkBK,SAAQ,SAACrP,GAEvC,GAAIA,EAAK2P,OAAS,IAAM,GAAK3P,EAAK8H,QAAS,CACzC,IAAM0H,EAAKxP,EAAK8H,QAAQ0H,GAClBD,EAAMvP,EAAK+G,WAAWM,QAC1B,SAACC,EAAKC,GAAN,OAAYD,GAA2B,OAApBC,EAAEU,cAAyBV,EAAEW,SAAW,KAC3D,GAGIA,EAAWM,KAAKC,IAAK8G,EAAMC,EAAMA,GACjCxH,IACJE,EAAWV,WAAWxH,EAAK8H,QAAQiI,eACnC7X,QAAQ,GAEJyG,EAAQqJ,EACdhI,EAAK+G,WAAW5I,KAAK,CACnB+J,WACAF,QACArJ,QACAuI,KAAM,aACNjB,YAAY,OAAD,OAASiC,EAAT,SAGblI,EAAK4P,SAAW5P,EAAK4P,SAAWjR,EAChCqB,EAAK2P,OAASnH,KAAKwH,MAAMhQ,EAAK2P,OAASzH,EAAWsH,GAElDT,GAAgB,SAACE,GAAD,sBACXA,EADW,CAEdE,gBAAiBF,EAASE,kBAAmBxQ,EAC7CyQ,WAAYH,EAASG,WAAazQ,WAKxCoQ,GAAgB,SAACE,GAAD,sBACXA,EADW,CAEdD,0BAIY,CAACH,IA6Df,kBAACvR,GAAA,EAAD,CAAOC,KAAK,QAAQS,UAAWpC,EAAQ0S,SACrC,kBAAC9Q,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWM,UAAWpC,EAAQ2S,YAC9B,kBAAC7Q,GAAA,EAAD,CAAWM,UAAWpC,EAAQmM,KAA9B,OACA,kBAACrK,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,aACA,kBAACA,GAAA,EAAD,WAEA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,WAGJ,kBAACC,GAAA,EAAD,KACGiS,OAAOC,OAAOhB,EAAaE,kBAAkBnR,KAC5C,SAACmC,EAAmB4H,GAApB,OACE,kBAAC,IAAMvK,SAAP,CAAgBU,IAAG,eAAU6J,IAC3B,kBAACnK,GAAA,EAAD,CAAUO,UAAWpC,EAAQ6S,YAC3B,kBAAC/Q,GAAA,EAAD,CAAWM,UAAWpC,EAAQ2S,WAC5B,kBAAChJ,GAAA,EAAD,CAAShF,MAAM,oBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,mBACX1J,QAAS,kBAlF7B,SAAwB+B,GACtB,IAAMkQ,EAAMlQ,EAAK+G,WAAWlJ,KAAI,SAACkI,GAAD,OAAQA,EAAGlM,MAAIoN,QAAO,SAAChG,GAAD,OAAOA,KACzDiP,GAAOA,EAAI3N,QAAUyH,OAAOmE,QAAQ,kBACtC7R,MAAM,GAAD,OAAIvE,GAAJ,kCAA8C,CACjDwE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEsT,UAEtBpT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OAAeA,EAAS3G,OAASsE,EAAMsR,WAAU,MACtD/O,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAK,oCAAqCF,MAqErCiT,CAAenQ,KAE9B,kBAAC,KAAD,QAIJ,kBAACuF,GAAA,EAAD,CAAShF,MAAM,sBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,oCACX1J,QAAS,kBA1E7B,SAA2B+B,GACzB,IAAMoQ,EAAQpQ,EAAK+G,WAChBlJ,KAAI,SAACkI,GAAD,OACHA,EAAGC,QACC,CACEA,QAASD,EAAGC,QACZrH,MAAOoH,EAAGpH,MACVsH,YAAajG,EAAKiG,kBAEpB5P,KAEL4Q,QAAO,SAACoJ,GAAD,OAAOA,KACjBlT,QAAQuE,IAAI,0BAA2B1B,EAAM,aAAcoQ,GAEvDpG,OAAOmE,QAAQ,4CACjB7R,MAAM,GAAD,OAAIvE,GAAJ,gCAA4C,CAC/CwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUwT,KAEpBtT,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACAA,EAAS3G,OAIZsW,EAAY,6BACZC,GAAa,KAJbD,EAAY,0BACZC,GAAa,OAMhB1P,OAAM,SAACC,GACNwP,EAAY,iCAAD,OAAkCxP,IAC7CyP,GAAa,GACbxP,QAAQC,KAAK,+BAAgCF,MAsClBoT,CAAkBtQ,KAEjC,kBAAC,KAAD,SAIN,kBAACtC,GAAA,EAAD,KACGsC,EAAK8H,SAAL,UAEG9H,EAAK8H,QAAQC,IACT/H,EAAK8H,QAAQC,IACb/H,EAAK8H,QAAQwH,SAJpB,MAOH,kBAAC5R,GAAA,EAAD,KACGsC,EAAK8H,SAAL,UACI9H,EAAK8H,QAAQtJ,KADjB,YACyBwB,EAAK8H,QAAQ7B,aACtCjG,EAAK8H,SACJ,oCACE,6BADF,UAEM9H,EAAK8H,QAAQwH,SAFnB,YAE+BtP,EAAK8H,QAAQyI,SAF5C,cAE0DvQ,EAAK8H,QAAQ0I,cAAgB,MAI3F,kBAAC9S,GAAA,EAAD,KACGsC,EAAK8H,SAAW9H,EAAK8H,QAAQ2I,SAC7BzQ,EAAK8H,SACN9H,EAAK8H,QAAQ2I,WAAazQ,EAAK8H,QAAQ4I,QACrC,oCACE,6BADF,WAEO1Q,EAAK8H,QAAQ4I,QAFpB,QAKA,IAGJ,kBAAChT,GAAA,EAAD,KACGsC,EAAK8H,SAAL,WAAoB9H,EAAK8H,QAAQ4H,eAClC,6BACC1P,EAAK8H,SAAL,UAEG9H,EAAK8H,QAAQ4H,gBAAkB1P,EAAK8H,QAAQiI,aAA5C,WACQ/P,EAAK8H,QAAQiI,aADrB,OAEI,KAGV,kBAACrS,GAAA,EAAD,KAAYsC,EAAK8H,SAAW9H,EAAK8H,QAAQ0H,IAEzC,kBAAC9R,GAAA,EAAD,CAAWC,MAAM,SAASK,UAAWpC,EAAQ8S,mBACzC1O,EAAK2P,OAAOzX,QAAQ,IAExB,kBAACwF,GAAA,EAAD,CAAWC,MAAM,QAAQK,UAAWpC,EAAQ8S,kBACzC1O,EAAK4P,SAAS1X,QAAQ,KAG1B8H,EAAK+G,WAAWlJ,KAAI,SAACkI,GAAD,OACnB,kBAACtI,GAAA,EAAD,CAAUM,IAAG,cAASgI,EAAGlM,KACvB,kBAAC6D,GAAA,EAAD,CAAWkI,QAAS,IACpB,kBAAClI,GAAA,EAAD,SACIqI,EAAGmB,KADP,KACenB,EAAGjH,OAAQ,IACvBiH,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,SAAW/B,EAAG/J,KAAK8L,QAAQ6I,WAC3C5K,EAAG/J,KAAK8L,QAAQ6I,WAChB5K,EAAGE,YAAa,IACnBF,EAAGC,SACF,kBAACvO,GAAA,EAAD,CACEoD,MAAM,YACNwN,KAAI,uBAAkBtC,EAAGC,SACzB/H,QAAS,SAACwD,GACRA,EAAEM,iBACFrH,EAAMwD,QAAQC,KAAd,uBAAmC4H,EAAGC,YAL1C,UAQUD,EAAGC,UAIjB,kBAACtI,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,MACA,kBAACA,GAAA,EAAD,KACe,eAAZqI,EAAGmB,KAAH,UACMnB,EAAGmC,SADT,iBAEMnC,EAAGmC,SAFT,YAEqBnC,EAAGkC,gBAE3B,kBAACvK,GAAA,EAAD,CAAWC,MAAM,UACdoI,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,SAAgC,OAArB/B,EAAGkC,gBAC5BlC,EAAGmC,SAAWnC,EAAG/J,KAAK8L,QAAQ0H,IAAItX,QAAQ,GAC5C,MAEN,kBAACwF,GAAA,EAAD,CAAWC,MAAM,SAASoI,EAAGpH,eAOvC,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,UAA7B,cAGA,kBAACD,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,SAA7B,iBAGA,kBAACD,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,SAA7B,qBAGA,kBAACD,GAAA,EAAD,CACEkI,QAAS,EACTjI,MAAM,QACNK,UAAWpC,EAAQ8S,kBAHrB,UAQF,kBAACjR,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,UAC1BkS,OAAOe,KAAK9B,EAAaE,kBAAkBzM,QAE9C,kBAAC7E,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,SAC1BmR,EAAaI,aAAahX,QAAQ,IAErC,kBAACwF,GAAA,EAAD,CAAWkI,QAAS,EAAGjI,MAAM,SAC1BmR,EAAaK,gBAAgBjX,QAAQ,IAExC,kBAACwF,GAAA,EAAD,CACEkI,QAAS,EACTjI,MAAM,QACNK,UAAWpC,EAAQ8S,kBAElBI,EAAaM,WAAWlX,QAAQ,UCrUrC2Y,GAAWrX,EAAQ,KAAnBqX,OAEF7V,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACXtH,OAAQ,CACN+F,aAAc3J,EAAMG,QAAQ,GAC5BgL,YAAanL,EAAMG,QAAQ,IAE7ByV,SAAU,CACRvR,QAAQ,GAAD,OAAKrE,EAAMG,QAAQ,GAAnB,QACPb,UAAW,cA6YFmB,oBAlXf,SACEjB,GAGA,IAAMkB,EAAUZ,KACVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAFnD,EAIgDC,mBAAS,IAJzD,mBAIOgV,EAJP,KAIyBC,EAJzB,OAK4CjV,qBAL5C,mBAKOwQ,EALP,KAKuB0E,EALvB,OAM8BlV,oBAAS,GANvC,mBAMOmV,EANP,KAMgBpF,EANhB,OAO4B/P,oBAAS,GAPrC,mBAOOyQ,EAPP,KAOeC,EAPf,OAQ4B1Q,oBAAS,GARrC,mBAQOgQ,EARP,KAQeC,EARf,OAUwCjQ,mBAAuB,CAC7DiT,iBAAkB,GAClBE,aAAc,EACdC,gBAAiB,EACjBC,WAAY,IAdd,mBAUON,EAVP,KAUqBC,EAVrB,KAiBMoC,EAAwBtF,GAC5BkF,EACAjF,EACAC,EACAC,GAGF3P,qBAAU,WAC6B,WAAjC8U,EAAsB5S,QACpB4S,EAAsBjF,SACxB+E,EAAkBE,EAAsBjF,WAG3C,CAACiF,EAAuBJ,IA9B3B,MAgCkCtD,IAAM1R,UAAS,GAhCjD,mBAgCOqV,EAhCP,KAgCkBzE,EAhClB,OAiCgCc,IAAM1R,SAAS,IAjC/C,mBAiCOsV,EAjCP,KAiCiB3E,EAjCjB,KA6GM4E,EAAmB,SACvBzS,EACA0C,GAEe,cAAXA,GAGJoL,GAAa,IAGT9S,EAAKa,EAAM6W,MAAMC,OAAO3X,GAsH9B,SAAS4X,EAASjH,GAChB,OAAO+B,GAAkBA,EAAe/B,GAAS+B,EAAe/B,GAAS,GAG3E,OAxHAnO,qBAAU,WACJxC,GACFmX,EAAoBnX,KAErB,CAACA,IAiBJyS,GACEC,EACAC,EACAC,EACAC,EACAC,GA8FKJ,EACL,oCACG2E,EACC,kBAAChX,GAAD,MAEA,oCACE,kBAAC4F,GAAA,EAAD,CACEC,WAAS,EACT1E,QAAS,EACTqN,UAAU,MACVC,QAAQ,SACRnI,WAAW,cAEX,kBAACV,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,GACb,kBAAClP,GAAA,EAAD,CACExE,UAAWpC,EAAQkD,OACnB2D,MAAM,SACNE,WAAS,EACTL,MAAOmP,EAAS,UAChBE,SApNkB,SAC9B9S,GAEAoS,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEE9S,OAAQD,EAAMmD,OAAOM,cA+MjB,kBAACuP,GAAA,EAAD,CAAalP,WAAS,GACpB,kBAACmP,GAAA,EAAD,CAAYjY,GAAG,6BAAf,UACA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,4BACRnY,GAAG,sBACHyI,MAAOmP,EAAS,UAChBE,SA/MW,SACzB9S,GAKAoS,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEErT,OAAQM,EAAMmD,OAAOM,aAuMZuN,OAAOe,KAAKzY,IAAgB0F,KAAI,SAACU,GAAD,OAC/B,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,iBAAYQ,GAAU+D,MAAO/D,GACvCpG,GAAeoG,SAKxB,kBAACsT,GAAA,EAAD,CAAalP,WAAS,GACpB,kBAACmP,GAAA,EAAD,CAAYjY,GAAG,+BAAf,kBAGA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,8BACRnY,GAAG,wBACHyI,MAAOmP,EAAS,kBAChBE,SAhNkB,SAChC9S,GAKAoS,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEE7S,eAAgBF,EAAMmD,OAAOM,aAwMpBuN,OAAOe,KAAKlY,IAAkBmF,KAAI,SAACU,GAAD,OACjC,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,iBAAYQ,GAAU+D,MAAO/D,GACvC7F,GAAiB6F,SAK1B,kBAACsT,GAAA,EAAD,CAAalP,WAAS,GACpB,kBAACmP,GAAA,EAAD,CAAYjY,GAAG,gCAAf,mBAGA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,+BACRnY,GAAG,yBACHyI,MAAOmP,EAAS,mBAChBE,SAjNmB,SACjC9S,GAKAoS,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEE5S,gBAAiBH,EAAMmD,OAAOM,aAyMrBuN,OAAOe,KAAK7X,IAAmB8E,KAAI,SAACU,GAAD,OAClC,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,mBAAcQ,GAAU+D,MAAO/D,GACzCxF,GAAkBwF,UAM7B,kBAACuB,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,GACb,kBAAClP,GAAA,EAAD,CACEC,MAAM,QACNwP,WAAS,EACTtP,WAAS,EACTuP,KAAM,EACNC,QAAS,GACT7P,MAAOmP,EAAS,SAChBE,SA7RiB,SAC7B9S,GAEAoS,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEE5I,MAAOnK,EAAMmD,OAAOM,cAwRhB,yBAAKtE,UAAWpC,EAAQkV,UACtB,kBAACtD,GAAD,CACEjB,eAAgBA,EAChBuB,eAtMO,WACI,QAArBiD,GACFE,GAAkB,SAACW,GACjB,GAAIA,EACF,OAAO,eACFA,EADL,CAEE/X,GAAI,WAKZ4S,GAAU,GACV/R,EAAM0X,iBAAgB,IA2LRhE,iBAhLS,WACvB7B,GACEjQ,MAAM,GAAD,OAAIvE,GAAJ,mBAA+B,CAClCwE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE/C,GAAI0S,EAAe1S,OAEzCiD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAAS3G,OACXsW,EAAY3P,EAASsE,KACrBsL,GAAa,IAEbjS,EAAMwD,QAAQmU,QAAQ,uBAGzBpV,OAAM,SAAC7G,GACN+G,QAAQC,KAAK,0CAA2ChH,GACxDsW,EAAY,UAAD,OAAWtW,IACtBuW,GAAa,OA2JL0B,sBAxHc,WAC5B,IAAMvP,EAASyN,GAAkBA,EAAezN,OAChD,GAAKA,EAAL,CAGA,IAmBMwT,EAnBiB,IAAIzB,GAAO,CAChC0B,OAAQ,CACN,cACA,mBACA,SACA,cACA,SACA,WACA,wBACA,uBACA,aACA,eACA,oBACA,mBACA,uBACA,eACA,yBAG0BC,MAC5B3C,OAAOC,OAAOhB,EAAaE,oBAxDT,SAACyD,EAAkBxO,GAEvC,GAAI+F,OAAO0I,UAAUC,WAAY,CAE/B,IAAMC,EAAa,IAAIC,KAAK,CAAC5O,GAAO,CAAE/N,KAAM,aAC5C8T,OAAO0I,UAAUC,WAAWC,EAAYH,OACnC,CAGL,IAAMK,EAAS5I,SAAS6I,cAAc,KAEtC,GADAD,EAAOE,SAAWP,EACdzI,OAAOiJ,IAAIC,gBAAiB,CAE9B,IAAMN,EAAa,IAAIC,KAAK,CAAC5O,GAAO,CAAE/N,KAAM,aAC5C4c,EAAOzK,KAAO2B,OAAOiJ,IAAIC,gBAAgBN,QAIzCE,EAAOzK,KAAO,+BAAiC8K,mBAAmBlP,GAGpE,GAAIiG,SAASkJ,YAAa,CACxB,IAAMvU,EAAQqL,SAASkJ,YAAY,eACnCvU,EAAMwU,UAAU,SAAS,GAAM,GAC/BP,EAAOQ,cAAczU,QAErBiU,EAAOS,SAgCXC,CAAc,GAAD,OAAI1U,EAAJ,QAAkBwT,UAkGzB,kBAAC,GAAD,CACE/F,eAAgBA,EAChBP,UAAWA,EACX8C,aAAcA,EACdC,gBAAiBA,EACjBrC,YAAaA,EACbC,aAAcA,KAKpB,kBAAC8G,GAAA,EAAD,CACEzG,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdjD,KAAMmH,EACNsC,iBAAkB,IAClBxF,QAASoD,EACTqC,aAAc,CACZ,mBAAoB,cAEtBnS,QAAS,0BAAM3H,GAAG,cAAcwX,GAChCpb,OAAQ,CACN,kBAACga,GAAA,EAAD,CAAYlS,IAAI,QAAQ4J,aAAW,QAAQ1J,QAASqT,GAClD,kBAAC,KAAD,WAMR,kBAACpX,GAAD,SC1aEc,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJuC,SAAU,cAgODlG,oBAvNf,SACEjB,GAEA,IAAMkB,EAAUZ,KACVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAC/CoN,EAAWC,sBAHf,EAKwCpN,oBAAS,GALjD,mBAKO6X,EALP,KAKqBC,EALrB,KAMMC,EAAeC,uBAAY,WAC/B7K,EAAS8K,SAAW9K,EAAS8K,QAAQC,gBACrCJ,GAAgB,KACf,CAAC3K,EAAU2K,IATd,EAWkD9X,qBAXlD,mBAWOmY,EAXP,KAW0BC,EAX1B,KAaMC,EAAY,CAChB1K,QAAS,0BACTD,KAAM,MACNxL,QAAS,SACPY,EACA7C,GAEAqY,EAA6BxV,GACzByV,MAAMC,QAAQvY,IAEhBmY,EAAqBnY,EAAK6B,KAAI,SAACkI,GAAD,OAAQA,EAAGlM,SAK/CwC,qBAAU,WACJuX,GACFE,MAED,CAACF,EAAcE,IAhClB,MAkCwD/X,qBAlCxD,mBAkCOyY,EAlCP,KAkC6BC,EAlC7B,KAqCApY,qBAAU,WACRC,MAAM,GAAD,OAAIvE,GAAJ,oBAAgC,CACnCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE2B,OAAQ,CAAC,MAAO,oBAEtCzB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OACJsP,EACEtP,EAAOnJ,KAAK6B,KACV,SAACC,GAAD,MAA+D,CAC7DjE,GAAIiE,EAAMjE,GACV2E,KAAK,GAAD,OAAKV,EAAMgB,OAAX,YAAqB,IAAIT,KAC3BP,EAAMM,WACNsW,8BAKTzX,MAAME,QAAQC,QAChB,CAACrD,IA5DJ,MAgEI0T,IAAM1R,SAA6B,MAhEvC,mBA8DE4Y,EA9DF,KA+DEC,EA/DF,KAkEMP,EAA+B,SACnCxV,GAEA+V,EAA8B/V,EAAMoD,gBAGhC4S,EAAgC,WACpCV,EAAqB,IACrBS,EAA8B,OAG1BE,EAA6B,SAACjb,GAClCyC,MAAM,GAAD,OAAIvE,GAAJ,gCAA4C,CAC/CwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE/C,KAAIqa,wBAE1BpX,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,OAGNlI,MAAME,QAAQC,MACduE,SAAQ,WACPkT,IACAhB,GAAgB,GAChBnZ,EAAM0X,iBAAgB,OAI5B,OACE,yBAAKpU,UAAWpC,EAAQ0D,MACtB,kBAAC,KAAD,CACE4J,SAAUA,EACVqB,QAAS,CACP,CACEhK,MAAO,SACPiK,MAAO,SACPtU,KAAM,SACN6e,kBAAmB,UAErB,CACExU,MAAO,UACPiK,MAAO,UACPtU,KAAM,SACNuU,WAAW,EACX/G,OAAQ,SAACQ,GAAD,OACN,kBAACzM,GAAA,EAAD,CACEoD,MAAM,YACNwN,KAAI,uBAAkBnE,EAAI8B,SAC1B/H,QAAS,SAACwD,GACRA,EAAEM,iBACFrH,EAAMwD,QAAQC,KAAd,uBAAmC+F,EAAI8B,YAL3C,UAQU9B,EAAI8B,WAIlB,CACEzF,MAAO,MACPiK,MAAO,WACPtU,KAAM,SACNuU,WAAW,GAEb,CAAElK,MAAO,QAASiK,MAAO,QAAStU,KAAM,SAAUuU,WAAW,GAC7D,CACElK,MAAO,UACPiK,MAAO,OACPtU,KAAM,SACNwN,OAAQ,SAACQ,GAAD,OACNA,EAAIlI,MAAQkI,EAAIlI,KAAK8L,QAArB,UACO5D,EAAIlI,KAAK8L,QAAQtJ,KADxB,YACgC0F,EAAIlI,KAAK8L,QAAQ7B,aAC7C,OAER,CAAE1F,MAAO,KAAMiK,MAAO,KAAMtU,KAAM,SAAUyU,QAAQ,GACpD,CACEpK,MAAO,mBACPiK,MAAO,mBACPtU,KAAM,SACNyU,QAAQ,IAGZ3O,KAAM,SAAC4O,GAAD,OACJ,IAAIzJ,SAAQ,SAACC,EAASyJ,GACpBvO,MAAM,GAAD,OAAIvE,GAAJ,8BAA0C,CAC7CwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUgO,KAEpB9N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GACL/D,EAAQ+D,MAETlI,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAK,oBAAqBF,GAC3BkE,EAAQ,CAAEpF,KAAM,GAAIC,KAAM,EAAGC,WAAY,WAIxDqE,MAAM,aACN2K,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,6BACfzO,SAAU,GACV0O,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBf,WAAW,EACXtH,QAAQ,EACRsI,qBAAqB,EACrBC,WAAW,GAEbrB,QAAS,CAAC+J,KAGZ,kBAAC,KAAD,CACEva,GAAG,cACH6T,SAAUiH,EACV3G,aAAW,EACX/D,KAAMgE,QAAQ0G,GACdzG,QAAS2G,GAET,kBAACtH,GAAA,EAAD,CAAUtP,QAAS,kBAAM6W,EAA2B,SAApD,uBAGA,kBAACE,EAAA,EAAD,MACCR,GACCA,EAAqB3W,KACnB,SAACoX,GAAD,OACE,kBAAC1H,GAAA,EAAD,CACExP,IAAG,6BAAwBkX,EAAepb,IAC1CoE,QAAS,kBAAM6W,EAA2BG,EAAepb,MAExDob,EAAezW,cCnM1B6F,GAAiBC,aAAW,CAChChF,KAAM,CACJiF,OAAQ,gCACRC,UAAW,OACX,qBAAsB,CACpBC,aAAc,GAEhB,WAAY,CACV/E,QAAS,QAEX,aAAc,CACZgB,OAAQ,SAGZgE,SAAU,IAdWJ,CAepBK,MAEGC,GAAwBN,aAAW,CACvChF,KAAM,CACJ/D,gBAAiB,qBACjBkJ,aAAc,gCACdI,cAAe,EACfrF,UAAW,GACX,aAAc,CACZA,UAAW,KAGfsF,QAAS,CACP,aAAc,CACZpE,OAAQ,WAGZgE,SAAU,IAfkBJ,CAgB3BS,MAEGC,GAAwBV,cAAW,SAACpJ,GAAD,MAAY,CACnDoE,KAAM,CACJC,QAAS,MAFiB+E,CAI1BY,MAEElK,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAW,SAEbe,MAAO,CACLb,QAAS,OACTc,WAAY,SACZF,eAAgB,gBAChB9F,UAAW,OACXyK,WAAY/J,EAAMG,QAAQ,GAC1BkE,QAASrE,EAAMG,QAAQ,IAEzB6Z,UAAW,CACTC,SAAU,GAEZ1V,MAAO,CACLF,QAASrE,EAAMG,QAAQ,GACvBb,UAAW,SACXK,MAAOK,EAAMpE,QAAQmN,KAAKhN,UAC1Bme,OAAQ,QAEVC,SAAU,CACR7a,UAAW,SACXK,MAAOK,EAAMpE,QAAQmN,KAAKhN,UAC1Bme,OAAQ,QAEVE,KAAM,CACJ/V,QAAS,EACTc,MAAO,QAETkV,iBAAkB,CAChBjP,WAAW,GAAD,OAAKpL,EAAMG,QAAQ,GAAnB,oBAAiCH,EAAMpE,QAAQyP,UAE3DiP,YAAa,CACXjW,QAASrE,EAAMG,QAAQ,SAwM7B,IAMesF,gBANS,SAACC,GACvB,MAAO,CACL9K,YAAa8K,EAAOnK,QAAQX,oBAIQO,EAAzBsK,CAAoChF,aArMnD,SACEjB,GAEA,IAAMkB,EAAUZ,KACRlF,EAAgB4E,EAAhB5E,YAFR,EAI8CiG,mBAA2B,IAJzE,mBAIO0Z,EAJP,KAIwBC,EAJxB,OAKwC3Z,oBAAS,GALjD,mBAKO4Z,EALP,KAKqBvD,EALrB,OAM8BrW,oBAAS,GANvC,mBAMOmV,EANP,KAMgBpF,EANhB,OAO4C/P,mBAAsB,OAPlE,mBAOO6Z,EAPP,KAOuBC,EAPvB,KAQMC,EAAqB3J,GACzByJ,EACA9J,EACA6J,EACAvD,GAGF/V,qBAAU,WACsB,WAA9ByZ,EAAmBvX,QACjBmX,EAAmBI,EAAmB5J,WACvC,CAAC4J,IAlBJ,IA2CIjc,EA3CJ,EAoBkCkC,oBAAS,GApB3C,mBAoBOqV,EApBP,KAoBkBzE,EApBlB,KAqBM2E,EAAmB,SACvBzS,EACA0C,GAEe,cAAXA,GAGJoL,GAAa,IAgBf,IACE9S,EAAKmQ,OAAOlG,SAASF,SAASmS,MAAM,KAAKC,UAAU,GAC/CC,MAAMC,SAASrc,MACjBA,OAAKxD,GAEP,UAIF,OAAOP,EACL,oCACE,kBAACgK,GAAA,EAAD,CACEC,WAAS,EACT2I,UAAU,MACVC,QAAQ,gBACRnI,WAAW,UACXxC,UAAWpC,EAAQ0D,KACnBjE,QAAS,GAET,kBAACyE,GAAA,EAAD,CAAM4R,GAAI,GAAIxR,GAAI,EAAGiW,GAAI,EAAGnW,MAAI,GAC9B,kBAACG,GAAA,EAAD,CAAOnC,UAAWpC,EAAQyZ,UACxB,yBAAKrX,UAAWpC,EAAQ2E,OACtB,kBAAC,KAAD,CACE1F,MAAM,cACNwN,KAAK,GACLpK,QAAS,SAACwD,GACRA,EAAEM,iBACFrH,EAAMwD,QAAQC,KAAK,qBAErBH,UAAWpC,EAAQsZ,WAPrB,oBAWA,kBAACjF,GAAA,EAAD,CACEtI,aAAW,sBACXpH,MAAM,sBACNtC,QAAS,kBAhDrBvD,EAAMwD,QAAQC,KAAK,kCACnBwO,GAAa,KAiDD,kBAAC,KAAD,QAIHkD,OAAOe,KAAKzY,IAAgB0F,KAAI,SAACU,GAAD,OAC/B,kBAAC,GAAD,CACEkH,QAAM,EACN1H,IAAG,YAAOQ,GACV6X,gBAA4B,QAAX7X,EACjBmG,SAAUkR,IAAmBrX,EAC7BoT,SAAU,SAAC9S,EAAY6F,GAAb,OAxDxB,SAA6BnG,EAAqBmG,GAC5CA,IACFmR,EAAkBtX,GAClB6T,GAAgB,IAsDJiE,CAAoB9X,EAAuBmG,KAG7C,kBAAC,GAAD,CACEgB,WAAY,kBAAC,KAAD,MACZC,gBAAA,eAAuBpH,EAAvB,YACA1E,GAAE,eAAU0E,EAAV,YAEF,kBAAC5D,GAAA,EAAD,KACGxC,GAAeoG,KAGpB,kBAAC,GAAD,KACG2S,EACC,kBAAChX,GAAD,MAEA,kBAACkL,EAAA,EAAD,CAAMpH,UAAWpC,EAAQ0Z,MACtBG,GAAmBA,EAAgBlT,OAClCkT,EAAgB5X,KACd,SAACC,EAAuB8J,GAAxB,OACE,kBAACtQ,EAAA,EAAD,CACEC,QAAM,EACNC,UAAWC,IACXC,GAAE,gCAA2BoG,EAAMjE,IACnCkE,IAAG,iBAAY6J,GACf5J,UAEEnE,GAAMiE,EAAMjE,GACR+B,EAAQ2Z,sBACRlf,GAGN,kBAACuB,EAAA,EAAD,CACEb,QAAS+G,EAAMgB,OACf7H,UAAW,IAAIoH,KACbP,EAAMM,WACNsW,2BAMV,yBAAK1W,UAAWpC,EAAQ4Z,aACtB,8EAWlB,kBAAC1V,GAAA,EAAD,CAAM4R,GAAI,GAAIxR,GAAI,EAAGiW,GAAI,GAAInW,MAAI,GAC/B,kBAAC,IAAD,KACE,kBAAC,GAAD,CACElK,YAAaA,EACb8W,KAAK,mBACL0J,OAAK,GAEL,kBAAC,GAAD,CAA4BlE,gBAAiBA,KAE/C,kBAAC,GAAD,CACEtc,YAAaA,EACb8W,KAAK,6BAEL,kBAACzM,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ6D,OACxB,kBAAC,GAAD,CAAoB2S,gBAAiBA,SAM/C,kBAACqB,GAAA,EAAD,CACEzG,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdjD,KAAMmH,EACNsC,iBAAkB,IAClBxF,QAASoD,EACTqC,aAAc,CACZ,mBAAoB,cAEtBnS,QAAS,0BAAM3H,GAAG,cAAT,gCACT5D,OAAQ,CACN,kBAACga,GAAA,EAAD,CAAYlS,IAAI,QAAQ4J,aAAW,QAAQ1J,QAASqT,GAClD,kBAAC,KAAD,WAKN,S,8BCrSAtW,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACXmQ,MAAO,CACL7W,QAAS,OACTc,WAAY,SACZF,eAAgB,UAElBb,MAAO,CACLlE,gBAAiBL,EAAMpE,QAAQ0E,WAAWiE,MAC1C8E,OAAQ,iBACRC,UAAWtJ,EAAMsb,QAAQ,GACzBjX,QAASrE,EAAMG,QAAQ,EAAG,EAAG,SAK7Bob,GAAQ,CAAC,QAAS,SAAU,SAEnB,SAASC,GAAahc,GAKnC,IAAMX,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAE7CF,EAAUZ,KAHf,EAKyBe,mBAAS,IALlC,mBAKMjC,EALN,KAKa6c,EALb,OAMuB5a,mBAAS,SANhC,mBAMM6F,EANN,KAMYgV,EANZ,OAO8B7a,oBAAS,GAPvC,mBAOM8G,EAPN,KAOgBgU,EAPhB,OAQyB9a,mBAAS,IARlC,mBAQM3F,EARN,KAQauD,EARb,KAUD0C,qBAAU,WACJvC,GAASA,EAAMgd,SAAS,KAC1BD,GAAW,GAEXA,GAAW,KAEZ,CAAC/c,IAkCJ,OACE,6BACE,kBAACid,GAAA,EAAD,CACE1R,kBAAgB,yBAChB2R,mBAAiB,+BACjBhZ,UAAWpC,EAAQ2a,MACnBtM,KAAMvP,EAAMuP,KACZiE,QAASxT,EAAMkT,YACfqJ,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAACC,GAAA,EAAD,CAAMC,GAAI7c,EAAMuP,MACd,yBAAKjM,UAAWpC,EAAQ6D,OACtB,4CACA,6BACE,kBAAC+C,GAAA,EAAD,CACEtM,KAAK,QACLwK,OAAO,QACP+B,MAAM,QACN+U,YAAY,QACZlV,MAAOxI,EACP6X,SAAU,SAAC9S,GAAD,OAAgB8X,EAAS9X,EAAMmD,OAAOM,QAChDI,WAAS,EACTC,WAAS,IAGX,kBAACkP,GAAA,EAAD,CAAalP,WAAS,GACpB,kBAACmP,GAAA,EAAD,CAAYjY,GAAG,qBAAf,QACA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,oBACRnY,GAAG,cACH6G,OAAO,QACP4B,MAAOV,EACP+P,SAAU,SAAC9S,GAAD,OACRA,EAAMmD,QACNnD,EAAMmD,OAAOM,OACbsU,EAAQ/X,EAAMmD,OAAOM,SAGtBmU,GAAM5Y,KAAI,SAACW,GAAD,OACT,kBAAC+O,GAAA,EAAD,CAAUjL,MAAO9D,EAAMT,IAAG,qBAAgBS,IACvCA,QAMT,kBAACI,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QArFK,WACZnE,GAIHH,EAAS,IAEX2C,MAAM,GAAD,OAAIvE,GAAJ,gBAA4B,CAC/BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE9C,QAAO8H,WAE7B9E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAEL,GAAIA,EAAO/O,MACT,OAAOuD,EAASwL,EAAO9D,KAEvB3G,EAAM+c,gBACN/c,EAAMkT,iBAGT3Q,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACNvD,EAAS,8CAEjBgI,SAAQ,kBAAMkV,GAAW,OA3B1Bld,EAAS,mBAoFCkJ,SAAUA,GAJZ,UASCzM,GACC,kBAACiE,GAAA,EAAD,CAAKQ,MAAM,cACT,kBAACF,GAAA,EAAD,CAAYnD,UAAU,KAAKpB,SC5I7C,IAAMyW,GAAavI,aAAW,CAC5B7E,MAAO,CACL8E,OAAQ,sBAFOD,EAIhB,SAAC5J,GAAD,OACD,kBAAC,KAAD,eACEoS,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVxS,OAIF0S,GAAiB9I,cAAW,SAACpJ,GAAD,MAAY,CAC5CoE,KAAM,CACJ,UAAW,CACT/D,gBAAiBL,EAAMpE,QAAQC,QAAQC,KACvC,sDAAuD,CACrD6D,MAAOK,EAAMpE,QAAQuW,OAAOC,YALbhJ,CASnBiJ,MAEW,SAASmK,GAAchd,GAGlC,IAAD,EAC+B+S,IAAM1R,SAA6B,MADlE,mBACM2R,EADN,KACgBC,EADhB,OAEuBF,IAAM1R,SAASrB,EAAMvE,KAAKyL,MAAQ,QAFzD,mBAEMA,EAFN,KAEYgV,EAFZ,KAQKhJ,EAAc,WAClBD,EAAY,OAGRgK,EAAmB,SAAC9d,EAAwB+H,GAChD,GAAK/H,EAAL,CAGA,IAAME,EAAQ8B,cAAgBA,aAAaC,QAAQ,SACnDQ,MAAM,GAAD,OAAIvE,GAAJ,cAA0B,CAC7BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE/C,KAAI+H,WAE1B9E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC8a,GAELhK,IACAgJ,EAAQhV,MAET3E,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAK,+BAAgCF,QAGjE,OACE,6BACE,kBAAC0B,GAAA,EAAD,CACE+G,gBAAc,kBACdoI,gBAAc,OACdnT,QAAQ,YACRC,MAAM,UACNoD,QArCc,SAACY,GACnB8O,EAAY9O,EAAMoD,gBAqCdY,SAAUnI,EAAMmI,UAEfjB,GAEH,kBAAC,GAAD,CACE/H,GAAG,kBACH6T,SAAUA,EACVM,aAAW,EACX/D,KAAMgE,QAAQP,GACdQ,QAASN,GAQT,kBAAC,GAAD,KACE,kBAAChW,EAAA,EAAD,CACEb,QAAQ,QACRkH,QAAS,kBAAM0Z,EAAiBjd,EAAMvE,KAAK0D,GAAI,aAGnD,kBAAC,GAAD,KACE,kBAACjC,EAAA,EAAD,CACEb,QAAQ,SACRkH,QAAS,kBAAM0Z,EAAiBjd,EAAMvE,KAAK0D,GAAI,cAGnD,kBAAC,GAAD,KACE,kBAACjC,EAAA,EAAD,CACEb,QAAQ,QACRkH,QAAS,kBAAM0Z,EAAiBjd,EAAMvE,KAAK0D,GAAI,eC3F3D,IAAMmB,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAU,cAwKhB,IAMemB,gBANS,SAACC,GACvB,MAAO,CACL9K,YAAa8K,EAAOnK,QAAQX,oBAIQO,EAAzBsK,CAAoChF,aArKnD,SAAejB,GACb,IAAMkB,EAAUZ,KACRlF,EAAgB4E,EAAhB5E,YACFoT,EAAWC,sBAEjBhM,QAAQuE,IAAI,gCAAiC5L,GALqB,MAOtBiG,oBAAS,GAPa,mBAO3DqN,EAP2D,KAO3CC,EAP2C,KAQ5DtP,EAAQ8B,cAAgBA,aAAaC,QAAQ,SARe,EASlBC,oBAAS,GATS,mBAS3D8b,EAT2D,KASzCC,EATyC,KAW5DtO,EAAe,CACnBC,KAAML,EAAiB,WAAa,SACpCM,QAASN,EAAiB,eAAiB,SAC3CO,cAAc,EACd1L,QAAS,kBAAMoL,GAAmBD,KAG9B2O,EAAgB,CACpBtO,KAAM,MACNC,QAAS,eACTC,cAAc,EACd1L,QAAS,kBAAM6Z,GAAoB,KAG/BE,EAAe,CACnBtO,QAAS,cACTD,KAAM,SACNxL,QAAS,SAACwD,EAAQtL,GAChB,GACEL,GACAA,EAAYK,MACZL,EAAYK,KAAK2D,QAAU3D,EAAK2D,MAEhCme,MAAM,iCACD,CACL,IAAK9hB,EAAK0D,GACR,OAEEmQ,OAAOmE,QAAP,0CAAkDhY,EAAK2D,MAAvD,OACFwC,MAAM,GAAD,OAAIvE,GAAJ,SAAqB,CACxBwE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE/C,GAAI1D,EAAK0D,OAE/BiD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,kBAAMoM,EAAS8K,SAAW9K,EAAS8K,QAAQC,mBAChDhX,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAK,+BAAgCF,SAlDL,EAwDpCnB,mBAAwB,CACpDyN,EACAuO,EACAC,IA3DgE,mBAwD3D3N,EAxD2D,KAwDlDC,EAxDkD,KAmElE,OALAjO,qBAAU,WACRiO,EAAW,CAACd,EAAcuO,EAAeC,MAExC,CAAC5O,IAGF,yBAAKpL,UAAWpC,EAAQ0D,MACtB,kBAAC,KAAD,CACE4J,SAAUA,EACVqB,QAAS,CACP,CACEhK,MAAO,OACPiK,MAAO,OACPtU,KAAM,SACNwN,OAAQ,SAACQ,GAAD,OACN,kBAACwT,GAAD,CACEvhB,KAAM+N,EACNrB,YAEI/M,IACAA,EAAYK,MACZL,EAAYK,KAAK2D,QAAUoK,EAAIpK,WAMzC,CAAEyG,MAAO,QAASiK,MAAO,QAAStU,KAAM,UACxC,CACEqK,MAAO,SACPiK,MAAO,SACPtU,KAAM,UACNuU,WAAW,GAEb,CACElK,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNuU,WAAW,EACX/G,OAAQ,SAACQ,GAAD,OAAS,IAAI7F,KAAK6F,EAAI9F,WAAWE,mBAE3C,CACEiC,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNuU,WAAW,EACX/G,OAAQ,SAACQ,GAAD,OAAS,IAAI7F,KAAK6F,EAAI+E,WAAW3K,mBAE3C,CAAEiC,MAAO,KAAMiK,MAAO,KAAMtU,KAAM,SAAUyU,QAAQ,IAEtD3O,KAAM,SAAC4O,GAAD,OACJ,IAAIzJ,SAAQ,SAACC,EAASyJ,GACpBvO,MAAM,GAAD,OAAIvE,GAAJ,UAAsB,CACzBwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUgO,KAEpB9N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GACL/D,EAAQ+D,MAETlI,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACNkE,EAAQ,CAAEpF,KAAM,GAAIC,KAAM,EAAGC,WAAY,WAIxDqE,MAAM,QACN2K,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,6BACfzO,SAAU,GACV0O,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBf,WAAW,EACXtH,OAAQiG,EACRqC,qBAAqB,GAEvBpB,QAASA,IAGX,kBAACqM,GAAD,CACEzM,KAAM4N,EACNjK,YAAa,WACXkK,GAAoB,IAEtBL,cAAe,kBACbvO,EAAS8K,SAAW9K,EAAS8K,QAAQC,wB,UCrLzCiE,GAA4C,CAChDjX,EAAG,yBACHkX,EAAG,WACHC,EAAG,aACHC,EAAG,qBACHC,EAAG,cACHC,EAAG,SACHC,EAAG,qBACHC,EAAG,2BACHC,GAAI,UACJC,EAAG,gBACHpR,EAAG,QACHqR,EAAG,aACHC,GAAI,aACJC,EAAG,UACHC,EAAG,iBACHC,EAAG,aACHC,EAAG,eACHC,EAAG,eACHC,EAAG,gBAuBL,IAAMne,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAU,cA2LD4Z,OAtLf,WACE,IAAMxd,EAAUZ,KACZkO,EAAWC,sBAFG,EAKsBpN,oBAAS,GAL/B,mBAKX6X,EALW,KAKGC,EALH,KAMZC,EAAeC,uBAAY,WAC/B7K,EAAS8K,SAAW9K,EAAS8K,QAAQC,gBACrCJ,GAAgB,KACf,CAAC3K,EAAU2K,IAER9Z,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAE7Ckc,EAAe,CACnBtO,QAAS,gCACTD,KAAM,SACNxL,QAAS,SAACwD,EAAQzF,GAChB,IAAMkU,EAAMoE,MAAMC,QAAQvY,GAAQA,EAAK6B,KAAI,SAACwb,GAAD,OAAOA,EAAExf,MAAM,CAACmC,EAAKnC,IAC7C,IAAfqW,EAAI3N,QAINyH,OAAOmE,QAAP,6CACwC+B,EAAI3N,OAD5C,gBAIAjG,MAAM,GAAD,OAAIvE,GAAJ,qBAAiC,CACpCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEsT,UAEtBjT,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAK,+BAAgCF,MAC5DyE,SAAQ,kBAAMkS,GAAgB,QAKvCxX,qBAAU,WACJuX,GACFE,MAED,CAACF,EAAcE,IA5CA,MA8C0B/X,oBAAiB,WAC3DO,MAAM,GAAD,OAAIvE,GAAJ,gBACF+E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OAAYmU,EAAkBnU,SAjDtB,mBA8CXoU,EA9CW,KA8CKD,EA9CL,OAoDgCvd,oBAAiB,WACjEO,MAAM,GAAD,OAAIvE,GAAJ,oBACF+E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OAAYqU,EAAqBrU,SAvDzB,mBAoDXsU,EApDW,KAoDQD,EApDR,OA0DsBzd,oBAAiB,WACvDO,MAAM,GAAD,OAAIvE,GAAJ,sBACF+E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OAAYuU,EAAgBvU,SA7DpB,mBA0DXwU,EA1DW,KA0DGD,EA1DH,KAgElB,OACE,yBAAK1b,UAAWpC,EAAQ0D,MACtB,kBAAC,KAAD,CACE4J,SAAUA,EACVqB,QAAS,CACP,CACEhK,MAAO,WACPiK,MAAO,WACPtU,KAAM,SACNwU,OAAQ6O,EACRxE,kBAAmB,UAErB,CACExU,MAAO,eACPiK,MAAO,eACPtU,KAAM,SACNwU,OAAQ+O,EACR1E,kBAAmB,UAErB,CACExU,MAAO,SACPiK,MAAO,SACPtU,KAAM,SACNwU,OAAQiP,EACR5E,kBAAmB,UAErB,CAAExU,MAAO,OAAQiK,MAAO,OAAQtU,KAAM,SAAUyU,QAAQ,GACxD,CACEpK,MAAO,cACPiK,MAAO,cACPtU,KAAM,SACN6e,kBAAmB,SACnB6E,gBAAiB,CACfC,WAAY,QAEdnW,OAAQ,SAACQ,GACP,OAAIA,EAAI1F,KACA,GAAN,OAAU0F,EAAI1F,KAAd,eAAyB0F,EAAI+B,aAEtB/B,EAAI+B,cAIjB,CACE1F,MAAO,KACPiK,MAAO,KACPtU,KAAM,UACNuU,WAAW,GAEb,CAAElK,MAAO,OAAQiK,MAAO,OAAQtU,KAAM,SAAUuU,WAAW,GAC3D,CACElK,MAAO,YACPiK,MAAO,YACPtU,KAAM,SACNwU,OAAQ,CAAEoP,GAAI,OAAQC,GAAI,QAC1BhF,kBAAmB,UAErB,CACExU,MAAO,QACPiK,MAAO,WACPtU,KAAM,WACNuU,WAAW,GAEb,CACElK,MAAO,aACPiK,MAAO,UACPtU,KAAM,WACNuU,WAAW,GAEb,CACElK,MAAO,aACPiK,MAAO,QACPtU,KAAM,SACNwU,OAAQwN,GACRnD,kBAAmB,SACnBrR,OAAQ,SAACQ,GAAD,OAzKC8V,EAyKoB9V,EAAI8V,QAtKzCA,EACGjE,MAAM,MACNlY,KAAI,SAACoc,EAAMrS,GAAP,OACHsQ,GAAa+B,GACX,kBAACC,GAAA,EAAD,CACEzX,MAAOyV,GAAa+B,GACpB1f,MAAO,CAAEmG,OAAQ,GACjBnD,KAAK,QACLQ,IAAG,eAAU6J,KAGf,MAdV,IAAqBoS,IA2KX,CAAEzZ,MAAO,MAAOiK,MAAO,WAAYtU,KAAM,SAAUyU,QAAQ,GAE3D,CAAEpK,MAAO,KAAMiK,MAAO,KAAMtU,KAAM,SAAUyU,QAAQ,IAEtD3O,KAAM,SAAC4O,GAAD,OACJ,IAAIzJ,SAAQ,SAACC,EAASyJ,GACpBvO,MAAM,GAAD,OAAIvE,GAAJ,aAAyB,CAC5BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAUgO,KAEpB9N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GACL/D,EAAQ+D,MAETlI,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAK,oBAAqBF,GAC3BkE,EAAQ,CAAEpF,KAAM,GAAIC,KAAM,EAAGC,WAAY,WAIxDqE,MAAM,WACN2K,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,6BACfzO,SAAU,GACV0O,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBf,WAAW,EACXtH,QAAQ,EACRsI,qBAAqB,EACrBC,WAAW,GAEbrB,QAAS,CAAC2N,O,UC7NZhd,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJoB,OAAQxF,EAAMG,QAAQ,GACtBkE,QAASrE,EAAMG,QAAQ,GACvB8e,OAAQ,GAEV1T,SAAU,CACR/F,OAAQxF,EAAMG,QAAQ,EAAG,IAE3ByD,OAAQ,CACNY,QAAS,OACTc,WAAY,SACZE,OAAQxF,EAAMG,QAAQ,EAAG,SAKhB,SAAS+e,KACtB,IAAMxe,EAAUZ,KADuB,EAETe,oBAAS,GAFA,mBAEhCmV,EAFgC,KAEvBpF,EAFuB,OAGX/P,mBAAS,IAHE,mBAGhC+C,EAHgC,KAGxBub,EAHwB,OAILte,mBAAS,IAJJ,mBAIhCue,EAJgC,KAIrBC,EAJqB,OAKGxe,mBAAS,IALZ,mBAKhCye,EALgC,KAKjBC,EALiB,OAMX1e,mBAAS,GANE,mBAMhC2e,EANgC,KAMxBC,EANwB,OAOP5e,qBAPO,mBAOhC6e,EAPgC,KAOtBC,EAPsB,OAQb9e,mBAAS,IARI,mBAQhC3F,EARgC,KAQzBuD,EARyB,OASPoC,mBAAS,IATF,mBAShCgB,EATgC,KAStB+d,EATsB,OAWC/e,oBAAiB,WACvDO,MAAM,GAAD,OAAIvE,GAAJ,sBACF+E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OAAYuU,EAAgBvU,SAdC,mBAWhCwU,EAXgC,KAWlBD,EAXkB,OAiBS3d,oBAAiB,WAC/DO,MAAM,GAAD,OAAIvE,GAAJ,0BACF+E,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GAAD,OAAY4V,EAAoB5V,SApBH,mBAiBhC6V,EAjBgC,KAiBdD,EAjBc,KAuBjChhB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAvBZ,MAgFnC2R,IAAM1R,SAA6B,MAhFA,mBA8ErCkf,EA9EqC,KA+ErCC,EA/EqC,KAsFjCC,EAAwB,WAC5BD,EAAsB,OAQxB,OACE,kBAAC/a,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ0D,MACxB,+CAEA,kBAACQ,GAAA,EAAD,CACEC,WAAS,EACT1E,QAAS,EACTqN,UAAU,MACVC,QAAQ,SACRnI,WAAW,cAEX,kBAACV,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,GACb,yBAAK1T,UAAWpC,EAAQkD,QACtB,kBAAC0D,GAAA,EAAD,CACEC,MAAM,SACN2Y,WAAW,YACXzY,WAAS,EACTL,MAAOxD,EACP6S,SAAU,SAAC9S,GAAD,OAAWwb,EAAUxb,EAAMmD,OAAOM,UAG9C,6BACE,kBAAC1D,GAAA,EAAD,CACE+G,gBAAc,kBACdoI,gBAAc,OACdnT,QAAQ,YACRC,MAAM,UACN0C,KAAK,QACLU,QAzCe,SAACY,GAC5Bqc,EAAsBrc,EAAMoD,iBA0ChB,kBAAC,KAAD,QAIJ,kBAAC,KAAD,CACEpI,GAAG,cACH6T,SAAUuN,EACVjN,aAAW,EACX/D,KAAMgE,QAAQgN,GACd/M,QAASiN,GAERxB,GACC9J,OAAOe,KAAK+I,GAAc9b,KAAI,SAACiB,GAAD,OAC5B,kBAACyO,GAAA,EAAD,CACExP,IAAG,qBAAgBe,GACnBb,QAAS,kBAlDA,SAACa,GAC1Bub,EAAUvb,GACVqc,IAgD+BE,CAAmBvc,KAEjCA,QAMX,kBAAC+S,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ6K,UACxC,kBAACqL,GAAA,EAAD,CAAYjY,GAAG,gCAAf,uBAGA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,+BACRnY,GAAG,yBACHyI,MAAOkY,EACP7I,SAAU,SAAC9S,GAAD,OACRA,EAAMmD,QAAUyY,EAAiB5b,EAAMmD,OAAOM,SAGhD,kBAACiL,GAAA,EAAD,CAAUjL,MAAM,IAAhB,QACC0Y,GACCnL,OAAOe,KAAKoK,GAAkBnd,KAAI,SAACyd,GAAD,OAChC,kBAAC/N,GAAA,EAAD,CAAUxP,IAAG,kBAAaud,GAAOhZ,MAAOgZ,GACrCA,OAIT,kBAACC,GAAA,EAAD,mFAKF,kBAAC/Y,GAAA,EAAD,CACEC,MAAM,aACN2Y,WAAW,mCACXzY,WAAS,EACTL,MAAOgY,EACP3I,SAAU,SAAC9S,GAAD,OAAW0b,EAAa1b,EAAMmD,OAAOM,QAC/CtE,UAAWpC,EAAQ6K,WAErB,kBAACjE,GAAA,EAAD,CACEC,MAAM,SACN2Y,WAAW,yCACXllB,KAAK,SACLslB,WAAY,CACVC,IAAK,IACLC,IAAK,IACLC,KAAM,QAERhZ,WAAS,EACTL,MAAOoY,EACP/I,SAAU,SAAC9S,GAAD,OACR8b,EACE1E,MAAMzO,WAAW3I,EAAMmD,OAAOM,QAC1B,EACAkF,WAAW3I,EAAMmD,OAAOM,SAGhCtE,UAAWpC,EAAQ6K,WAGrB,2BACEvQ,KAAK,OACL0lB,OAAO,OACPjK,SA7IV,SAA0B9S,GAExB,GADAiN,GAAW,GACPjN,EAAMmD,OAAO6Z,OAAShd,EAAMmD,OAAO6Z,MAAMtZ,OAAQ,CACnD,IAAIvG,EAAO,IAAI8f,SACf9f,EAAK+f,OAAO,OAAQld,EAAMmD,OAAO6Z,MAAM,IACvChB,EAAY7e,GACZ8P,GAAW,QAEX+O,OAAYxkB,GACZyV,GAAW,IAqILjJ,SAAUqO,EACVlT,UAAWpC,EAAQ6K,WAGrB,yBAAKzI,UAAWpC,EAAQ6K,UACtB,kBAAC7H,GAAA,EAAD,CACEiE,SACEqO,IAAYoJ,IAAcxb,QAAuBzI,IAAbukB,EAEtC3c,QAAS,kBA7LnBtE,EAAS,IACTmhB,EAAY,IACZhP,GAAW,QACN8O,GAILA,EAASoB,OAAO,UAChBpB,EAASoB,OAAO,cAChBpB,EAASoB,OAAO,mBAChBpB,EAASoB,OAAO,UAChBpB,EAASmB,OAAO,SAAUjd,GAC1B8b,EAASmB,OAAO,aAAczB,GAC9BM,EAASmB,OAAO,kBAAmBvB,GACnCI,EAASmB,OAAO,SAAhB,UAA6BrB,IAE7Bpe,MAAM,GAAD,OAAIvE,GAAJ,oBAAgC,CACnCwE,OAAQ,OACRC,QAAS,CACPC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMke,IAEL9d,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAAS3G,MACXuD,EAASoD,EAASsE,KAElByZ,EAAY/d,EAASsE,QAGxBpE,OAAM,SAACC,GACNC,QAAQC,KAAK,qBAAsBF,GACnCvD,EAASuD,EAAI+e,eAEdta,SAAQ,kBAAMmK,GAAW,OA/B1BnS,EAAS,2BA0LDiB,QAAQ,YACRC,MAAM,UACN8H,WAAS,GAPX,WAaF,yBAAK3E,UAAWpC,EAAQ6K,UACrByK,GAAW,kBAAChX,GAAD,MACX9D,GACC,yBAAK4H,UAAWpC,EAAQ6K,UACtB,+CACA,2BAAIrQ,IAGP2G,GACC,yBAAKiB,UAAWpC,EAAQ6K,UACtB,wCACA,2BAAI1J,MAKZ,kBAAC+C,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,GACb,kBAAC/W,GAAA,EAAD,CAAYC,QAAQ,KAAKE,cAAY,GAArC,uBAGA,kBAACH,GAAA,EAAD,CAAYC,QAAQ,QAAQE,cAAY,EAACtD,UAAU,OACjD,4BACE,qEACA,mFAEA,gEACA,4BACE,kCADF,KACc,uCADd,KAC+B,mCAD/B,KAC4C,0CAD5C,IACgE,IAC9D,iCAFF,KAEa,mCAFb,KAE0B,wCAF1B,KAE4C,uCAF5C,IAE6D,IAC3D,sCAHF,KAGkB,8CAHlB,KAG0C,6CAH1C,IAGiE,IAC/D,uCAJF,KAImB,2CAJnB,KAIwC,oCAJxC,KAIsD,gCAJtD,IAIgE,IAC9D,gCALF,KAKY,gCALZ,KAKsB,gCALtB,KAKgC,gCALhC,KAK0C,gCAL1C,KAKoD,gCALpD,IAK8D,IAC5D,gCANF,KAMY,gCANZ,KAMsB,gCANtB,KAMgC,gCANhC,KAM0C,iCAN1C,KAMqD,gCANrD,IAM+D,IAC7D,gCAPF,KAOY,gCAPZ,KAOsB,iCAPtB,KAUA,0DACA,4BACE,kCADF,KACc,8CADd,KACsC,6CADtC,IAC6D,IAC3D,uCAFF,KAEmB,2CAFnB,KAEwC,oCAFxC,KAEsD,gCAFtD,IAEgE,IAC9D,gCAHF,KAGY,gCAHZ,KAGsB,gCAHtB,KAGgC,gCAHhC,KAG0C,gCAH1C,KAGoD,gCAHpD,IAG8D,IAC5D,gCAJF,KAIY,gCAJZ,KAIsB,gCAJtB,KAIgC,gCAJhC,KAI0C,iCAJ1C,KAIqD,gCAJrD,IAI+D,IAC7D,gCALF,KAKY,gCALZ,KAKsB,iCALtB,KAQA,4BACE,oCADF,WAGA,mCACM,oCADN,wLAOA,kEACA,oIAE6C,gCAF7C,2DAGgD,gCAHhD,kDAIsC,iCAJtC,gDAME,6BACA,6BACA,+BACE,+BACE,4BACE,oCACA,6CAGJ,+BACE,4BACE,iCACA,uDAEF,4BACE,iCACA,yCAEF,4BACE,iCACA,2CAEF,4BACE,iCACA,mDAEF,4BACE,iCACA,4CAEF,4BACE,iCACA,uCAEF,4BACE,iCACA,mDAEF,4BACE,iCACA,yDAEF,4BACE,iCACA,8CAEF,4BACE,iCACA,sCAEF,4BACE,iCACA,2CAEF,4BACE,kCACA,2CAEF,4BACE,iCACA,wCAEF,4BACE,iCACA,+CAEF,4BACE,iCACA,2CAEF,4BACE,kCACA,wCAEF,4BACE,iCACA,6CAEF,4BACE,iCACA,6CAEF,4BACE,iCACA,gDAMR,sDACA,6HAEmC,uDAAgC,IAFnE,sBAGqB,uCAHrB,iFAKE,6BACA,6BANF,yEAQS,8CART,OAQmC,6CARnC,uLAcA,0CACA,+iBAUE,6BACA,6BACA,oCAZF,iPAgBE,6BACA,6BAjBF,6H,2ECtaR0kB,GAAkB,SACtBriB,EACAiS,GACI,IAAD,EACyB/P,mBAAyB,CACnDwC,OAAQ,YAFP,mBACI4G,EADJ,KACY8G,EADZ,KAiCH,OA5BA5P,qBAAU,WACR,GAAKxC,GAAoB,IAAdA,EAAG0I,OAAd,CAKA,IAAMxI,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAEnDQ,MAAM,GAAD,OAAIvE,GAAJ,uBAA2B8B,GAAM,CACpC2C,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,MAG1B+C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAELkP,EAAU,CAAE1N,OAAQ,SAAU2N,QAASnP,OAExCE,OAAM,SAAC7G,GACN+G,QAAQC,KAAK,oCAAqChH,GAClD6V,EAAU,eAAK7V,OAEhBuL,SAAQ,WACPmK,GAAW,WAtBbA,GAAW,KAwBZ,CAACjS,EAAIiS,IAED3G,G,UCrBHnK,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJe,MAAO,OACPV,UAAW,OACXyV,OAAQ,QAEV+G,MAAO,CACLta,SAAU,OACVtC,QAASrE,EAAMG,QAAQ,GACvB+gB,eAAgB,WAChB,OAAQ,CACN7X,OAAQ,SAGZ8X,SAAU,CACRhc,MAAO,aAKb,SAASic,GAAUC,GACjB,YAAYlmB,IAARkmB,EACK,OAGD,IAAN,OADiB,kBAARA,EACE/U,WAAW+U,GAAKrkB,QAAQ,GAExBqkB,EAAIrkB,QAAQ,IAkB3B,SAASuX,GAAQ+M,GACf,IAAM9L,EACJ8L,EAAUxgB,MAAQwgB,EAAUxgB,KAAK8L,SAAW0U,EAAUxgB,KAAK8L,QAAQ4I,QAC/DlJ,WAAWgV,EAAUxgB,KAAK8L,QAAQ4I,SAClC8L,EAAUxU,MACVyI,EACJ+L,EAAUxgB,MAAQwgB,EAAUxgB,KAAK8L,QAC7BN,WAAWgV,EAAUxgB,KAAK8L,QAAQ2I,UAClC+L,EAAUxU,MAEhB,MAAmC,OAA5BwU,EAAUvU,eAA0ByI,EACvCuF,MAAMuG,EAAUtU,SAAWwI,GACzB,EACA8L,EAAUtU,SAAWwI,EACvBuF,MAAMuG,EAAUtU,SAAWuI,GAC3B,EACA+L,EAAUtU,SAAWuI,EAmfZzJ,OAlef,SAAwBtM,GAStB,IAAMkB,EAAUZ,KAEVyhB,EAAyB/hB,EAAMqM,WAxDlCE,QAAO,SAAClB,GAAD,MAAoB,YAAZA,EAAGmB,QAClBrJ,KAAI,gBAAGc,EAAH,EAAGA,MAAH,MAAiC,kBAAVA,EAAqB6I,WAAW7I,GAASA,KACpE0I,QAAO,SAACqV,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAuDzBC,EApDR,SAA0BxM,GACxB,OAAOA,EACJnJ,QAAO,SAAClB,GAAD,MAAoB,eAAZA,EAAGmB,QAClBrJ,KAAI,gBAAGc,EAAH,EAAGA,MAAH,OAAe6I,WAAW,GAAD,OAAI7I,OACjC0I,QAAO,SAACqV,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAgDDE,CAAiBniB,EAAMqM,YAC/C+V,EAAa9kB,IAAYykB,EAAgBG,GACzCxN,EAAa0N,EAAaL,EAAgBG,EAExCG,EAAmDriB,EAAnDqiB,cAAeC,EAAoCtiB,EAApCsiB,cAAeC,EAAqBviB,EAArBuiB,iBACtC5gB,qBAAU,WACR0gB,EAAcD,KAEb,CAACA,IAEJzgB,qBAAU,WACR2gB,EAAc5N,KAEb,CAACA,IAEJ/S,qBAAU,WACR4gB,EAAiBR,KAEhB,CAACA,IAEJ,IAaMS,EAAkB,SAACV,EAAqBtU,GAC5CsU,EAAUtU,SAAWA,EAAW,EAAIA,EAAW,EAC/CsU,EAAU7d,MAAQ8Q,GAAQ+M,GAC1B,IAAM5U,EAAMlN,EAAMqM,WAAWoW,QAAQX,GACrC9hB,EAAM0iB,kBAAkBxV,EAAK4U,IAGzBa,EAA0B,SAC9Bb,EACAvW,GAEAuW,EAAUvW,YAAcA,EACxB,IAAM2B,EAAMlN,EAAMqM,WAAWoW,QAAQX,GACrC9hB,EAAM0iB,kBAAkBxV,EAAK4U,IAGzBc,EAAoB,SAACd,EAAqBxU,GAC9CwU,EAAUxU,MAAQA,EAClBwU,EAAU7d,MAAQ8Q,GAAQ+M,GAC1B,IAAM5U,EAAMlN,EAAMqM,WAAWoW,QAAQX,GACrC9hB,EAAM0iB,kBAAkBxV,EAAK4U,IAGzBrM,EAAiB,SAACqM,GACtB,IAAM5U,EAAMlN,EAAMqM,WAAWoW,QAAQX,GACrC9hB,EAAMyV,eAAevI,IAQjB1B,EAAcxL,EAAMqM,WAAWE,QAAO,SAAClB,GAAD,MAAoB,eAAZA,EAAGmB,QACjDC,EAAWzM,EAAMqM,WAAWE,QAAO,SAAClB,GAAD,MAAoB,YAAZA,EAAGmB,QAC9CE,EAAgBD,EAASE,QAC7B,SAACC,EAAKC,GAAN,OAAYD,EAAME,WAAW,GAAD,OAAID,EAAE5I,UAClC,GAEIkH,EAAUnL,EAAMqM,WAAWE,QAAO,SAAClB,GAAD,MAAoB,WAAZA,EAAGmB,QAC7CO,EAAe5B,EAAQwB,QAC3B,SAACC,EAAKC,GAAN,OAAYD,EAAME,WAAW,GAAD,OAAID,EAAE5I,UAClC,GAEI+I,EACJF,WAAW,GAAD,OAAI4H,IACd5H,WAAW,GAAD,OAAIC,IACdD,WAAW,GAAD,OAAIJ,IAEhB,OACE,kBAACjH,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ0D,MACxB,kBAAChC,GAAA,EAAD,CAAOU,UAAWpC,EAAQugB,MAAOxU,aAAW,QAC1C,kBAACnK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,WACjB,kBAACD,GAAA,EAAD,oBACA,kBAACA,GAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,GAAA,EAAD,KACGlD,EAAMqM,WAAWlJ,KAChB,SAAC2e,EAAW5U,GAAZ,MACqB,YAAnB4U,EAAUtV,MACR,kBAACzJ,GAAA,EAAD,CAAUM,IAAG,YAAO6J,IAClB,kBAAClK,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC4H,GAAA,EAAD,CAAShF,MAAM,oBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,SACXpK,KAAK,QACLU,QAAS,SAACY,GAAD,OAAgBsR,EAAeqM,KAExC,kBAAC,KAAD,CAAWxY,SAAS,cAGxB,kBAACuB,GAAA,EAAD,CAAShF,MAAM,sBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,oCACX1J,QAAS,kBApDF,SAACue,GAC5Brf,QAAQuE,IAAI,kCAAmC8a,GAC/C9hB,EAAM6iB,yBAAyBf,GAkDIgB,CAAqBhB,KAEpC,kBAAC,KAAD,SAIN,kBAAC9e,GAAA,EAAD,SACI8e,EAAU1d,OADd,KACwB0d,EAAUvW,aAElC,kBAACvI,GAAA,EAAD,CAAWC,MAAM,SACf,6BACG6e,EAAUxgB,MACXwgB,EAAUxgB,KAAK8L,SACa,OAA5B0U,EAAUvU,eACVuU,EAAUxgB,KAAK8L,QAAQ4I,QACnB4L,GAAUE,EAAUxgB,KAAK8L,QAAQ4I,SACjC4L,GACEE,EAAUxgB,MAAQwgB,EAAUxgB,KAAK8L,QAC7B0U,EAAUxgB,KAAK8L,QAAQ2I,SACvB+L,EAAUxU,QAGtB,6BAjKpB,SAAkBwU,GAChB,IAAMiB,EAAS,GAUf,OATAjB,EAAUxgB,MACRwgB,EAAUxgB,KAAK8L,SACf0U,EAAUxgB,KAAK8L,QAAQ0H,IACO,IAA9BgN,EAAUxgB,KAAK8L,QAAQ0H,IACvBiO,EAAOtf,KAAKqe,EAAUxgB,KAAK8L,QAAQ0H,IACrCgN,EAAUxgB,MACRwgB,EAAUxgB,KAAK8L,SACf0U,EAAUxgB,KAAK8L,QAAQvK,MACvBkgB,EAAOtf,KAAKqe,EAAUxgB,KAAK8L,QAAQvK,MAC9BkgB,EAAOC,KAAK,OAsJKC,CAASnB,KAEjB,kBAAC9e,GAAA,EAAD,CAAWC,MAAM,UACd6e,EAAUxgB,MACXwgB,EAAUxgB,KAAK8L,SACf0U,EAAUxgB,KAAK8L,QAAQ4I,SACvB8L,EAAUxgB,KAAK8L,QAAQ4I,UACrB8L,EAAUxgB,KAAK8L,QAAQ2I,SACvB,kBAACsB,GAAA,EAAD,CACEzP,MAAOka,EAAUvU,cACjB0J,SAAU,SAAC9S,GAAD,OA7HP,SAAC2d,EAAqBoB,GAC7CpB,EAAUvU,cAAgB2V,EACtBpB,EAAUxgB,MAAQwgB,EAAUxgB,KAAK8L,UACnC0U,EAAUxU,MACC,OAAT4V,GACKpB,EAAUxgB,KAAK8L,QAAQ2I,UACvB+L,EAAUxgB,KAAK8L,QAAQ4I,SAEhC8L,EAAU7d,MAAQ8Q,GAAQ+M,GAC1B,IAAM5U,EAAMlN,EAAMqM,WAAWoW,QAAQX,GACrC9hB,EAAM0iB,kBAAkBxV,EAAK4U,GAoHPqB,CAAiBrB,EAAW3d,EAAMmD,OAAOM,QAE3C5B,OAAO,SAEP,kBAAC6M,GAAA,EAAD,CAAUjL,MAAM,MAAhB,QACA,kBAACiL,GAAA,EAAD,CAAUjL,MAAM,MAAhB,SAEAka,EAAUxgB,MACZwgB,EAAUxgB,KAAK8L,SACsB,OAArC0U,EAAUxgB,KAAK8L,QAAQgW,UACvB,OAEA,QAGJ,kBAACpgB,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC6E,GAAA,EAAD,CACExE,UAAWpC,EAAQygB,SACnBnmB,KAAK,SACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUtU,SACjByJ,SAAU,SAAC9S,GAAD,OACRqe,EAAgBV,EAAW3d,EAAMmD,OAAOM,QAE1CkZ,WAAY,CAAEC,IAAK,IAAKE,KAAM,QAGlC,kBAACje,GAAA,EAAD,CAAWC,MAAM,SACd2e,GAAUE,EAAU7d,YAK/B,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWugB,QAAS,EAAGrY,QAAS,IAChC,kBAAClI,GAAA,EAAD,CAAWC,MAAM,SAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UACdjD,EAAMqM,YAAcrM,EAAMqM,WAAWxE,QAExC,kBAAC7E,GAAA,EAAD,CAAWC,MAAM,SAAS2e,GAAUG,KAErCvW,EAAYrI,KAAI,SAAC2e,EAAW5U,GAAZ,OACf,kBAACnK,GAAA,EAAD,CAAUM,IAAG,YAAO6J,IAClB,kBAAClK,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC4H,GAAA,EAAD,CAAShF,MAAM,qBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,SACXpK,KAAK,QACLU,QAAS,SAACY,GAAD,OAAgBsR,EAAeqM,KAExC,kBAAC,KAAD,CAAWxY,SAAS,eAI1B,kBAACtG,GAAA,EAAD,CAAWkI,QAAS,GAClB,kBAACpD,GAAA,EAAD,CACEtM,KAAK,OACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUvW,YACjB0L,SAAU,SAAC9S,GAAD,OACRwe,EAAwBb,EAAW3d,EAAMmD,OAAOM,WAItD,kBAAC5E,GAAA,EAAD,KACE,kBAAC8E,GAAA,EAAD,CACEtM,KAAK,SACLwK,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUxU,OAASwU,EAAU7d,MACpCgT,SAAU,SAAC9S,GAAD,OACRye,EAAkBd,EAAW3d,EAAMmD,OAAOM,QAE5CkZ,WAAY,CACVC,IAAK,QACLC,IAAK,OACLC,KAAM,KAERuC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBhT,SAAS,SAAzB,SAMR,kBAAC1N,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC6E,GAAA,EAAD,CACExE,UAAWpC,EAAQygB,SACnBnmB,KAAK,SACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUtU,SACjByJ,SAAU,SAAC9S,GAAD,OACRqe,EAAgBV,EAAW3d,EAAMmD,OAAOM,QAE1CkZ,WAAY,CAAEC,IAAK,IAAKE,KAAM,QAGlC,kBAACje,GAAA,EAAD,CAAWC,MAAM,SAAS2e,GAAUE,EAAU7d,YAIlD,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWugB,QAAS,EAAGrY,QAAS,IAChC,kBAAClI,GAAA,EAAD,CAAWC,MAAM,SAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAU1F,IAC3B,kBAACyF,GAAA,EAAD,CAAWC,MAAM,SAAS2e,GAAUQ,KAGrC3V,EAAS5E,OAAS,GACjB,kBAAC9E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC9B,yCAKLV,EAAStJ,KAAI,SAAC2e,EAAW5U,GAAZ,OACZ,kBAACnK,GAAA,EAAD,CAAUM,IAAG,YAAO6J,IAClB,kBAAClK,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC4H,GAAA,EAAD,CAAShF,MAAM,kBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,SACXpK,KAAK,QACLU,QAAS,SAACY,GAAD,OAAgBsR,EAAeqM,KAExC,kBAAC,KAAD,CAAWxY,SAAS,eAI1B,kBAACtG,GAAA,EAAD,CAAWkI,QAAS,GAClB,kBAACpD,GAAA,EAAD,CACEtM,KAAK,OACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUvW,YACjB0L,SAAU,SAAC9S,GAAD,OACRwe,EAAwBb,EAAW3d,EAAMmD,OAAOM,UAGnDka,EAAUxgB,MACTwgB,EAAUxgB,KAAKmM,SACfqU,EAAUxgB,KAAKmM,QAAQC,gBACrB,kBAAC3Q,GAAA,EAAD,CACEoD,MAAM,YACNwN,KAAMmU,EAAUxgB,KAAKmM,QAAQG,YAC7BtG,OAAO,SACPuG,IAAI,uBAEHiU,EAAUxgB,KAAKmM,QAAQC,iBAIhC,kBAAC1K,GAAA,EAAD,KACE,kBAAC8E,GAAA,EAAD,CACEtM,KAAK,SACLwK,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUxU,OAASwU,EAAU7d,MACpCgT,SAAU,SAAC9S,GAAD,OACRye,EAAkBd,EAAW3d,EAAMmD,OAAOM,QAE5CkZ,WAAY,CACVC,IAAK,QACLC,IAAK,QACLC,KAAM,QAERuC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBhT,SAAS,SAAzB,SAMR,kBAAC1N,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC6E,GAAA,EAAD,CACExE,UAAWpC,EAAQygB,SACnBnmB,KAAK,SACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUtU,SACjByJ,SAAU,SAAC9S,GAAD,OACRqe,EAAgBV,EAAW3d,EAAMmD,OAAOM,QAE1CkZ,WAAY,CAAEC,IAAK,IAAKE,KAAM,QAGlC,kBAACje,GAAA,EAAD,CAAWC,MAAM,SAAS2e,GAAUE,EAAU7d,YAIjDkH,EAAQtD,OAAS,GAChB,kBAAC9E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,OAC9B,wCAKLhC,EAAQhI,KAAI,SAAC2e,EAAW5U,GAAZ,OACX,kBAACnK,GAAA,EAAD,CAAUM,IAAG,YAAO6J,IAClB,kBAAClK,GAAA,EAAD,CAAWC,MAAM,UACf,kBAAC4H,GAAA,EAAD,CAAShF,MAAM,iBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,SACXpK,KAAK,QACLU,QAAS,SAACY,GAAD,OAAgBsR,EAAeqM,KAExC,kBAAC,KAAD,CAAWxY,SAAS,eAI1B,kBAACtG,GAAA,EAAD,CAAWkI,QAAS,GAClB,kBAACpD,GAAA,EAAD,CACEtM,KAAK,OACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUvW,YACjB0L,SAAU,SAAC9S,GAAD,OACRwe,EAAwBb,EAAW3d,EAAMmD,OAAOM,WAItD,kBAAC5E,GAAA,EAAD,KACE,kBAAC8E,GAAA,EAAD,CACEtM,KAAK,SACLwK,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUxU,OAASwU,EAAU7d,MACpCgT,SAAU,SAAC9S,GAAD,OACRye,EAAkBd,EAAW3d,EAAMmD,OAAOM,QAE5CkZ,WAAY,CACVC,IAAK,QACLC,IAAK,QACLC,KAAM,QAERuC,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBhT,SAAS,SAAzB,SAMR,kBAAC1N,GAAA,EAAD,CAAWC,MAAM,SACf,kBAAC6E,GAAA,EAAD,CACExE,UAAWpC,EAAQygB,SACnBnmB,KAAK,SACL6nB,gBAAiB,CACfC,QAAQ,GAEVtd,OAAO,QACPiC,WAAS,EACTL,MAAOka,EAAUtU,SACjByJ,SAAU,SAAC9S,GAAD,OACRqe,EAAgBV,EAAW3d,EAAMmD,OAAOM,QAE1CkZ,WAAY,CAAEC,IAAK,IAAKE,KAAM,QAGlC,kBAACje,GAAA,EAAD,CAAWC,MAAM,SAAS2e,GAAUE,EAAU7d,YAIlD,kBAAClB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWugB,QAAS,EAAGrY,QAAS,IAChC,kBAAClI,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,QAAQiI,QAAS,GAC/B0W,GAAUlN,KAId1H,EAAU,GACT,kBAACjK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,2CAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,QAAQiI,QAAS,GAC3D,+BAAK8B,EAAQxP,QAAQ,MAK1BwP,EAAU,GACT,kBAACjK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMjC,QAAS,IAC/C,kBAAClI,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,SAC1C,2CAEF,kBAACD,GAAA,EAAD,CAAWlG,UAAU,KAAKqQ,MAAM,MAAMlK,MAAM,QAAQiI,QAAS,GAC3D,+BAAK4C,KAAKC,IAAIf,GAASxP,QAAQ,U,oBCviBhC,SAASmmB,GAAqB3jB,GAAmC,IAAD,EACrD+S,IAAM1R,UAAS,GADsC,mBACtEkO,EADsE,KAChEqU,EADgE,OAE/C7Q,IAAM1R,SAA0B,IAFe,mBAEtEmP,EAFsE,KAE7DqT,EAF6D,OAG3D9Q,IAAM1R,SAAS,IAH4C,mBAGtEyiB,EAHsE,KAGnEC,EAHmE,OAI/ChR,IAAM1R,SAASkO,GAA2B,IAAnBiB,EAAQ3I,QAJgB,mBAItE2O,EAJsE,KAI7DpF,EAJ6D,KAuD7E,OAjDA2B,IAAMpR,WAAU,WACd,IAAIqiB,GAAS,EAEb,GAAKxN,EA4BL,OAxBC,WAAC,WAAAjQ,EAAAC,OAAA,mEAAAD,EAAA,MACuB3E,MAAM,GAAD,OAAIvE,GAAJ,aAAyB,CACnDwE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CAAEuG,OAAQqb,OANjC,cACMzhB,EADN,mBAAAkE,EAAA,MASwBlE,EAASC,QATjC,OASM2hB,EATN,OAWID,IACFH,EACEI,EAAS3iB,KAAK6B,KAAI,SAACwb,GAAD,MAAQ,CACxB7a,KAAK,GAAD,OAAK6a,EAAE7a,KAAP,YAAe6a,EAAEpT,YAAjB,YAAgCoT,EAAE7J,GAAlC,YAAwC6J,EAAE9b,KAA1C,aACF8b,EAAE5I,SADA,YAEA4I,EAAE3I,UAAY2I,EAAE5I,SAAhB,YAAgC4I,EAAE3I,QAAlC,QAAkD,IACtD5I,QAASuR,OAGbvN,GAAW,IApBb,qCAAD,GAwBM,WACL4S,GAAS,KAEV,CAACxN,EAASsN,IAEb/Q,IAAMpR,WAAU,WACT4N,GACHsU,EAAW,MAEZ,CAACtU,IAUF,kBAAC2U,GAAA,EAAD,CACE/kB,GAAG,6BACHU,MAAO,CAAE8F,MAAO,QAChB4J,KAAMA,EACN4U,OAAQ,WACNP,GAAQ,IAEVpQ,QAAS,WACPoQ,GAAQ,IAEVQ,kBAAmB,SAACC,EAAQzc,GAAT,OAAmByc,EAAOvgB,OAAS8D,EAAM9D,MAC5DwgB,eAAgB,SAACD,GAAD,OAAYA,EAAOvgB,MACnCmT,SAAU,SAAC9S,EAAOyD,GAAR,OAAkB5H,EAAMukB,eAAe3c,IACjD4I,QAASA,EACTgG,QAASA,EACTgO,UAAQ,EACRC,YAAa,SAAC3N,GAAD,OACX,kBAAChP,GAAA,EAAD,iBACMgP,EADN,CAEE/O,MAAM,iBACNE,WAAS,EACT/H,QAAQ,WACR0H,MAAOkc,EACP7M,SAAU,SAAC9S,GA/BnB,IAAuByD,KA+BoBzD,EAAMmD,OAAOM,QA9BzCA,EAAMC,OAAS,IAC1Bkc,EAAKnc,GACLwJ,GAAW,KA6BPoS,WAAU,eACL1M,EAAO0M,WADF,CAERkB,aACE,kBAAC,IAAM/hB,SAAP,KACG6T,EAAU,kBAACmO,GAAA,EAAD,CAAkB9hB,KAAM,KAAS,KAC3CiU,EAAO0M,WAAWkB,sBCrFpB,SAASE,GAAmB5kB,GAAiC,IAAD,EACjDqB,oBAAS,GADwC,mBAClEkO,EADkE,KAC5DqU,EAD4D,OAE3CviB,mBAAyB,IAFkB,mBAElEmP,EAFkE,KAEzDqT,EAFyD,OAGvDxiB,mBAAS,IAH8C,mBAGlEyiB,EAHkE,KAG/DC,EAH+D,OAI3C1iB,mBAASkO,GAA2B,IAAnBiB,EAAQ3I,QAJkB,mBAIlE2O,EAJkE,KAIzDpF,EAJyD,KAyDzE,OAnDAzP,qBAAU,WACR,IAAIqiB,GAAS,EAEb,GAAKxN,EAAL,CAIA,IAAMnX,EAAQ8B,cAAgBA,aAAaC,QAAQ,SA0BnD,OAxBC,WAAC,WAAAmF,EAAAC,OAAA,mEAAAD,EAAA,MACuB3E,MAAM,GAAD,OAAIvE,GAAJ,YAAwB,CAClDwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEuG,OAAQqb,OAPjC,cACMzhB,EADN,mBAAAkE,EAAA,MAUuBlE,EAASC,QAVhC,OAUMiC,EAVN,OAWIyf,IACFH,EACEtf,EAAQjD,KAAK6B,KAAI,SAACwb,GAAD,MAAQ,CACvB7a,KAAK,GAAD,OAAK6a,EAAE7a,KAAP,YACF6a,EAAEvQ,MAAQuQ,EAAEvQ,KAAKhP,MAAQuf,EAAEvQ,KAAKhP,MAAQuf,EAAEja,oBAE5CD,OAAQka,OAGZvN,GAAW,IApBb,qCAAD,GAwBM,WACL4S,GAAS,MAEV,CAACxN,EAASsN,IAEbniB,qBAAU,WACH4N,GACHsU,EAAW,MAEZ,CAACtU,IAUF,kBAAC2U,GAAA,EAAD,CACE/kB,GAAG,6BACHU,MAAO,CAAE8F,MAAO,QAChB4J,KAAMA,EACN4U,OAAQ,WACNP,GAAQ,IAEVpQ,QAAS,WACPoQ,GAAQ,IAEVQ,kBAAmB,SAACC,EAAQzc,GAAT,OAAmByc,EAAOvgB,OAAS8D,EAAM9D,MAC5DwgB,eAAgB,SAACD,GAAD,OAAYA,EAAOvgB,MACnCmT,SAAU,SAAC9S,EAAOyD,GAAR,OAAkB5H,EAAMukB,eAAe3c,IACjD4I,QAASA,EACTgG,QAASA,EACTgO,UAAQ,EACRC,YAAa,SAAC3N,GAAD,OACX,kBAAChP,GAAA,EAAD,iBACMgP,EADN,CAEE/O,MAAM,gBACNE,WAAS,EACTD,WAAS,EACT9H,QAAQ,WACR0H,MAAOkc,EACP7M,SAAU,SAAC9S,GAhCnB,IAAuByD,KAgCoBzD,EAAMmD,OAAOM,QA/BzCA,EAAMC,OAAS,IAC1Bkc,EAAKnc,GACLwJ,GAAW,KA8BPoS,WAAU,eACL1M,EAAO0M,WADF,CAERkB,aACE,kBAAC,IAAM/hB,SAAP,KACG6T,EAAU,kBAACmO,GAAA,EAAD,CAAkB9hB,KAAM,KAAS,KAC3CiU,EAAO0M,WAAWkB,sBC3DnC,IAAMG,GAAoB,CACxB1lB,GAAI,MACJ0E,OAAQ,MACRQ,eAAgB,cAChBC,gBAAiB,YACjBL,MAAO,EACPF,WAAY,EACZC,SAAU,EACVF,KAAM,GACN1E,MAAO,GACP8O,MAAO,GACPC,QAAS,GACTG,MAAO,GACP5K,UAAW,GACX6K,UAAW,GACXjC,eAAgB,IAGZhM,GAAYC,aAAW,SAACC,GAAD,aAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAW,SAEbY,KAAM,CACJyE,aAAc3J,EAAMG,QAAQ,IAE9BmkB,UAAW,CACT9f,QAAS,QACTmF,aAAc3J,EAAMG,QAAQ,IAE9BkD,OAAQ,CACNsG,aAAc3J,EAAMG,QAAQ,IAE9BokB,SAAU,CACR/f,QAAS,eACT2G,YAAanL,EAAMG,QAAQ,IAE7BqkB,QAAM,oBACHxkB,EAAMykB,YAAYC,GAAG,MAAQ,CAC5BxU,SAAU,SACVC,IAAK,QAHH,wBAKI,GALJ,iCAManQ,EAAMpE,QAAQ0E,WAAWiE,OANtC,GAQNogB,QAAS,CACP1K,SAAU,EACVlQ,WAAY/J,EAAMG,QAAQ,IAE5BykB,iBAAkB,CAChBpgB,QAAS,OACTY,eAAgB,gBAChBE,WAAY,SACZhB,UAAW,OACXqF,aAAc3J,EAAMG,QAAQ,IAE9B0kB,UAAW,CACT1Z,YAAa,YAKZ,SAAe2Z,GACpBC,EACAlmB,EACAmmB,GAHK,gBAAAjf,EAAAC,OAAA,mDAKAnH,EALA,oEAAAkH,EAAA,MAQsB3E,MAAM,GAAD,OAAIvE,GAAJ,uBAAmC,CACjEwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEqjB,eAEtBnjB,MAAK,SAACC,GAAD,OAAmBA,EAASC,UACjCF,MAAK,SAACC,GAAD,OACJA,GAAYA,EAASyI,aAAezI,EAASyI,aAAe,KAE7DvI,OAAM,SAACC,GAAD,OAAc,MApBlB,OAQCsI,EARD,OAsBL0a,EAAe1a,GAtBV,qCAkxBP,IAMe7E,gBANS,SAACC,GACvB,MAAO,CACL9K,YAAa8K,EAAOnK,QAAQX,oBAIQO,EAAzBsK,CAAoChF,aA3vBnD,SACEjB,GAEA,IAAMkB,EAAUZ,KAEVjB,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAHnD,EAK8BC,mBAAS,IALvC,mBAKOokB,EALP,KAKgBC,EALhB,OAM8BrkB,oBAAS,GANvC,mBAMOmV,EANP,KAMgBpF,EANhB,OAO0B/P,mBAAgBwjB,IAP1C,mBAOOzhB,EAPP,KAOcuiB,EAPd,OAQ4BtkB,oBAAS,GARrC,mBAQOukB,EARP,KAQeC,EARf,OASoDxkB,oBAAS,GAT7D,mBASOykB,EATP,KAS2BC,EAT3B,OAU4D1kB,oBAAS,GAVrE,mBAUO2kB,EAVP,KAU+BC,EAV/B,OAWkClT,IAAM1R,UAAS,GAXjD,mBAWOqV,EAXP,KAWkBzE,EAXlB,OAYgCc,IAAM1R,SAAS,IAZ/C,mBAYOsV,EAZP,KAYiB3E,EAZjB,OAa8D3Q,oBAAS,GAbvE,mBAaO6kB,EAbP,KAagCC,EAbhC,OAc4D9kB,oBAAS,GAdrE,mBAcO+kB,EAdP,KAc+BC,EAd/B,KAeMC,EAAe9E,GAAgBiE,EAASrU,GAf9C,EAiBsC/P,mBAAiB,GAjBvD,mBAiBOklB,EAjBP,KAiBoBf,EAjBpB,KAmBA7jB,qBAAU,WACR,GAA4B,WAAxB2kB,EAAaziB,QACXyiB,EAAa9U,QAAS,CACxB,IAAMgV,EAASF,EAAa9U,QAE1BgV,EAAOnY,QACPmY,EAAOnY,OAAOoY,UACdD,EAAOnY,OAAOoY,SAAW,GAEzBJ,GAA0B,GAExBG,EAAOnY,QAAUmY,EAAOnY,OAAOlP,IACjCmmB,GAAiBkB,EAAOnY,OAAOlP,GAAIE,EAAOmmB,GAE5CG,EAASa,MAGZ,CAACF,EAAcjnB,IAElB,IAAMqnB,EAAW1mB,EAAM6W,MAAMC,OAAO3X,GAEpCwC,qBAAU,WACJ+kB,GAAyB,QAAbA,GACdhB,EAAWgB,KAEZ,CAACA,IAEJ/kB,qBAAU,WACR,GACEyB,IACCA,EAAMujB,QACP3mB,EAAM5E,aACN4E,EAAM5E,YAAYK,MAClBuE,EAAM5E,YAAYK,KAAK0D,GACvB,CACA,IAAMwnB,EAAS3mB,EAAM5E,YAAYK,KAAK0D,GACtCwnB,GACEhB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEPyP,iBAGL,CAAC3mB,EAAM5E,YAAagI,IAEvBzB,qBAAU,WACR,GAAKukB,GAA4B9iB,EAAjC,CAIA,GAAIA,GAASA,EAAMkJ,gBAAkB8Z,EAAwB,CAC3D,IAAMQ,EAAcxjB,EAAMkJ,eAAenJ,KAAI,SAACkI,GAC5C,IAAIwb,GAAc,EAOlB,GANIxb,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,SAAgC,OAArB/B,EAAGkC,cACnCsZ,EACExb,EAAG/J,KAAK8L,QAAQ2I,WAAa1K,EAAG/J,KAAK8L,QAAQ4H,cACtC3J,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,SAAgC,OAArB/B,EAAGkC,gBAC1CsZ,EAAcxb,EAAG/J,KAAK8L,QAAQ4I,UAAY3K,EAAG/J,KAAK8L,QAAQiI,cAExDwR,GAAexb,EAAG/J,MAAQ+J,EAAG/J,KAAK8L,QAAS,CAC7C,IAAME,EACiB,OAArBjC,EAAGkC,cACCT,WAAWzB,EAAG/J,KAAK8L,QAAQ4H,eAC3BlI,WAAWzB,EAAG/J,KAAK8L,QAAQiI,cAEjC,QAAShK,EAAGpH,MAAQqJ,EAAQjC,EAAGmC,UAAUhQ,QAAQ,GAEjD,OAAO,KAERmP,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,GAE/B,GAAI+Z,EAAc,EAAG,CACnB,IAAME,GAAiBF,EAAYppB,QAAQ,GACrCupB,EAAY3jB,EAAMkJ,eAAeC,QACrC,SAAClB,GAAD,MACc,eAAZA,EAAGmB,MAA4C,oBAAnBnB,EAAGE,eAEnC,GAAIwb,EAAU,GAAI,CAChB,GAAIA,EAAU,GAAG9iB,QAAU6iB,EAEzBE,GADY5jB,EAAMkJ,eAAemW,QAAQsE,EAAU,IACrC,eACTA,EAAU,GADD,CAEZzZ,MAAOwZ,EACP7iB,MAAO6iB,SAGN,CACL,IAAMG,EAAuB,CAC3B1b,YAAa,kBACbiC,SAAU,EACVF,MAAOwZ,EACP7iB,MAAO6iB,EACPta,KAAM,cAERmZ,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5K,eAAe,GAAD,oBAAM4K,EAAU5K,gBAAhB,CAAgC2a,WAMtDd,GAA2B,QAvDzBA,GAA2B,KAwD5B,CAACD,EAAyB9iB,EAAOgjB,IAEpC,IAAMxP,GAAmB,SACvBzS,EACA0C,GAEe,cAAXA,GAGJoL,GAAa,IA6Bf,SAAS+U,GAAe9Z,EAAa4U,GACnC6D,GAAS,SAACzO,GACR,IAAIgQ,EAAiBhQ,EAAU5K,eAG/B,OAFA4a,EAAeC,OAAOja,EAAK,EAAG4U,GAEvB,eACF5K,EADL,CAEE5K,eAAgB4a,OA6DtB,SAASE,GAAaC,EAAkB9b,GACtC,IAAM+b,EAAWxZ,KAAKC,IAAIjB,WAAW,GAAD,OAAIua,KAClC/Z,GAASga,EACTrjB,IAAUqjB,EAAWA,EAAWhqB,IAChCiqB,EAAmB,CACvBhc,cACAiC,SAAU,EACVF,OAAQR,WAAWgB,KAAKC,IAAIT,GAAO9P,QAAQ,IAC3CyG,OAAQ6I,WAAWgB,KAAKC,IAAI9J,GAAOzG,QAAQ,IAC3CgP,KAAM,UAERmZ,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5K,eAAe,GAAD,oBAAM4K,EAAU5K,gBAAhB,CAAgCib,SAuIlD,SAASxQ,GAASjH,GAChB,OAAO1M,GAASA,EAAM0M,GAAS1M,EAAM0M,GAAS,GAGhD,IAoCM0X,IACHpB,GACAhjB,GAEe,IADdA,EAAMkJ,eAAeC,QAAO,SAAClB,GAAD,MAA2B,oBAAnBA,EAAGE,eACpC1D,OAEP,OACE,yBAAKvE,UAAWpC,EAAQ0D,MACrB4R,EACC,kBAAChX,GAAD,MAEA,kBAAC4F,GAAA,EAAD,CACEC,WAAS,EACT1E,QAAS,EACTqN,UAAU,MACVC,QAAQ,SACRnI,WAAW,cAEX,kBAACV,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,yBAAKlC,UAAWpC,EAAQ8jB,QACrBgB,EACC,yBAAKnmB,MAAO,CAAEmF,QAAS,SACrB,kBAAC6F,GAAA,EAAD,CAAShF,MAAM,SACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,QACX1J,QAAS,kBAAM0iB,GAA0B,KAEzC,kBAAC,KAAD,CAAW3c,SAAS,cAGxB,kBAACsb,GAAD,CAAoBL,eA5JpC,SAA6B3c,GAC3B,GAAIA,GAASA,EAAMnD,OAAQ,CAAC,IAAD,EACYmD,EAAMnD,OAAnCtF,EADiB,EACjBA,GAAI2E,EADa,EACbA,KAAMoK,EADO,EACPA,MAAOC,EADA,EACAA,QACnB/O,EACJwI,EAAMnD,OAAO2J,MAAQxG,EAAMnD,OAAO2J,KAAKhP,MACnCwI,EAAMnD,OAAO2J,KAAKhP,MAClBwI,EAAMnD,OAAOC,mBACnBihB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEPpT,KAAMA,GAAQ,GACd1E,MAAOA,GAAS,GAChB8O,MAAOA,GAAS,GAChBC,QAASA,GAAW,GACpBoX,SAAUpmB,OAEZ8mB,GAA0B,GAC1BX,GAAiBnmB,EAAIE,EAAOmmB,QA+IlB,yBAAKliB,UAAWpC,EAAQkkB,kBACtB,kBAACva,GAAA,EAAD,CAAShF,MAAM,kBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,iBACX1J,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAK,aAElC,kBAAC,KAAD,QAIJ,wBAAI5D,MAAO,CAAEmF,QAAS,iBACnBygB,GAAuB,QAAZA,EACV,kDACa,+BAAKriB,EAAMjE,KAGxB,gBAIJ,yBAAKmE,UAAWpC,EAAQikB,SACtB,kBAACjhB,GAAA,EAAD,CACEhE,QAAQ,YACRC,MAAM,UACNoD,QAnKG,WACrBsiB,GAAU,GACV,IAAM3T,EACJuT,GAAuB,QAAZA,EAAoB,gBAAkB,gBACnD7jB,MAAM,GAAD,OAAIvE,IAAJ,OAAe6U,GAAQ,CAC1BrQ,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUkB,KAEpBhB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAASolB,UACXrkB,GACEA,EAAMiL,QACNjL,EAAMiL,OAAOlP,IACbmmB,GAAiBliB,EAAMiL,OAAOlP,GAAIE,EAAOmmB,GAC3CvT,GAAa,GACbD,EAAY,iBACR3P,EAASe,MAAMjE,IAAQsmB,GAAuB,QAAZA,GACpCzlB,EAAMwD,QAAQmU,QAAd,uBAAsCtV,EAASe,MAAMjE,SAI1D8H,SAAQ,kBAAM4e,GAAU,OA0IT1d,SAAUyd,EACV3d,WAAS,GALX,SAUF,6BACE,kBAAC4C,GAAA,EAAD,CAAShF,MAAM,oBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,mBACX1J,QAAS,kBAAM0iB,GAA0B,KAEzC,kBAAC,IAAD,WAQM,QAAjB7iB,EAAMS,QAAqC,iBAAjBT,EAAMS,QAC/B,kBAAClE,GAAA,EAAD,CAAKQ,MAAM,cACT,kBAACF,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,SAAvC,SAGA,kBAAC/E,GAAA,EAAD,CAAYC,QAAQ,QAAQ8E,QAAQ,QAAQ5E,cAAY,GAAxD,6FAMHgD,EAAMiL,QAAUjL,EAAMiL,OAAOoY,UAC5B,kBAAC9mB,GAAA,EAAD,CAAKQ,MAAM,aACT,kBAACF,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,QAAQ5E,cAAY,GAA3D,uBACuB,IACrB,2BACGgD,EAAMiL,OAAOoY,SAAU,IACvBrjB,EAAMiL,OAAOqZ,eAAb,WACKtkB,EAAMiL,OAAOqZ,cADlB,QAMQ,IAAhBnB,GACC,kBAAC5mB,GAAA,EAAD,CAAKQ,MAAM,aACT,kBAACF,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,QAAQ5E,cAAY,GAA3D,2BAEE,kBAACyK,GAAA,EAAD,CAAShF,MAAM,sBACb,kBAAC3B,GAAA,EAAD,CACE+I,aAAW,qBACXpK,KAAK,QACLU,QAAS,kBApR7B,WACE,IAAMS,EACJZ,GAASA,EAAMY,SAAWZ,EAAMY,SAAW8J,KAAKC,IAAIwY,GAChDoB,EAAM7Z,KAAKC,IAAIwY,IAAgBviB,GAAYA,EAAWuiB,EACtDU,EAAuB,CAC3B1b,YAAa,eACbiC,SAAU,EACVF,MAAOqa,EACP1jB,MAAO0jB,EACPnb,KAAM,cAERmZ,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5K,eAAe,GAAD,oBAAM4K,EAAU5K,gBAAhB,CAAgC2a,SAuQfW,KAEdrB,MAMX,0BAAMjjB,UAAWpC,EAAQwE,KAAMmiB,YAAU,EAACC,aAAa,OACrD,kBAAChgB,GAAA,EAAD,CACEC,MAAM,OACNvM,KAAK,OACL8H,UAAWpC,EAAQ4jB,UACnB7c,WAAS,EACTL,MAAOxE,EAAMU,KACbmT,SAAU,SAAC9S,GACTA,EAAM4jB,UACNpC,GAAS,SAACviB,GAAD,sBAAiBA,EAAjB,CAAwBU,KAAMK,EAAMmD,OAAOM,cAGxD,kBAACE,GAAA,EAAD,CACEC,MAAM,QACNvM,KAAK,QACL8H,UAAWpC,EAAQ4jB,UACnB7c,WAAS,EACTL,MAAOxE,EAAMhE,MACb6X,SAAU,SAAC9S,GACTA,EAAM4jB,UACNpC,GAAS,SAACviB,GAAD,sBAAiBA,EAAjB,CAAwBhE,MAAO+E,EAAMmD,OAAOM,cAGzD,kBAACE,GAAA,EAAD,CACEC,MAAM,QACNvM,KAAK,QACL8H,UAAWpC,EAAQ4jB,UACnB7c,WAAS,EACTL,MAAOxE,EAAM8K,MACb+I,SAAU,SAAC9S,GACTA,EAAM4jB,UACNpC,GAAS,SAACviB,GAAD,sBAAiBA,EAAjB,CAAwB8K,MAAO/J,EAAMmD,OAAOM,cAGzD,kBAACE,GAAA,EAAD,CACEC,MAAM,UACNvM,KAAK,OACL8H,UAAWpC,EAAQ4jB,UACnB7c,WAAS,EACTL,MAAOxE,EAAM+K,QACb8I,SAAU,SAAC9S,GACTA,EAAM4jB,UACNpC,GAAS,SAACviB,GAAD,sBACJA,EADI,CAEP+K,QAAShK,EAAMmD,OAAOM,cAI5B,kBAACE,GAAA,EAAD,CACEC,MAAM,QACNzE,UAAWpC,EAAQ4jB,UACnBvN,WAAS,EACTE,QAAQ,KACRxP,WAAS,EACTL,MAAOxE,EAAMkL,MACb2I,SAAU,SAAC9S,GACTA,EAAM4jB,UACNpC,GAAS,SAACviB,GAAD,sBAAiBA,EAAjB,CAAwBkL,MAAOnK,EAAMmD,OAAOM,cAIzD,kBAACuP,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ2C,QACxC,kBAACuT,GAAA,EAAD,CAAYjY,GAAG,6BAAf,UACA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,4BACRnY,GAAG,sBACHyI,MAAOmP,GAAS,UAChBE,SA5NW,SACzB9S,GAKAwhB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEPrT,OAAQM,EAAMmD,OAAOM,aAsNRuN,OAAOe,KAAKzY,IAAgB0F,KAAI,SAACU,GAAD,OAC/B,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,iBAAYQ,GAAU+D,MAAO/D,GACvCpG,GAAeoG,SAKxB,kBAACsT,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ2C,QACxC,kBAACuT,GAAA,EAAD,CAAYjY,GAAG,+BAAf,kBAGA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,8BACRnY,GAAG,wBACHyI,MAAOmP,GAAS,kBAChBE,SAjOkB,SAChC9S,GAKAwhB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP7S,eAAgBF,EAAMmD,OAAOM,aA2NhBuN,OAAOe,KAAKlY,IAAkBmF,KAAI,SAACU,GAAD,OACjC,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,iBAAYQ,GAAU+D,MAAO/D,GACvC7F,GAAiB6F,SAK1B,kBAACsT,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ2C,QACxC,kBAACuT,GAAA,EAAD,CAAYjY,GAAG,gCAAf,mBAGA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,+BACRnY,GAAG,yBACHyI,MAAOmP,GAAS,mBAChBE,SAtOmB,SACjC9S,GAKAwhB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5S,gBAAiBH,EAAMmD,OAAOM,aAgOjBuN,OAAOe,KAAK7X,IAAmB8E,KAAI,SAACU,GAAD,OAClC,kBAACgP,GAAA,EAAD,CAAUxP,IAAG,mBAAcQ,GAAU+D,MAAO/D,GACzCxF,GAAkBwF,WAO/B,kBAACuB,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,6BACGsgB,EACC,yBAAKjmB,MAAO,CAAEmF,QAAS,SACrB,kBAAC6F,GAAA,EAAD,CAAShF,MAAM,SACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,QACX1J,QAAS,kBAAMwiB,GAAsB,KAErC,kBAAC,KAAD,CAAWzc,SAAS,cAGxB,kBAACqa,GAAD,CAAsBY,eA3gBtC,SAAuB3c,GACrB,GAAKA,EAAL,CADgE,IAIxDwF,EAAYxF,EAAZwF,QACR,GAAIxF,GAASA,EAAM9D,MAAQsJ,EAAS,CAClC,IAAM4a,EAAqB,CACzBzc,YAAY,GAAD,OAAK6B,EAAQtJ,KAAb,YAAqBsJ,EAAQ7B,aACxCiC,SAAU,EACVD,cAAe,KACfD,MAAOR,WAAWM,EAAQ2I,UAC1B9R,MAAO6I,WAAWM,EAAQ2I,UAC1BvJ,KAAM,UACNpI,OAAQgJ,EAAQhJ,OAChB9C,KAAM,CAAE8L,YAEVuY,GAAS,SAACviB,GAAD,sBACJA,EADI,CAEPW,WACEX,EAAMkJ,eAAeC,QAAO,SAAClB,GAAD,MAAoB,YAAZA,EAAGmB,QAAoB3E,OAAS,EACtEyE,eAAe,GAAD,oBAAMlJ,EAAMkJ,gBAAZ,CAA4B0b,SAE5C7B,GAA2B,SAwfjB,oCACE,kBAACjiB,GAAA,EAAD,CACE+I,aAAW,iBACXpK,KAAK,QACLU,QAAS,kBAAMwiB,GAAsB,KAErC,kBAAC,KAAD,MALF,cASA,kBAAC7hB,GAAA,EAAD,CACE+I,aAAW,iBACXpK,KAAK,QACLU,QA9dlB,SAA0BY,GACxB,IAAM8iB,EAAuB,CAC3B1b,YAAa,iBACbiC,SAAU,EACVF,MAAO,EACPrJ,MAAO,EACPuI,KAAM,cAERmZ,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5K,eAAe,GAAD,oBAAM4K,EAAU5K,gBAAhB,CAAgC2a,WAsdhC,kBAAC,KAAD,MALF,cASCO,IACC,kBAACtjB,GAAA,EAAD,CACE+I,aAAW,sBACXpK,KAAK,QACLU,QAAS,WACP8iB,GAA0B,GAC1BF,GAA2B,KAG7B,kBAAC,KAAD,MARF,mBAaF,kBAACjiB,GAAA,EAAD,CACE+I,aAAW,cACXpK,KAAK,QACLU,QAvelB,SAAuBY,GACrB,IAAMmJ,EAAQR,WAAW1J,EAAMa,MAAMzG,QAAQ,MAAQ,EAC/CiQ,EAAoB,CACxBlC,YAAa,UACbiC,SAAU,EACVF,OAAQA,EACRrJ,OAAQqJ,EACRd,KAAM,WAERmZ,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEP5K,eAAe,GAAD,oBAAM4K,EAAU5K,gBAAhB,CAAgCmB,WA8dhC,kBAAC,KAAD,MALF,WASA,kBAACvJ,GAAA,EAAD,CACE+I,aAAW,aACXpK,KAAK,QACLU,QAjelB,SAA2BY,GACzBijB,IAAc,EAAG,YAkeD,kBAAC,KAAD,MALF,UASA,kBAACljB,GAAA,EAAD,CACE+I,aAAW,gBACXpK,KAAK,QACLU,QAhclB,SAAsBY,GACpBvC,MAAM,GAAD,OAAIvE,GAAJ,wBAAoC,CACvCwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEujB,QAASriB,EAAMjE,OAErCiD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAASolB,QACXzV,EAAY,oBAAD,OAAqB5O,EAAMhE,QAEtC4S,EAAY,iCAAD,OAAkC5O,EAAMhE,WAGtDmD,OAAM,SAACwE,GACNtE,QAAQC,KAAK,uCAAwCqE,GACrDiL,EAAY,oCAEb/K,SAAQ,kBAAMgL,GAAa,QA6ad,kBAAC,KAAD,CAAW3O,UAAWpC,EAAQmkB,YALhC,mBAWN,kBAAC,GAAD,CACEhZ,WAAYjJ,EAAMkJ,eAClBoW,kBAziBZ,SAA2BxV,EAAa4U,GACtCkF,GAAe9Z,EAAK4U,GACpBqE,GAA2B,IAwiBjB1Q,eAtiBZ,SAAwBvI,GACtB,GAAIA,GAAO,EAAG,CACZ,IAAM7B,EAAKjI,EAAMkJ,eAAeY,GAChB,eAAZ7B,EAAGmB,MAA4C,oBAAnBnB,EAAGE,aACjC8a,GAA0B,GAG9BV,GAAS,SAACzO,GACR,IAAMgQ,EAAiBhQ,EAAU5K,eACjC4a,EAAeC,OAAOja,EAAK,GAC3B,IAAMnJ,EAAamjB,EAAe3a,QAAO,SAAClB,GAAD,MAAoB,YAAZA,EAAGmB,QACjD3E,OACH,OAAO,eACFqP,EADL,CAEEnT,aACAuI,eAAgB4a,QAwhBV7E,cAnYZ,SAAuB4F,GACrBxlB,QAAQuE,IAAI,qBAAsBihB,GAClCtC,GAAS,SAACzO,GACR,IAAMgR,EAAkBhR,EAAU5K,eAAeC,QAC/C,SAAClB,GAAD,MAAoB,QAAZA,EAAGmB,QAGb,OAAO,eACF0K,EADL,CAEE5K,eAAe,GAAD,oBACT4b,GADS,CAEZ,CACE1b,KAAM,MACNjB,YAAY,OAAD,OAAShO,IACpBiQ,SAAU,EACVF,MAAO2a,EACPhkB,MAAOgkB,WAoXL3F,cAtWZ,SAAuBre,GACrB0hB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEPjT,cAoWQse,iBA9WZ,SAA0Bve,GACxB2hB,GAAS,SAACzO,GAAD,sBACJA,EADI,CAEPlT,iBA4WQ6e,yBApeZ,SAAkCf,GAChCsF,GAAatF,EAAU7d,MAAX,wBAAmC6d,EAAUvW,YAA7C,WAweV,kBAACwN,GAAA,EAAD,CACEzG,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdjD,KAAMmH,EACNsC,iBAAkB,IAClBxF,QAASoD,GACTqC,aAAc,CACZ,mBAAoB,cAEtBnS,QAAS,0BAAM3H,GAAG,cAAcwX,GAChCpb,OAAQ,CACN,kBAACga,GAAA,EAAD,CAAYlS,IAAI,QAAQ4J,aAAW,QAAQ1J,QAASqT,IAClD,kBAAC,KAAD,eCn3BNtW,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJC,QAASrE,EAAMG,QAAQ,GACvBwG,SAAU,QACVrC,UAAW,cA6IF7D,oBAxIf,SAAiBjB,GACf,IAAMkB,EAAUZ,KACVkO,EAAWC,sBAEXpP,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAE7C+mB,EAAkB,CACtBpZ,KAAM,MACNC,QAAS,iBACTC,cAAc,EACd1L,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAK,kBAG9B6Z,EAAe,CACnBtO,QAAS,gBACTD,KAAM,SACNxL,QAAS,SAACwD,EAAQtC,GAChB,IAAIF,EAOJ,IALEA,EADEqV,MAAMC,QAAQpV,GACNA,EAEA,CAACA,KAGsB,IAAnBF,EAAQsD,OAAxB,CAGA,IAAM1I,EAAKoF,EAAQ,GAAGpF,GAClBmQ,OAAOmE,QAAP,iDACF7R,MAAM,GAAD,OAAIvE,GAAJ,WAAuB,CAC1BwE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAE/C,SAEtBiD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,kBAAMoM,EAAS8K,SAAW9K,EAAS8K,QAAQC,mBAChDhX,OAAM,SAACC,GAAD,OAASC,QAAQC,KAAK,kCAAmCF,SAKlEkN,EAAa,CACjBX,KAAM,OACNC,QAAS,cACTzL,QAAS,SAACwD,EAAQxC,GAChB,IAAIE,GAEFA,EADEmV,MAAMC,QAAQtV,GACPA,EAAQ,GAERA,GAEJpF,IAAMa,EAAMwD,QAAQC,KAAd,mBAA+BgB,EAAOtF,OAIvD,OACE,yBAAKmE,UAAWpC,EAAQ0D,MACtB,kBAAC,KAAD,CACE4J,SAAUA,EACVqB,QAAS,CACP,CACEhK,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNuU,WAAW,EACX/G,OAAQ,SAACQ,GAAD,OACNA,EAAI9F,WAAa,IAAIC,KAAK6F,EAAI9F,WAAWE,mBAE7C,CACEiC,MAAO,qBACPiK,MAAO,qBACPtU,KAAM,SACNuU,WAAW,GAEb,CAAElK,MAAO,OAAQiK,MAAO,OAAQtU,KAAM,SAAUuU,WAAW,GAC3D,CAAElK,MAAO,QAASiK,MAAO,QAAStU,KAAM,SAAUuU,WAAW,GAC7D,CACElK,MAAO,UACPiK,MAAO,UACPtU,KAAM,SACNuU,WAAW,GAEb,CAAElK,MAAO,WAAYiK,MAAO,WAAYtU,KAAM,UAC9C,CAAEqK,MAAO,gBAAiBiK,MAAO,gBAAiBtU,KAAM,UACxD,CAAEqK,MAAO,YAAaiK,MAAO,YAAatU,KAAM,UAChD,CAAEqK,MAAO,SAAUiK,MAAO,SAAUtU,KAAM,UAC1C,CAAEqK,MAAO,OAAQiK,MAAO,cAAetU,KAAM,UAE7C,CACEqK,MAAO,UACPiK,MAAO,YACPtU,KAAM,WACNyU,QAAQ,GAEV,CAAEpK,MAAO,KAAMiK,MAAO,KAAMtU,KAAM,SAAUyU,QAAQ,IAEtD3O,KAAM,SAAC4O,GAAD,OACJ,IAAIzJ,SAAQ,SAACC,EAASyJ,GACpBvO,MAAM,GAAD,OAAIvE,GAAJ,YAAwB,CAC3BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAUgO,KAEpB9N,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACqI,GACL/D,EAAQ+D,MAETlI,OAAM,SAACC,GAEN,OADAC,QAAQC,KAAKF,GACNkE,EAAQ,CAAEpF,KAAM,GAAIC,KAAM,EAAGC,WAAY,WAIxDqE,MAAM,UACN2K,QAAS,CACPC,YAAa,CAAEC,SAAU,SAAUC,IAAK,GACxCC,cAAe,6BACfzO,SAAU,GACV0O,gBAAiB,CAAC,GAAI,IAAK,KAC3BC,iBAAkB,IAClBf,WAAW,EACXtH,QAAQ,EACRsI,qBAAqB,GAEvBpB,QAAS,CAACwY,EAAiB7K,EAAc5N,S,oBCxH3C0Y,GAAsB,CAC1BjpB,GAAI,MACJuF,mBAAoB,GACpBZ,KAAM,GACNoK,MAAO,GACPC,QAAS,GACTsY,SAAU,EACViB,cAAe,GACf/iB,UAAW,EACXmG,aAAc,EACdud,OAAQ,EACRC,YAAa,GACbhnB,KAAM,IAGFhB,GAAYC,aAAW,SAACC,GAAD,aAC3BkL,YAAa,CACX9G,KAAM,CACJoB,OAAQxF,EAAMG,QAAQ,GACtBkE,QAASrE,EAAMG,QAAQ,IAEzBoL,SAAU,CACR/F,OAAQxF,EAAMG,QAAQ,EAAG,IAE3BqkB,QAAM,oBACHxkB,EAAMykB,YAAYC,GAAG,MAAQ,CAC5BxU,SAAU,SACVC,IAAK,MAHH,wBAKI,GALJ,iCAManQ,EAAMpE,QAAQ0E,WAAWiE,OANtC,uBAOG,QAPH,GASNwjB,aAAc,CACZjf,SAAU,SACVzI,gBAAiBL,EAAMpE,QAAQ0E,WAAWiE,YAoYjC9D,oBA1Wf,SAAoBjB,GAClB,IAAMkB,EAAUZ,KADiD,EAEvBe,oBAAS,GAFc,mBAE1DmnB,EAF0D,KAE3CC,EAF2C,OAGnCpnB,oBAAS,GAH0B,mBAG1DmV,EAH0D,KAGjDpF,EAHiD,OAKvC/P,mBAAS,IAL8B,mBAK1D3F,EAL0D,KAKnDuD,EALmD,OAMjCoC,mBAAS,IANwB,mBAM1DgB,EAN0D,KAMhD+d,EANgD,KAO3DsI,EAAW1oB,EAAM6W,MAAMC,OAAO3X,GAP6B,EASrCkC,mBAAiB+mB,IAToB,mBAS1D3jB,EAT0D,KASlDkkB,EATkD,OAUvBtnB,oBAAS,GAVc,mBAU1DunB,EAV0D,KAU3CC,EAV2C,OAW3BxnB,mBAAS,GAXkB,mBAW1DklB,EAX0D,KAW7Cf,EAX6C,OAYrCnkB,mBAAkB,IAZmB,mBAY1DI,EAZ0D,KAYlDC,EAZkD,KAc3DrC,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAsEnD,OApEAO,qBAAU,WACH+mB,GAAyB,cAAbA,IAIA,QAAbA,GACFC,EAAUP,IACVK,GAAiB,KAEjB7mB,MAAM,GAAD,OAAIvE,GAAJ,YAAwB,CAC3BwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CACnB4mB,QAAS,CACP,CACEC,OAAQ,CACNjZ,MAAO,MAETlI,MAAO8gB,QAKZtmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAELsmB,EAAUtmB,EAASf,KAAK,OAEzBiB,OAAM,SAACC,GAAD,OAASmmB,EAAUP,OACzBnhB,SAAQ,kBAAMwhB,GAAiB,MAClCnD,GAAiBoD,EAAUrpB,EAAOmmB,GAtExC,SACED,EACAlmB,EACAqC,GAHF,SAAA6E,EAAAC,OAAA,mDAKOnH,EALP,oEAAAkH,EAAA,MAQuB3E,MAAM,GAAD,OAAIvE,GAAJ,wBAAoC,CAC5DwE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEqjB,eAEtBnjB,MAAK,SAACC,GAAD,OAAmBA,EAASC,UACjCC,OAAM,SAACC,GAAD,MAAc,OAjBzB,OAQQf,EARR,OAkBEC,EAAUD,GAlBZ,qCAuEMunB,CAAkBN,EAAUrpB,EAAOqC,OAEpC,CAACgnB,EAAUrpB,IAiCZ,kBAACoG,GAAA,EAAD,CAAOnC,UAAWpC,EAAQ0D,MACvB4jB,EACC,kBAAChpB,GAAD,MAEA,kBAAC4F,GAAA,EAAD,CACEC,WAAS,EACT1E,QAAS,EACTqN,UAAU,MACVC,QAAQ,SACRnI,WAAW,cAEX,kBAACV,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,GACb,yBACEnX,MAAO,CACLmF,QAAS,OACTc,WAAY,SACZhB,UAAW,QAEbxB,UAAWpC,EAAQ8jB,QAEnB,kBAACna,GAAA,EAAD,CAAShF,MAAM,mBACb,kBAAC0P,GAAA,EAAD,CACEtI,aAAW,kBACX1J,QAAS,kBAAMvD,EAAMwD,QAAQC,KAAK,cAElC,kBAAC,KAAD,QAIJ,4BAAkB,QAAbilB,EAAqB,SAAW,OAArC,YAGF,kBAAC5gB,GAAA,EAAD,CACEC,MAAM,QACNE,WAAS,EACTL,MAAOnD,EAAOC,mBACdpB,UAAWpC,EAAQ6K,SACnBkL,SAAU,SACR9S,GAEAA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERvkB,mBAAoBP,EAAMmD,OAAOM,cAIvC,kBAACE,GAAA,EAAD,CACEC,MAAM,OACNE,WAAS,EACTL,MAAOnD,EAAOX,KACdR,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERnlB,KAAMK,EAAMmD,OAAOM,cAIzB,kBAACE,GAAA,EAAD,CACEC,MAAM,QACNE,WAAS,EACTL,MAAOnD,EAAOyJ,MACd5K,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAER/a,MAAO/J,EAAMmD,OAAOM,cAI1B,kBAACE,GAAA,EAAD,CACEC,MAAM,UACNE,WAAS,EACTL,MAAOnD,EAAO0J,QACd7K,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAER9a,QAAShK,EAAMmD,OAAOM,cAI5B,kBAACE,GAAA,EAAD,CACEC,MAAM,WACNE,WAAS,EACTL,MAAOnD,EAAOgiB,SACdjrB,KAAK,SACL8H,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERxC,SAAU3Z,WAAW3I,EAAMmD,OAAOM,eAIxC,kBAACE,GAAA,EAAD,CACEC,MAAM,gBACNE,WAAS,EACTL,MAAOnD,EAAOijB,cACdpkB,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERvB,cAAevjB,EAAMmD,OAAOM,cAKlC,kBAACE,GAAA,EAAD,CACEC,MAAM,YACNE,WAAS,EACTL,MAAOnD,EAAOE,UACdnJ,KAAK,SACL8H,UAAWpC,EAAQ6K,SACnBkL,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERtkB,UAAWmI,WAAW3I,EAAMmD,OAAOM,eAKzC,kBAACE,GAAA,EAAD,CACEC,MAAM,eACNE,WAAS,EACTL,MAAOnD,EAAOqG,aACdxH,UAAWpC,EAAQ6K,SACnBvQ,KAAK,SACLklB,WAAW,kEAEb,kBAAC5Y,GAAA,EAAD,CACEC,MAAM,SACNE,WAAS,EACTL,MAAOnD,EAAO4jB,OACd/kB,UAAWpC,EAAQ6K,SACnBvQ,KAAK,SACLyb,SAAU,SAAC9S,GACTA,EAAM4jB,UACNY,GAAU,SAACM,GAAD,sBACLA,EADK,CAERZ,OAAQvb,WAAW3I,EAAMmD,OAAOM,eAKtC,kBAACuP,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ6K,UACxC,kBAACqL,GAAA,EAAD,CAAYjY,GAAG,gCAAf,QACA,kBAACkY,GAAA,EAAD,CACEC,QAAQ,+BACRnY,GAAG,yBACHyI,MAAOnD,EAAO6jB,YACdrR,SAAU,SAAC9S,GAAD,OACRA,EAAMmD,QACNnD,EAAMmD,OAAOM,OACb+gB,GAAU,SAACM,GAAD,sBACLA,EADK,CAERX,YAAankB,EAAMmD,OAAOM,aAI9B,kBAACiL,GAAA,EAAD,CAAUjL,MAAM,mBAAhB,kBACA,kBAACiL,GAAA,EAAD,CAAUjL,MAAM,iBAAhB,gBACA,kBAACiL,GAAA,EAAD,CAAUjL,MAAM,mBAAhB,oBAIJ,kBAACuP,GAAA,EAAD,CAAalP,WAAS,EAAC3E,UAAWpC,EAAQ6K,UACxC,kBAACmd,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEnS,SAAU,SACR9S,EACAklB,GAEAR,EAAiBQ,IAEnBzhB,MAAM,kBAGVG,MAAM,iBAIV,yBAAKzE,UAAWpC,EAAQ6K,UACtB,kBAAC7H,GAAA,EAAD,CACEiE,SAAUqO,EACVjT,QAAS,kBAhOvB,WACEtE,EAAS,IACTmhB,EAAY,IACZhP,GAAW,GAEX,IAAMc,EAAoB,QAAbwW,EAAqB,UAAY,UAE9C9mB,MAAM,GAAD,OAAIvE,GAAJ,kBAAsB6U,GAAQ,CACjCrQ,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,IAE3B2C,KAAMC,KAAKC,UAAU,CAAEuC,SAAQmkB,oBAE9BxmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACDA,EAAS3G,MACXuD,EAASoD,EAASsE,KAElByZ,EAAY/d,EAASsE,QAGxBpE,OAAM,SAACC,GACNC,QAAQC,KAAK,qBAAsBF,GACnCvD,EAASuD,EAAI+e,eAEdta,SAAQ,kBAAMmK,GAAW,MAqMDkY,IACfppB,QAAQ,YACRC,MAAM,UACN8H,WAAS,GAEK,QAAbygB,EAAqB,SAAW,UAKvC,kBAACtjB,GAAA,EAAD,CAAME,MAAI,EAAC0R,GAAI,EAAG1T,UAAWpC,EAAQ8jB,OAAQuE,cAAY,GACtD/S,GAAW,kBAAChX,GAAD,MACX9D,GACC,yBAAK4H,UAAWpC,EAAQ6K,UACtB,+CACA,2BAAIrQ,IAGP2G,GACC,yBAAKiB,UAAWpC,EAAQ6K,UACtB,wCACA,2BAAI1J,IAIPoC,GAAUA,EAAOnD,MAChB,4BACG6T,OAAOe,KAAKzR,EAAOnD,MAAM6B,KAAI,SAAC0a,GAAD,OAC5B,kBAAC,IAAMlb,SAAP,CAAgBU,IAAG,oBAAewa,IAChC,4BAAKA,GACL,4BAAKpZ,EAAOnD,KAAKuc,SAMR,IAAhB0I,GACC,kBAAC5mB,GAAA,EAAD,CAAKQ,MAAM,aACT,kBAACF,GAAA,EAAD,CAAYC,QAAQ,WAAW8E,QAAQ,QAAQ5E,cAAY,GAA3D,4BAC4BmmB,IAK/B9kB,EAAOoG,OAAS,GACf,kBAAC6C,EAAA,EAAD,CACE5N,UAAU,MACVmQ,aAAW,gBACXrC,UACE,kBAACzN,EAAA,EAAD,CACEL,UAAU,KACVwG,UAAWpC,EAAQqnB,cAFrB,WAIW9mB,EAAOoG,OAJlB,MAQDpG,EAAO0B,KAAI,SAACC,GAAD,OACV,kBAACxG,EAAA,EAAD,CACEyG,IAAKD,EAAMjE,GACXtC,QAAM,EACN8Q,KAAI,uBAAkBvK,EAAMjE,IAC5BoE,QAAS,kBACPvD,EAAMwD,QAAQC,KAAd,uBAAmCL,EAAMjE,OAG3C,kBAACjC,EAAA,EAAD,CACEb,QAAO,WAAM+G,EAAMjE,GAAZ,aAAmBiE,EAAMa,MAAzB,aAAmCb,EAAMW,WAAzC,KACPxH,UACE6G,EAAMM,WACN,IAAIC,KAAKP,EAAMM,WAAWE,8BCnY5CtD,GAAYC,aAAW,SAACC,GAAD,OAC3BkL,YAAa,CACX9G,KAAM,CACJE,UAAW,SAEb0kB,IAAK,CAEH/J,OAAQjf,EAAMif,OAAOgK,UACrBzkB,QAAS,OAGTc,WAAY,SACZ4K,SAAU,QAGVC,IAAK,QACL+Y,KAAM,QACNC,WAAY,oBACZ,QAAS,CACP3kB,QAAS,QAEX,UAAW,CACT2L,KAAM,EACN+Y,MAAO,IAET,cAAe,CACb1kB,QAAS,iBAGb4kB,OAAQ,CACNjkB,MAhCc,IAiCdkkB,WAAY,GAEdC,YAAa,CACXnkB,MApCc,KAsChB5G,QAAS,CACPgrB,UAAW,SACXzgB,SAAU,QACVmR,SAAU,EACVuP,UAAW,SACX9kB,cAAe,SACfF,QAAS,OACTY,eAAgB,YAElBwE,QAAS,CACPG,WAAY,aA+PlB,IAqBetE,gBArBS,SACtBC,GAEA,MAAO,CACL9K,YAAa8K,EAAOnK,QAAQX,YAC5BQ,mBAAoBsK,EAAOrK,YAAYD,uBAIhB,SACzBwK,GAEA,MAAO,CACL6jB,aAAc,kBAAM7jB,GhClUf,SAAOA,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,GACxBN,EAAS9K,IAAW,IAGpB,IAAM+D,EAAQ8B,cAAgBA,aAAaC,QAAQ,SAEnD,IAAK/B,EAKH,OAHA+G,EAAS9K,IAAW,IACpB8K,EAASpH,GAAIE,UACbwH,IAIF9E,MAAM,GAAD,OAAIvE,GAAJ,kBAA8B,CACjCyE,QAAS,CAAEC,cAAc,UAAD,OAAY1C,MAEnC+C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAEgB,OAAjBA,EAASsE,KAAgBtE,EAAS5G,KACpC2K,EAASpH,GAAIqD,EAAS5G,OAEtB2K,EAASpH,GAAIE,QAGhBqD,OAAM,SAACC,GACNC,QAAQC,KAAK,4BAA6BF,GAE1C4D,EAASpH,GAAIE,QAEd+H,SAAQ,WACPb,EAAS9K,IAAW,IACpBoL,WAlCD,yCgCmULwjB,eAAgB,kBAAM9jB,G/BtUjB,SAAOA,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,EAASyjB,GACjC/jB,EAAS9K,IAAW,IAEpB,IAAMO,EAAcsF,cAAgBA,aAAaC,QAAQ,eAKvDgF,EAASpH,GAHNnD,EAGUoG,KAAK6V,MAAMjc,GAFXyD,KAIf8G,EAAS9K,IAAW,IACpBoL,QAZG,yC+BuUL0jB,eAAgB,SAACvuB,GAAD,OACduK,E/BvTwB,SAC5BvK,GAEA,OAAO,SAAOuK,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,EAASyjB,GACjC/jB,EAAS9K,IAAW,IAEfO,GAGHsF,cACEA,aAAayF,QAAQ,cAAe3E,KAAKC,UAAUrG,IACrDuK,EAASpH,GAAInD,KAJbuK,EAASpH,GAAIM,KAMf8G,EAAS9K,IAAW,IACpBoL,QAZG,sC+BoTM0jB,CAAevuB,KAC1BwuB,OAAQ,kBAAMjkB,GhC5MT,SAAOA,GAAP,UAAAG,EAAAC,OAAA,yEACE,IAAIC,SAAc,SAACC,GACxBN,EAAS9K,IAAW,IAEpB,IAAM+D,EAAQ8B,cAAgBA,aAAaC,QAAQ,SACnDQ,MAAM,GAAD,OAAIvE,GAAJ,WAAuB,CAC1BwE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY1C,MAG1BkD,MAAME,QAAQC,MACduE,SAAQ,WACP9F,cAAgBA,aAAampB,WAAW,SACxClkB,EAASpH,GAAIE,KACbkH,EAAS9K,IAAW,IACpBoL,WAjBD,4CgCgNMT,EAtQR,SAAajG,GAAe,IAAD,EACFqB,oBAAS,GADP,mBACzBmV,EADyB,KAChBpF,EADgB,OAEQ/P,mBAAyB,MAFjC,mBAEzBkpB,EAFyB,KAEXC,EAFW,KAO9BP,EAKEjqB,EALFiqB,aACA7uB,EAIE4E,EAJF5E,YACA8uB,EAGElqB,EAHFkqB,eACAtuB,EAEEoE,EAFFpE,mBACAwuB,EACEpqB,EADFoqB,eAGFzoB,qBAAU,WACRuoB,GAAkBA,MACjB,CAACA,IAEJvoB,qBAAU,WAEN/F,IACCA,EAAmBN,YACpBM,EAAmBC,aAEE,OAAjB0uB,GACFC,EAC+C,SAA7C5uB,EAAmBC,YAAY0D,aAKpC,CAAC3D,IAEJ+F,qBAAU,WAEN/F,GACAA,EAAmBC,aAC2B,SAA7CD,EAAmBC,YAAY0D,YAC9BgrB,GAEFH,EAAe,CAAE7qB,UAAWgrB,EAAe,OAAS,YAGrD,CAACA,IAEJ5oB,qBAAU,WACRsoB,GAAgBA,MACf,CAACA,IAEJtoB,qBAAU,WACJvG,IACDA,EAAYE,YAAcF,EAAYK,MAAQ2V,GAAW,KAE3D,CAAChW,IAEJ,IAAM8F,EAAUZ,KAvDgB,EAwDRyS,IAAM1R,UAAS,GAxDP,mBAwDzBkO,EAxDyB,KAwDnBqU,EAxDmB,KA0D1BpjB,EACJ5E,GACAA,EAAmBC,aAC0B,SAA7CD,EAAmBC,YAAY0D,UAC3BrD,EACAQ,EAEN,OACE,kBAAC+tB,EAAA,EAAD,CAAejqB,MAAOA,GACpB,kBAACkqB,EAAA,EAAD,MAEA,kBAAC,IAAD,KACE,yBAAKpnB,UAAWpC,EAAQ0D,MACtB,kBAAC8lB,EAAA,EAAD,MAECtvB,GACCA,EAAYK,MACc,UAA1BL,EAAYK,KAAKyL,MACf,yBAAK5D,UAAWpC,EAAQsoB,KAStB,kBAACmB,EAAA,EAAD,CACExqB,MAAM,YACN8M,aAAW,OACX1J,QAAS,kBAAMqgB,GAAQ,KAEvB,kBAAC,IAAD,QAKPxoB,GACCA,EAAYK,MACc,UAA1BL,EAAYK,KAAKyL,MACf,kBAAC0jB,EAAA,EAAD,CACE1pB,QAAS,CACP6D,MAAO8lB,YAAK3pB,EAAQ4oB,cAEtBtW,QAAS,kBAAMoQ,GAAQ,IACvBrU,KAAMA,GAEN,kBAAC7E,EAAA,EAAD,CAAMnH,QAAS,kBAAMqgB,GAAQ,KAASjnB,IAEtC,kBAAC2d,EAAA,EAAD,MACA,kBAAC1d,EAAA,EAAD,CACEC,QAAM,EACN0G,QAAS,kBAAMinB,GAAgB,SAACM,GAAD,OAAWA,OAE1C,kBAAC5tB,EAAA,EAAD,KACE,yBACE2C,MAAO,CACLmF,QAAS,OACTY,eAAgB,gBAChBE,WAAY,WAGd,4CACA,kBAAC,IAAD,CACEujB,QACmB,OAAjBkB,QAA0C5uB,IAAjB4uB,GAErBA,EAEN3iB,MAAM,eACNkZ,WAAY,CAAE,aAAc,2BAKpC,kBAACxG,EAAA,EAAD,MACA,kBAAC1d,EAAA,EAAD,CAAUC,QAAM,EAAC0G,QAAS,kBAAMvD,EAAMqqB,WACpC,kBAACptB,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEb,QAAQ,UACRE,UACE,0BACEsD,MAAO,CACLmF,QAAS,QACT+lB,aAAc,WACdC,SAAU,WAGX5vB,GAAeA,EAAYK,KACxBL,EAAYK,KAAK2D,MACjB,OAOZ,yBAAKkE,UAAWpC,EAAQnC,SACtB,8BAAOJ,MAKf,0BAAM2E,UAAWpC,EAAQkJ,SAGtBoM,EACC,kBAAChX,GAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0S,KAAK,SAASpV,UAAWmuB,KAChC,kBAAC,IAAD,CAAO/Y,KAAK,YAAYpV,UAAWouB,KACnC,kBAAC,GAAD,CACE9vB,YAAaA,EACb8W,KAAK,YACLpV,UAAW4hB,GACX9C,OAAK,IAEP,kBAAC,GAAD,CACExgB,YAAaA,EACb8W,KAAK,mBACLpV,UAAW4iB,KAEb,kBAAC,GAAD,CACEtkB,YAAaA,EACb8W,KAAK,UACL0J,OAAK,EACL9e,UAAWquB,KAEb,kBAAC,GAAD,CACE/vB,YAAaA,EACb8W,KAAK,mBACLpV,UAAWsuB,KAEb,kBAAC,GAAD,CACEhwB,YAAaA,EACb8W,KAAK,iBACLpV,UAAWsuB,KAEb,kBAAC,GAAD,CACEhwB,YAAaA,EACb8W,KAAK,mBACLpV,UAAWuuB,KAEb,kBAAC,GAAD,CACEjwB,YAAaA,EACb8W,KAAK,SACLpV,UAAWwuB,KAEb,kBAAC,GAAD,CACElwB,YAAaA,EACb8W,KAAK,WACLpV,UAAWyuB,GACX3P,OAAK,IAEP,kBAAC,GAAD,CACExgB,YAAaA,EACb8W,KAAK,eACLpV,UAAW0uB,KAEb,kBAAC,GAAD,CACEpwB,YAAaA,EACb8W,KAAK,gBACLpV,UAAW2uB,KAEb,kBAAC,GAAD,CACErwB,YAAaA,EACb8W,KAAK,IACLpV,UAAWqI,aCxUrBumB,GAAgBC,IAAQ,oCAC9BD,GAAcE,IAAIC,IAAc9Y,KAChC,IAAM+Y,GAAgBJ,GAAcK,UAAU,SAE9CC,IAAShjB,OACP,kBAAC8iB,GAAD,KACE,kBAAC,IAAD,CAAUG,MAAOA,GACf,kBAAC,GAAD,QAGJzc,SAAS0c,cAAc,Y","file":"static/js/main.028016f5.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\nexport { darkTheme, lightTheme }\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport PeopleIcon from '@material-ui/icons/People'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products\">\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/import\">\n      <ListItemIcon>\n        <OpenInBrowserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Import Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/orders\">\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/wholesaleorders\">\n      <ListItemIcon>\n        <LocalShippingIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Wholesale Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/users\">\n      <ListItemIcon>\n        <TagFacesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/members\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Members\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/storecredits\">\n      <ListItemIcon>\n        <CreditIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Store Credits\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n","import { OrderStatus, PaymentStatus, ShipmentStatus } from './types/Order'\n\nexport const API_HOST =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n\nexport const TAX_RATE = 0.06391\nexport const TAX_RATE_STRING = `${(TAX_RATE * 100).toFixed(3)}%`\n\ntype OrderStatusLookup = { [key in OrderStatus]: string }\nexport const ORDER_STATUSES: OrderStatusLookup = {\n  new: 'new',\n  needs_review: 'needs review',\n  pending: 'pending',\n  complete: 'complete',\n  void: 'void',\n  archived: 'archived'\n}\n\ntype OrderPaymentStatusLookup = { [key in PaymentStatus]: string }\nexport const PAYMENT_STATUSES: OrderPaymentStatusLookup = {\n  balance_due: 'balance due',\n  paid: 'paid',\n  credit_owed: 'credit owed',\n  failed: 'failed',\n  void: 'void'\n}\n\ntype OrderShipmentStatusLookup = { [key in ShipmentStatus]: string }\nexport const SHIPMENT_STATUSES: OrderShipmentStatusLookup = {\n  backorder: 'backorder',\n  pending: 'pending',\n  ready: 'ready',\n  shipped: 'shipped',\n  partial: 'partial',\n  canceled: 'canceled'\n}\n\nexport const APP_VERSION = `v${\n  process.env.npm_package_version || require('../package.json').version\n} made with ♥ in NYC`\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { User, LoginError } from '../../types/User'\nimport { API_HOST } from '../../constants'\n\nexport interface SetAction {\n  type: 'SET'\n  user: User\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR'\n  error: LoginError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (user: User): SetAction => {\n  return { type: 'SET', user }\n}\nexport const setError = (error: LoginError): SetError => {\n  return { type: 'SET_ERROR', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING', isFetching }\n}\n\nconst NULL_USER: User = {\n  id: undefined,\n  email: undefined,\n  token: undefined\n}\n\nexport const checkSession = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      // gonna get weird when there's no localStorage :/\n      const token = localStorage && localStorage.getItem('token')\n\n      if (!token) {\n        // reject('no token')\n        dispatch(isFetching(false))\n        dispatch(set(NULL_USER))\n        resolve()\n        return\n      }\n\n      fetch(`${API_HOST}/check_session`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('check_session', response)\n          if (response.msg === 'ok' && response.user) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(set(NULL_USER))\n          }\n        })\n        .catch((err) => {\n          console.warn('check_session caught err:', err)\n          // hmm, maybe the API is just down? ...is it really necessary to NULL the user?\n          dispatch(set(NULL_USER))\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const register = (\n  regKey: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ regKey, password })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch((e) => {\n          console.log('register error:', e)\n          dispatch(\n            setError({\n              error: 'error',\n              reason: 'unable to register right now :('\n            })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch((e) => {\n          console.log('login error:', e)\n          dispatch(\n            setError({ error: 'error', reason: 'unable to login right now :(' })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      const token = localStorage && localStorage.getItem('token')\n      fetch(`${API_HOST}/logout`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .catch(console.warn)\n        .finally(() => {\n          localStorage && localStorage.removeItem('token')\n          dispatch(set(NULL_USER))\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'true'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n\nexport const setPreferences = (\n  preferences: Preferences\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        localStorage &&\n          localStorage.setItem('preferences', JSON.stringify(preferences))\n        dispatch(set(preferences))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React from 'react'\nimport { Container } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nexport default function Loading() {\n  return (\n    <Container fixed>\n      <Box pt={4} style={{ textAlign: 'center' }}>\n        L O A D I N G . . .\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: { children: React.ReactNode }) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Order } from '../types/Order'\n\ninterface OrderData {\n  data: Order[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orders, setOrders] = useState<OrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setOrders &&\n      fetch(`${API_HOST}/orders`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then((response) => response.json())\n        .then(setOrders)\n        .catch((err) => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setOrders])\n\n  return (\n    <React.Fragment>\n      <Title>recent orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>status</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map((order) => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/orders/edit/${order.id}`)}\n            >\n              <TableCell>\n                {order.createdAt && new Date(order.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{order.status}</TableCell>\n              <TableCell>{order.name}</TableCell>\n              <TableCell>{order.email}</TableCell>\n              <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/orders')\n          }}\n        >\n          SEE MORE ORDERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Orders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\ninterface WholesaleOrderData {\n  data: WholesaleOrder[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction WholesaleOrders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orders, setOrders] = useState<WholesaleOrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then((response) => response.json())\n        .then(setOrders)\n        .catch((err) => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setOrders])\n\n  return (\n    <React.Fragment>\n      <Title>recent wholesale orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>vendor</TableCell>\n            <TableCell>status</TableCell>\n            <TableCell>payment status</TableCell>\n            <TableCell>shipment status</TableCell>\n            {/* <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map((order) => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() =>\n                props.history.push(`/wholesaleorders/edit/${order.id}`)\n              }\n            >\n              <TableCell>\n                {order.createdAt && new Date(order.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{order.vendor}</TableCell>\n              <TableCell>{order.status}</TableCell>\n              <TableCell>{order.payment_status}</TableCell>\n              <TableCell>{order.shipment_status}</TableCell>\n              {/* <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/wholesaleorders')\n          }}\n        >\n          SEE MORE\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(WholesaleOrders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Member } from '../types/Member'\n\ninterface MemberData {\n  data: Member[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Members(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [members, setMembers] = useState<MemberData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    token &&\n      setMembers &&\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ pageSize: 10 })\n      })\n        .then((response) => response.json())\n        .then(setMembers)\n        .catch((err) => {\n          console.warn(err)\n          return { data: [], page: 0, totalCount: 0 }\n        })\n  }, [token, setMembers])\n\n  return (\n    <React.Fragment>\n      <Title>recent members</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell align=\"right\">fees_paid</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {members.data.map((member) => (\n            <TableRow\n              key={member.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/members/${member.id}`)}\n            >\n              <TableCell>\n                {member.createdAt &&\n                  new Date(member.createdAt).toLocaleString()}\n              </TableCell>\n              <TableCell>{member.name}</TableCell>\n              <TableCell>{member.registration_email}</TableCell>\n              <TableCell align=\"right\">{member.fees_paid}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/members')\n          }}\n        >\n          SEE ALL MEMBERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Members)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nimport Orders from './Orders'\nimport WholesaleOrders from './WholesaleOrders'\nimport Members from './Members'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: '100vh'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflowX: 'hidden',\n    flexDirection: 'column'\n  }\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.paper}>\n            <WholesaleOrders />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.paper}>\n            <Members />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Orders />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { login } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  login: (email: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction Login(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n    const emailEl = target.elements.namedItem('email') as HTMLInputElement\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n\n    if (\n      emailEl &&\n      emailEl.value.length > 0 &&\n      passwordEl &&\n      passwordEl.value.length > 0\n    ) {\n      props.login(emailEl.value, passwordEl.value)\n    }\n  }\n\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={doLogin} className={classes.form}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" display=\"block\">\n            MARSH COOP\n          </Typography>\n          <Typography variant=\"overline\" display=\"inline\">\n            admin\n          </Typography>\n        </div>\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoFocus\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps, useLocation } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { register } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  register: (regKey: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    // minHeight: 'calc(100vh - 64px)'\n  },\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nfunction Register(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n    const passwordConfirmEl = target.elements.namedItem(\n      'password_confirm'\n    ) as HTMLInputElement\n\n    let regKey: string = ''\n\n    if (regKeyParam) {\n      regKey = regKeyParam\n    }\n\n    if (!regKey) {\n      const regKeyEl = target.elements.namedItem('regKey') as HTMLInputElement\n      if (regKeyEl && regKeyEl.value.length > 1) {\n        regKey = regKeyEl.value\n      }\n    }\n\n    if (!regKey) {\n      setError('no registration key')\n    }\n\n    if (\n      passwordEl &&\n      passwordEl.value.length > 0 &&\n      passwordConfirmEl &&\n      passwordConfirmEl.value.length > 0\n    ) {\n      if (passwordConfirmEl.value !== passwordEl.value) {\n        setError('passwords do not match')\n      } else {\n        props.register(regKey, passwordConfirmEl.value)\n      }\n    }\n  }\n\n  let query = useQuery()\n  const regKeyParam = query.get('regKey')\n  console.log('[Register] regKeyParam', regKeyParam)\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={doLogin} className={classes.form}>\n        {!regKeyParam && (\n          <TextField\n            label=\"registration key\"\n            name=\"regKey\"\n            type=\"text\"\n            autoFocus\n            fullWidth\n            required\n          />\n        )}\n\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoFocus={!!regKeyParam}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password_confirm\"\n          name=\"password_confirm\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            submit\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    register: (regKey, password) => dispatch(register(regKey, password))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Register))\n","import React from 'react'\nimport { RouteProps, Redirect, Route } from 'react-router-dom'\n\nimport { UserServiceProps, UserService } from '../redux/session/reducers'\n\nconst isAdmin = (userService: UserService): boolean =>\n  userService.user && userService.user.role && userService.user.role === 'admin'\n    ? true\n    : false\n\ninterface ProtectedRouteProps {\n  children?: React.ReactNode\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  userService,\n  children,\n  ...rest\n}: ProtectedRouteProps & RouteProps & UserServiceProps) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAdmin(userService) ? (\n        Component ? (\n          <Component {...props} />\n        ) : (\n          children\n        )\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default ProtectedRoute\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport { API_HOST } from '../constants'\nimport { LineItem } from '../types/Order'\nimport { Member } from '../types/Member'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    maxWidth: '100vw',\n    minHeight: '100vh'\n  },\n  header: {\n    fontSize: '1.5em',\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.paper\n  },\n  row: {\n    width: '100%',\n    padding: '0 1em',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.paper\n    }\n  }\n}))\n\nconst ExpansionPanel = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n}))(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\ntype StoreCreditRow = Member & {\n  credits: LineItem[]\n  credits_sum: number\n  adjustments: LineItem[]\n  adjustments_sum: number\n  store_credit: number\n}\n\nfunction StoreCredits(props: RouteComponentProps) {\n  const classes = useStyles()\n  // const tableRef = createRef<any>()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [members, setMembers] = useState<StoreCreditRow[]>([])\n  useEffect(() => {\n    fetch(`${API_HOST}/admin/store_credit_report`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log('store_credit_report result:', result)\n        setMembers(result)\n      })\n      .catch((err) => {\n        console.warn(err)\n        setMembers([])\n      })\n  }, [token])\n\n  console.log('members:', members)\n  return (\n    <Paper className={classes.root}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"h1\" className={classes.header}>\n            Store Credits\n          </ListSubheader>\n        }\n      >\n        {members.map((member) => (\n          <React.Fragment key={member.id}>\n            <ListItem>\n              <div className={classes.row}>\n                <Tooltip title=\"edit member\">\n                  <Button\n                    onClick={() => props.history.push(`/members/${member.id}`)}\n                  >\n                    {member.name}\n                  </Button>\n                </Tooltip>\n                <Typography>{member.registration_email}</Typography>\n                <Typography>$ {member.store_credit.toFixed(2)}</Typography>\n              </div>\n            </ListItem>\n            <ExpansionPanel square>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel${member.id}-content`}\n                id={`panel${member.id}-header`}\n              >\n                <Typography>Order Line Items</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>createdAt</TableCell>\n                      <TableCell>order#</TableCell>\n                      <TableCell>description</TableCell>\n                      <TableCell align=\"right\">total</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell colSpan={2} align=\"center\">\n                        Credits ({member.credits.length})\n                      </TableCell>\n                      <TableCell align=\"right\">SUM</TableCell>\n                      <TableCell align=\"right\">{member.credits_sum}</TableCell>\n                    </TableRow>\n                    {member.credits.map((li) => (\n                      <TableRow\n                        key={`${member.id}${li.id}`}\n                        className={classes.rowHover}\n                      >\n                        <TableCell>\n                          {li.createdAt &&\n                            new Date(li.createdAt).toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <Tooltip title=\"edit order\">\n                            <Button\n                              onClick={() =>\n                                props.history.push(`/orders/edit/${li.OrderId}`)\n                              }\n                            >\n                              #{li.OrderId}\n                            </Button>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell>{li.description}</TableCell>\n                        <TableCell align=\"right\">{li.total}</TableCell>\n                      </TableRow>\n                    ))}\n\n                    <TableRow>\n                      <TableCell colSpan={2} align=\"center\">\n                        Adjustments ({member.adjustments.length})\n                      </TableCell>\n                      <TableCell align=\"right\">SUM</TableCell>\n                      <TableCell align=\"right\">\n                        {member.adjustments_sum}\n                      </TableCell>\n                    </TableRow>\n                    {member.adjustments.map((li) => (\n                      <TableRow\n                        key={`${member.id}${li.id}`}\n                        className={classes.rowHover}\n                      >\n                        <TableCell>\n                          {li.createdAt &&\n                            new Date(li.createdAt).toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <Tooltip title=\"edit order\">\n                            <Button\n                              onClick={() =>\n                                props.history.push(`/orders/edit/${li.OrderId}`)\n                              }\n                            >\n                              #{li.OrderId}\n                            </Button>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell>{li.description}</TableCell>\n                        <TableCell align=\"right\">{li.total}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </React.Fragment>\n        ))}\n      </List>\n    </Paper>\n  )\n}\n\nexport default withRouter(StoreCredits)\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\n\nimport { Order } from '../types/Order'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(2),\n      borderLeft: `${theme.spacing(6)}px solid ${theme.palette.divider}`\n    },\n    gridHeading: {\n      color: theme.palette.text.secondary\n    },\n    gridItem: {\n      paddingBottom: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center'\n    },\n    lastUpdated: {\n      marginLeft: theme.spacing(2)\n    },\n    squareLink: {\n      marginLeft: '1em'\n    }\n  })\n)\n\nexport default function OrderDetailPanel(props: { order: Order }) {\n  const classes = useStyles()\n  const order = props.order\n  const line_items = props.order.OrderLineItems || []\n  const adjustments = line_items.filter(\n    (li) =>\n      li.kind !== 'product' && li.kind !== 'payment' && li.kind !== 'credit'\n  )\n  const payments = line_items.filter((li) => li.kind === 'payment')\n  const paymentsTotal = payments.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const credits = line_items.filter((li) => li.kind === 'credit')\n  const creditsTotal = credits.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const balance =\n    parseFloat(`${order.total}`) +\n    parseFloat(`${creditsTotal}`) +\n    parseFloat(`${paymentsTotal}`)\n\n  return (\n    <div className={classes.root}>\n      <Table aria-label=\"order details table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">\n              Line Items ({order.item_count})\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              price\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              unit\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              qty\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {line_items.map(\n            (li, idx) =>\n              li.kind === 'product' && (\n                <TableRow key={`orderli${idx}`}>\n                  <TableCell component=\"td\" scope=\"row\">\n                    {li.vendor && `[${li.vendor}] `}\n                    {li.description}\n                    {li.data && li.data.product\n                      ? ` ${li.data.product.unf}`\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.price}</TableCell>\n                  <TableCell align=\"right\">{li.selected_unit}</TableCell>\n                  <TableCell align=\"right\">{li.quantity}</TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              )\n          )}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Sub Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.subtotal}\n            </TableCell>\n          </TableRow>\n\n          {adjustments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Adjustments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {adjustments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {`(${li.kind}) `} {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.total}\n            </TableCell>\n          </TableRow>\n\n          {payments && payments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Payments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {payments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {li.description}\n                {li.data && li.data.payment && li.data.payment.receipt_number && (\n                  <Link\n                    className={classes.squareLink}\n                    color=\"secondary\"\n                    href={li.data.payment.receipt_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {li.data.payment.receipt_number}\n                  </Link>\n                )}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          {credits && credits.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Credits</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {credits.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          {balance > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Balance Due</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                {balance.toFixed(2)}\n              </TableCell>\n            </TableRow>\n          )}\n\n          {balance < 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Credit Owed</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                {Math.abs(balance).toFixed(2)}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              customer\n            </Typography>\n            <Typography variant=\"body1\">\n              {order.name}{' '}\n              <Link color=\"secondary\" href={`mailto:${order.email}`}>\n                {order.email}\n              </Link>\n              <br />\n              <Link color=\"secondary\" href={`tel:${order.phone}`}>\n                {order.phone}\n              </Link>\n              <br />\n              {order.address} <br />\n            </Typography>\n          </div>\n        </Grid>\n        {order.User && order.User !== order.Member && (\n          <Grid item xs={4}>\n            <div className={classes.gridItem}>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                className={classes.gridHeading}\n                gutterBottom\n              >\n                created by\n              </Typography>\n              <Typography variant=\"body1\">\n                <Link color=\"secondary\" href={`mailto:${order.User.email}`}>\n                  {order.User.email}\n                </Link>{' '}\n                {order.User.role && <>({order.User.role}) </>}\n              </Typography>\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              notes\n            </Typography>\n            <Typography variant=\"body2\">{order.notes}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      {order.createdAt !== order.updatedAt && (\n        <div className={classes.lastUpdated}>\n          <i>Last updated</i> {new Date(order.updatedAt).toLocaleString()}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\nimport { Order } from '../types/Order'\nimport OrderDetailPanel from './OrderDetailPanel'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'CLOSE SEARCH' : 'SEARCH',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newOrderAction = {\n    icon: 'add',\n    tooltip: 'NEW ORDER',\n    isFreeAction: true,\n    onClick: () => props.history.push('/orders/create')\n  }\n\n  const printAction = {\n    tooltip: 'PRINT',\n    icon: 'print',\n    onClick: (e: any, data: Order[]) => {\n      const orderIds = data.map((order) => order.id)\n      console.log('printAction orderIds:', orderIds, ' data:', data)\n\n      fetch(`${API_HOST}/orders/print`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ orderIds })\n      })\n        .then((response) => response.text())\n        .then((result) => {\n          try {\n            // eslint-disable-next-line\n            const wOpen = window.open('about:blank')\n            if (wOpen) {\n              wOpen.document.body.innerHTML += result\n            }\n          } catch (e) {\n            console.warn('caught error doing this razzle dazze shit e:', e)\n          }\n        })\n        .catch((err) => {\n          console.warn(err)\n        })\n    }\n  }\n\n  const editAction = {\n    tooltip: 'EDIT',\n    icon: 'edit',\n    onClick: (e: any, data: Order[]) => {\n      data[0] && data[0].id && props.history.push(`/orders/edit/${data[0].id}`)\n    }\n  }\n\n  // const archiveAction = {\n  //   tooltip: 'ARCHIVE',\n  //   icon: 'archive',\n  //   onClick: (e: any, data: Order[]) => {\n  //     console.log('archive these muthafuckaz')\n  //   }\n  // }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newOrderAction\n  ])\n\n  useEffect(() => {\n    !isSelecting && setActions([searchAction, newOrderAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, isSelecting]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          { title: '#', field: 'id', type: 'string', filtering: false },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (order: Order) => new Date(order.createdAt).toLocaleString()\n          },\n          {\n            title: 'status',\n            field: 'status',\n            type: 'string',\n            lookup: ORDER_STATUSES\n          },\n          {\n            title: 'payment status',\n            field: 'payment_status',\n            type: 'string',\n            lookup: PAYMENT_STATUSES\n          },\n          {\n            title: 'shipment status',\n            field: 'shipment_status',\n            type: 'string',\n            lookup: SHIPMENT_STATUSES\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'email', field: 'email', type: 'string', filtering: false },\n          {\n            title: 'items',\n            field: 'item_count',\n            type: 'numeric',\n            filtering: false\n          },\n          {\n            title: 'total',\n            field: 'total',\n            type: 'currency',\n            filtering: false\n          },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            hidden: true\n            // render: (order: Order) =>\n            //   order.updatedAt\n            //     ? new Date(order.updatedAt).toLocaleString()\n            //     : null\n          },\n          { title: 'phone', field: 'phone', type: 'string', hidden: true },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'notes', field: 'notes', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'history', field: 'history', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            // console.log('query:', query)\n            fetch(`${API_HOST}/orders`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                // console.log('result', result)\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        detailPanel={(order) => <OrderDetailPanel order={order} />}\n        onRowClick={(event, rowData, togglePanel) =>\n          togglePanel && togglePanel()\n        }\n        title=\"Orders\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        onSelectionChange={(data: Order[], rowData?: Order | undefined) => {\n          searchExpanded && setSearchExpanded(false)\n          if (data.length === 0) {\n            setIsSelecting(false)\n            return\n          }\n          setIsSelecting(true)\n          if (data.length === 1) {\n            setActions([printAction, editAction])\n          } else {\n            setActions([printAction])\n          }\n        }}\n        actions={actions}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Orders)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\nimport { OrderStatus } from '../types/Order'\n\nconst blankWholesaleOrder: WholesaleOrder = {\n  id: '',\n  vendor: '',\n  notes: '',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  createdAt: '',\n  updatedAt: ''\n}\n\nconst useWholesaleOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void,\n  reload: boolean,\n  setReload: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  const token = localStorage && localStorage.getItem('token')\n\n  useEffect(() => {\n    if (!id) {\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    if (id === 'new') {\n      setResult({ status: 'loaded', payload: blankWholesaleOrder })\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    fetch(`${API_HOST}/wholesaleorder/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResult({ status: 'loaded', payload: response as WholesaleOrder })\n      })\n      .catch((error) => {\n        console.warn('useWholesaleOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n        setReload(false)\n      })\n  }, [id, setLoading, reload, setReload, token])\n\n  return result\n}\n\nconst useAllWholesaleOrdersService = (\n  status: OrderStatus,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  reloadWholesaleOrders: boolean,\n  setReloadWholesaleOrders: (reloadWholesaleOrders: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder[]>>({\n    status: 'loading'\n  })\n\n  const token = localStorage && localStorage.getItem('token')\n\n  useEffect(() => {\n    reloadWholesaleOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status\n        })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setResult({\n            status: 'loaded',\n            payload: response.data as WholesaleOrder[]\n          })\n        })\n        .catch((error) => {\n          console.warn('useWholesaleOrderService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => {\n          setReloadWholesaleOrders(false)\n          setLoading(false)\n        })\n  }, [\n    reloadWholesaleOrders,\n    setReloadWholesaleOrders,\n    status,\n    setLoading,\n    token\n  ])\n\n  return result\n}\n\nconst useWholesaleOrderSaveService = (\n  wholesaleOrder: WholesaleOrder | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  const token = localStorage && localStorage.getItem('token')\n\n  useEffect(() => {\n    if (!doSave || !wholesaleOrder || !wholesaleOrder.id) {\n      setDoSave(false)\n      return\n    }\n\n    const path =\n      wholesaleOrder.id === 'new'\n        ? '/wholesaleorder/create'\n        : '/wholesaleorder/upsert'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(wholesaleOrder)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResult({\n          status: 'loaded',\n          payload: response.order as WholesaleOrder\n        })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch((error) => {\n        console.warn('useWholesaleOrderSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [wholesaleOrder, doSave, setDoSave, setSnackMsg, setSnackOpen, token])\n\n  return result\n}\n\nexport {\n  useWholesaleOrderService,\n  useAllWholesaleOrdersService,\n  useWholesaleOrderSaveService\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport FileIcon from '@material-ui/icons/FileCopy'\n\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditWholesaleOrderMenuProps {\n  wholesaleOrder: WholesaleOrder\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n  onProductsExportToCsv: () => void\n}\n\nexport default function EditMenu(props: EditWholesaleOrderMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"wholesaleorders-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"wholesaleorders-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete wholesale order\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem\n          onClick={() => {\n            props.onProductsExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"export products to .csv\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { LineItemData, GroupedItem } from './EditWholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    liTable: {\n      marginTop: theme.spacing(4)\n    },\n    deleteBtn: {\n      width: '88px'\n    },\n    unf: {\n      minWidth: '105px'\n    },\n    groupedRow: {\n      backgroundColor: theme.palette.background.default\n    },\n    groupedRowTotals: theme.typography.h6\n  })\n)\n\nfunction WholesaleOrderLineItems(\n  props: {\n    wholesaleOrder?: WholesaleOrder\n    setReload: React.Dispatch<React.SetStateAction<boolean>>\n    lineItemData: LineItemData\n    setLineItemData: React.Dispatch<React.SetStateAction<LineItemData>>\n    setSnackMsg: (value: React.SetStateAction<string>) => void\n    setSnackOpen: React.Dispatch<React.SetStateAction<boolean>>\n  } & RouteComponentProps\n) {\n  const classes = useStyles()\n  const token = localStorage && localStorage.getItem('token')\n  const lineItems = props?.wholesaleOrder?.OrderLineItems\n  const { lineItemData, setLineItemData, setSnackMsg, setSnackOpen } = props\n\n  function calc() {\n    let groupedLineItems: {\n      [key: string]: GroupedItem\n    } = {}\n\n    setLineItemData((prevData) => ({\n      ...prevData,\n      productTotal: 0,\n      adjustmentTotal: 0,\n      orderTotal: 0\n    }))\n\n    lineItems?.forEach((li) => {\n      const id =\n        li.data &&\n        li.data.product &&\n        `${li.data.product.unf}${li.data.product.upc_code}`\n      const key = id ? id : li.description\n\n      let acc = groupedLineItems[key]\n\n      const qty =\n        li.data && li.data.product && li.selected_unit === 'EA'\n          ? li.quantity / li.data.product.pk\n          : li.quantity\n\n      const liTotal =\n        li.data && li.data.product\n          ? +(parseFloat(li.data.product.ws_price_cost) * qty).toFixed(2)\n          : li.total\n\n      groupedLineItems[key] = {\n        qtySum: acc ? acc.qtySum + qty : qty,\n        totalSum: acc ? acc.totalSum + liTotal : liTotal,\n        product: li && li.data && li.data.product,\n        vendor: li.vendor,\n        description: li.description,\n        line_items: acc ? [...acc.line_items, li] : [li]\n      }\n\n      setLineItemData((prevData) => ({\n        ...prevData,\n        productTotal: prevData.productTotal + parseFloat(`${liTotal}`),\n        orderTotal: prevData.orderTotal + liTotal\n      }))\n    })\n\n    Object.values(groupedLineItems).forEach((item) => {\n      // check if qtySum is not a round number (i.e. a partial case)\n      if (item.qtySum % 1 !== 0 && item.product) {\n        const pk = item.product.pk\n        const qty = item.line_items.reduce(\n          (acc, v) => acc + (v.selected_unit === 'EA' ? v.quantity : 0),\n          0\n        )\n        // quantity needed to complete a case\n        const quantity = Math.abs((qty % pk) - pk)\n        const price = +(\n          quantity * parseFloat(item.product.u_price_cost)\n        ).toFixed(2)\n\n        const total = price\n        item.line_items.push({\n          quantity,\n          price,\n          total,\n          kind: 'adjustment',\n          description: `add ${quantity} EA`\n        })\n        // also add to the sums when creating this adjustment.\n        item.totalSum = item.totalSum + total\n        item.qtySum = Math.round(item.qtySum + quantity / pk)\n\n        setLineItemData((prevData) => ({\n          ...prevData,\n          adjustmentTotal: prevData.adjustmentTotal + +total,\n          orderTotal: prevData.orderTotal + total\n        }))\n      }\n    })\n\n    setLineItemData((prevData) => ({\n      ...prevData,\n      groupedLineItems\n    }))\n  }\n\n  useEffect(calc, [lineItems])\n\n  function removeLineItem(item: GroupedItem) {\n    const ids = item.line_items.map((li) => li.id).filter((a) => a)\n    if (ids && ids.length && window.confirm('are you sure?')) {\n      fetch(`${API_HOST}/wholesaleorder/removelineitem`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ ids })\n      })\n        .then((response) => response.json())\n        .then((response) => !response.error && props.setReload(true))\n        .catch((err) => console.warn('members removelineitem caught err', err))\n    }\n  }\n\n  function issueOrderCredits(item: GroupedItem) {\n    const items = item.line_items\n      .map((li) =>\n        li.OrderId\n          ? {\n              OrderId: li.OrderId,\n              total: li.total,\n              description: item.description\n            }\n          : undefined\n      )\n      .filter((o) => o)\n    console.log('issueOrderCredits item:', item, ' orderIds:', items)\n\n    if (window.confirm('will issue order credits. are you sure?')) {\n      fetch(`${API_HOST}/wholesaleorder/issuecredits`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(items)\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (!response.error) {\n            setSnackMsg('Store credits created!')\n            setSnackOpen(true)\n          } else {\n            setSnackMsg('Unable to create credits!')\n            setSnackOpen(true)\n          }\n        })\n        .catch((err) => {\n          setSnackMsg(`onoz! error creating credits: ${err}`)\n          setSnackOpen(true)\n          console.warn('issueOrderCredits caught err', err)\n        })\n    }\n  }\n\n  return (\n    <Table size=\"small\" className={classes.liTable}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.deleteBtn} />\n          <TableCell className={classes.unf}>unf</TableCell>\n          <TableCell>description</TableCell>\n          <TableCell>price</TableCell>\n          <TableCell>cost</TableCell>\n          <TableCell>pk</TableCell>\n\n          <TableCell align=\"center\">qty</TableCell>\n          <TableCell align=\"right\">total</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.values(lineItemData.groupedLineItems).map(\n          (item: GroupedItem, idx: number) => (\n            <React.Fragment key={`wsgli${idx}`}>\n              <TableRow className={classes.groupedRow}>\n                <TableCell className={classes.deleteBtn}>\n                  <Tooltip title=\"remove line item\">\n                    <IconButton\n                      aria-label=\"remove line item\"\n                      onClick={() => removeLineItem(item)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"give order credits\">\n                    <IconButton\n                      aria-label=\"issue order credits for this item\"\n                      onClick={() => issueOrderCredits(item)}\n                    >\n                      <CreditIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${\n                      item.product.unf\n                        ? item.product.unf\n                        : item.product.upc_code\n                    } `}\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${item.product.name} ${item.product.description}`}\n                  {item.product && (\n                    <>\n                      <br />\n                      {`${item.product.upc_code} ${item.product.category} > ${item.product.sub_category}`}{' '}\n                    </>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && item.product.ws_price}\n                  {item.product &&\n                  item.product.ws_price !== item.product.u_price ? (\n                    <>\n                      <br />\n                      {`(${item.product.u_price}EA)`}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && ` ${item.product.ws_price_cost}`}\n                  <br />\n                  {item.product &&\n                    `${\n                      item.product.ws_price_cost !== item.product.u_price_cost\n                        ? `(${item.product.u_price_cost}EA)`\n                        : ''\n                    }`}\n                </TableCell>\n                <TableCell>{item.product && item.product.pk}</TableCell>\n\n                <TableCell align=\"center\" className={classes.groupedRowTotals}>\n                  {+item.qtySum.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.groupedRowTotals}>\n                  {item.totalSum.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              {item.line_items.map((li) => (\n                <TableRow key={`wsli${li.id}`}>\n                  <TableCell colSpan={2} />\n                  <TableCell>\n                    [{li.kind}] {li.vendor}{' '}\n                    {li.data && li.data.product && li.data.product.import_tag\n                      ? li.data.product.import_tag\n                      : li.description}{' '}\n                    {li.OrderId && (\n                      <Link\n                        color=\"secondary\"\n                        href={`/orders/edit/${li.OrderId}`}\n                        onClick={(e: any) => {\n                          e.preventDefault()\n                          props.history.push(`/orders/edit/${li.OrderId}`)\n                        }}\n                      >\n                        Order #{li.OrderId}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell>\n                    {li.kind === 'adjustment'\n                      ? `${li.quantity} EA`\n                      : `${li.quantity} ${li.selected_unit}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {li.data && li.data.product && li.selected_unit === 'EA'\n                      ? +(li.quantity / li.data.product.pk).toFixed(2)\n                      : null}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              ))}\n            </React.Fragment>\n          )\n        )}\n\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            ITEM COUNT\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            PRODUCT TOTAL\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            ADJUSTMENTS TOTAL\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            TOTAL\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            {Object.keys(lineItemData.groupedLineItems).length}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.productTotal.toFixed(2)}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.adjustmentTotal.toFixed(2)}\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            {lineItemData.orderTotal.toFixed(2)}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default withRouter(WholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { LineItem } from '../types/Order'\nimport { Product } from '../types/Product'\nimport {\n  WholesaleOrder,\n  WholesaleOrderRouterProps\n} from '../types/WholesaleOrder'\nimport { OrderStatus, ShipmentStatus, PaymentStatus } from '../types/Order'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport Loading from '../Loading'\nimport {\n  useWholesaleOrderService,\n  useWholesaleOrderSaveService\n} from './useWholesaleOrderService'\nimport EditMenu from './EditMenu'\nimport WholesaleOrderLineItems from './WholesaleOrderLineItems'\n\nconst { Parser } = require('json2csv')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    vendor: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    editMenu: {\n      padding: `${theme.spacing(2)}px 0`,\n      textAlign: 'right'\n    }\n  })\n)\n\nexport interface GroupedItem {\n  qtySum: number\n  totalSum: number\n  product: Product | undefined\n  vendor: string | undefined\n  description: string\n  line_items: LineItem[]\n}\n\nexport interface LineItemData {\n  groupedLineItems: {\n    [key: string]: GroupedItem\n  }\n  orderTotal: number\n  productTotal: number\n  adjustmentTotal: number\n}\n\ninterface EditWholesaleOrderProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction EditWholesaleOrder(\n  props: EditWholesaleOrderProps &\n    RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const token = localStorage && localStorage.getItem('token')\n\n  const [wholesaleOrderId, setWholesaleOrderId] = useState('')\n  const [wholesaleOrder, setWholesaleOrder] = useState<WholesaleOrder>()\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [reload, setReload] = useState(true)\n\n  const [lineItemData, setLineItemData] = useState<LineItemData>({\n    groupedLineItems: {},\n    productTotal: 0,\n    adjustmentTotal: 0,\n    orderTotal: 0\n  })\n\n  const wholesaleOrderService = useWholesaleOrderService(\n    wholesaleOrderId,\n    setLoading,\n    reload,\n    setReload\n  )\n\n  useEffect(() => {\n    if (wholesaleOrderService.status === 'loaded') {\n      if (wholesaleOrderService.payload) {\n        setWholesaleOrder(wholesaleOrderService.payload)\n      }\n    }\n  }, [wholesaleOrderService, wholesaleOrderId])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handleOrderNotesChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          notes: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleOrderVendorChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          vendor: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          status: event.target.value as OrderStatus\n        }\n      }\n    })\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          payment_status: event.target.value as PaymentStatus\n        }\n      }\n    })\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          shipment_status: event.target.value as ShipmentStatus\n        }\n      }\n    })\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const id = props.match.params.id\n\n  useEffect(() => {\n    if (id) {\n      setWholesaleOrderId(id)\n    }\n  }, [id])\n\n  const onSaveBtnClick = (): void => {\n    if (wholesaleOrderId === 'new') {\n      setWholesaleOrder((prevOrder) => {\n        if (prevOrder) {\n          return {\n            ...prevOrder,\n            id: 'new'\n          }\n        }\n      })\n    }\n    setDoSave(true)\n    props.setReloadOrders(true)\n  }\n\n  useWholesaleOrderSaveService(\n    wholesaleOrder,\n    doSave,\n    setDoSave,\n    setSnackMsg,\n    setSnackOpen\n  )\n\n  const onDeleteBtnClick = (): void => {\n    wholesaleOrder &&\n      fetch(`${API_HOST}/wholesaleorder`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ id: wholesaleOrder.id })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.error) {\n            setSnackMsg(response.msg)\n            setSnackOpen(true)\n          } else {\n            props.history.replace('/wholesaleorders')\n          }\n        })\n        .catch((error) => {\n          console.warn('delete wholesaleOrder fetch caught err:', error)\n          setSnackMsg(`o noz! ${error}`)\n          setSnackOpen(true)\n        })\n  }\n\n  const saveStreamCSV = (filename: string, text: any) => {\n    // lolol shoutout to https://stackoverflow.com/questions/37095233/downloading-and-saving-data-with-fetch-from-authenticated-rest\n    if (window.navigator.msSaveBlob) {\n      // IE 10 and later, and Edge.\n      const blobObject = new Blob([text], { type: 'text/csv' })\n      window.navigator.msSaveBlob(blobObject, filename)\n    } else {\n      // Everthing else (except old IE).\n      // Create a dummy anchor (with a download attribute) to click.\n      const anchor = document.createElement('a')\n      anchor.download = filename\n      if (window.URL.createObjectURL) {\n        // Everything else new.\n        const blobObject = new Blob([text], { type: 'text/csv' })\n        anchor.href = window.URL.createObjectURL(blobObject)\n      } else {\n        // Fallback for older browsers (limited to 2MB on post-2010 Chrome).\n        // Load up the data into the URI for \"download.\"\n        anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(text)\n      }\n      // Now, click it.\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        anchor.dispatchEvent(event)\n      } else {\n        anchor.click()\n      }\n    }\n  }\n\n  const onProductsExportToCsv = (): void => {\n    const vendor = wholesaleOrder && wholesaleOrder.vendor\n    if (!vendor) {\n      return\n    }\n    const json2csvParser = new Parser({\n      fields: [\n        'product.unf',\n        'product.upc_code',\n        'vendor',\n        'description',\n        'qtySum',\n        'totalSum',\n        'product.ws_price_cost',\n        'product.u_price_cost',\n        'product.pk',\n        'product.size',\n        'product.unit_type',\n        'product.category',\n        'product.sub_category',\n        'product.name',\n        'product.description'\n      ]\n    })\n    const csvout = json2csvParser.parse(\n      Object.values(lineItemData.groupedLineItems)\n    )\n    saveStreamCSV(`${vendor}.csv`, csvout)\n  }\n\n  function valueFor(field: keyof WholesaleOrder) {\n    return wholesaleOrder && wholesaleOrder[field] ? wholesaleOrder[field] : ''\n  }\n\n  return wholesaleOrder ? (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item sm={5}>\n              <TextField\n                className={classes.vendor}\n                label=\"vendor\"\n                fullWidth\n                value={valueFor('vendor')}\n                onChange={handleOrderVendorChange}\n              />\n              <FormControl fullWidth>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map((status) => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={7}>\n              <TextField\n                label=\"notes\"\n                multiline\n                fullWidth\n                rows={4}\n                rowsMax={28}\n                value={valueFor('notes')}\n                onChange={handleOrderNotesChange}\n              />\n              <div className={classes.editMenu}>\n                <EditMenu\n                  wholesaleOrder={wholesaleOrder}\n                  onSaveBtnClick={onSaveBtnClick}\n                  onDeleteBtnClick={onDeleteBtnClick}\n                  onProductsExportToCsv={onProductsExportToCsv}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <WholesaleOrderLineItems\n            wholesaleOrder={wholesaleOrder}\n            setReload={setReload}\n            lineItemData={lineItemData}\n            setLineItemData={setLineItemData}\n            setSnackMsg={setSnackMsg}\n            setSnackOpen={setSnackOpen}\n          />\n        </>\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditWholesaleOrder)\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport MaterialTable from 'material-table'\nimport Link from '@material-ui/core/Link'\n\nimport { LineItem } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100vw'\n    }\n  })\n)\n\ninterface AddWholesaleOrderLineItemsProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction AddWholesaleOrderLineItems(\n  props: AddWholesaleOrderLineItemsProps & RouteComponentProps\n) {\n  const classes = useStyles()\n  const token = localStorage && localStorage.getItem('token')\n  let tableRef = createRef<any>()\n\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const [selectedLineItems, setSelectedLineItems] = useState<string[]>()\n\n  const addAction = {\n    tooltip: 'ADD LINE ITEMS TO ORDER',\n    icon: 'add',\n    onClick: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      data: LineItem | LineItem[]\n    ) => {\n      handleWholesaleOrderMenuOpen(event)\n      if (Array.isArray(data)) {\n        // ain't nobody (tsc) tell me nothin\n        setSelectedLineItems(data.map((li) => li.id) as string[])\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [wholesaleorderLookup, setWholesaleOrderLookup] = useState<\n    Array<{ id: string; name: string }>\n  >()\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ status: ['new', 'needs_review'] })\n    })\n      .then((response) => response.json())\n      .then((result) =>\n        setWholesaleOrderLookup(\n          result.data.map(\n            (order: { id: string; vendor: string; createdAt: string }) => ({\n              id: order.id,\n              name: `${order.vendor} ${new Date(\n                order.createdAt\n              ).toLocaleDateString()}`\n            })\n          )\n        )\n      )\n      .catch(console.warn)\n  }, [token])\n  const [\n    wholesaleorderMenuAnchorEl,\n    setWholesaleOrderMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleWholesaleOrderMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setWholesaleOrderMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleWholesaleOrderMenuClose = () => {\n    setSelectedLineItems([])\n    setWholesaleOrderMenuAnchorEl(null)\n  }\n\n  const handleWholesaleOrderSelect = (id: string) => {\n    fetch(`${API_HOST}/wholesaleorder/addlineitems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, selectedLineItems })\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log('update line items result:', result)\n      })\n      .catch(console.warn)\n      .finally(() => {\n        handleWholesaleOrderMenuClose()\n        setNeedsRefresh(true)\n        props.setReloadOrders(true)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'OrderId',\n            field: 'OrderId',\n            type: 'string',\n            filtering: true,\n            render: (row) => (\n              <Link\n                color=\"secondary\"\n                href={`/orders/edit/${row.OrderId}`}\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push(`/orders/edit/${row.OrderId}`)\n                }}\n              >\n                Order #{row.OrderId}\n              </Link>\n            )\n          },\n          {\n            title: 'qty',\n            field: 'quantity',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'total', field: 'total', type: 'string', filtering: false },\n          {\n            title: 'product',\n            field: 'data',\n            type: 'string',\n            render: (row) =>\n              row.data && row.data.product\n                ? `${row.data.product.name} ${row.data.product.description}`\n                : null\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/wholesaleorders/lineitems`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Line Items\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[addAction]}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={wholesaleorderMenuAnchorEl}\n        keepMounted\n        open={Boolean(wholesaleorderMenuAnchorEl)}\n        onClose={handleWholesaleOrderMenuClose}\n      >\n        <MenuItem onClick={() => handleWholesaleOrderSelect('new')}>\n          New wholesale order\n        </MenuItem>\n        <Divider />\n        {wholesaleorderLookup &&\n          wholesaleorderLookup.map(\n            (wholesaleorder: { id: string; name: string }) => (\n              <MenuItem\n                key={`wholesaleorder-sel-${wholesaleorder.id}`}\n                onClick={() => handleWholesaleOrderSelect(wholesaleorder.id)}\n              >\n                {wholesaleorder.name}\n              </MenuItem>\n            )\n          )}\n      </Menu>\n    </div>\n  )\n}\n\nexport default withRouter(AddWholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MUILink from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditWholesaleOrder from './EditWholesaleOrder'\nimport { useAllWholesaleOrdersService } from './useWholesaleOrderService'\nimport { WholesaleOrderRouterProps } from '../types/WholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport { withStyles } from '@material-ui/core/styles'\nimport { OrderStatus } from '../types/Order'\nimport Loading from '../Loading'\nimport { ORDER_STATUSES } from '../constants'\nimport AddWholesaleOrderLineItems from './AddWholesaleOrderLineItems'\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: 0 //theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      textAlign: 'left',\n      marginLeft: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    paperNav: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    list: {\n      padding: 0,\n      width: '100%'\n    },\n    selectedListItem: {\n      borderLeft: `${theme.spacing(2)}px solid ${theme.palette.divider}`\n    },\n    noOrdersMsg: {\n      padding: theme.spacing(2)\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction WholesaleOrders(\n  props: Props & RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [wholesaleOrders, setWholesaleOrders] = useState<WholesaleOrder[]>([])\n  const [reloadOrders, setReloadOrders] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>('new')\n  const allWholesaleOrders = useAllWholesaleOrdersService(\n    selectedStatus,\n    setLoading,\n    reloadOrders,\n    setReloadOrders\n  )\n\n  useEffect(() => {\n    allWholesaleOrders.status === 'loaded' &&\n      setWholesaleOrders(allWholesaleOrders.payload)\n  }, [allWholesaleOrders])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addWholesaleOrder() {\n    props.history.push('/wholesaleorders/edit/new')\n    setSnackOpen(true)\n  }\n\n  function loadOrdersForStatus(status: OrderStatus, expanded: boolean) {\n    if (expanded) {\n      setSelectedStatus(status)\n      setReloadOrders(true)\n    }\n  }\n\n  let id: string | number | undefined\n  try {\n    id = window.location.pathname.split('/').reverse()[0]\n    if (isNaN(parseInt(id))) {\n      id = undefined\n    }\n  } catch {\n    /* wellfuck */\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid sm={12} md={3} lg={2} item>\n          <Paper className={classes.paperNav}>\n            <div className={classes.title}>\n              <MUILink\n                color=\"textPrimary\"\n                href=\"\"\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push('/wholesaleorders')\n                }}\n                className={classes.titleText}\n              >\n                WHOLESALE ORDERS\n              </MUILink>\n              <IconButton\n                aria-label=\"add wholesale order\"\n                title=\"add wholeslae order\"\n                onClick={() => addWholesaleOrder()}\n              >\n                <Add />\n              </IconButton>\n            </div>\n\n            {Object.keys(ORDER_STATUSES).map((status) => (\n              <ExpansionPanel\n                square\n                key={`EP${status}`}\n                defaultExpanded={status === 'new'}\n                expanded={selectedStatus === status}\n                onChange={(event: any, expanded: boolean) =>\n                  loadOrdersForStatus(status as OrderStatus, expanded)\n                }\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`panel${status}-content`}\n                  id={`panel${status}-header`}\n                >\n                  <Typography>\n                    {ORDER_STATUSES[status as OrderStatus]}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {loading ? (\n                    <Loading />\n                  ) : (\n                    <List className={classes.list}>\n                      {wholesaleOrders && wholesaleOrders.length ? (\n                        wholesaleOrders.map(\n                          (order: WholesaleOrder, idx: number) => (\n                            <ListItem\n                              button\n                              component={Link}\n                              to={`/wholesaleorders/edit/${order.id}`}\n                              key={`wsorder${idx}`}\n                              className={\n                                // eslint-disable-next-line\n                                id == order.id\n                                  ? classes.selectedListItem\n                                  : undefined\n                              }\n                            >\n                              <ListItemText\n                                primary={order.vendor}\n                                secondary={new Date(\n                                  order.createdAt\n                                ).toLocaleDateString()}\n                              />\n                            </ListItem>\n                          )\n                        )\n                      ) : (\n                        <div className={classes.noOrdersMsg}>\n                          <i>No wholesale orders for this status...</i>\n                        </div>\n                      )}\n                    </List>\n                  )}\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Paper>\n        </Grid>\n\n        <Grid sm={12} md={9} lg={10} item>\n          <Switch>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders\"\n              exact\n            >\n              <AddWholesaleOrderLineItems setReloadOrders={setReloadOrders} />\n            </ProtectedRoute>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders/edit/:id\"\n            >\n              <Paper className={classes.paper}>\n                <EditWholesaleOrder setReloadOrders={setReloadOrders} />\n              </Paper>\n            </ProtectedRoute>\n          </Switch>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new Wholesale Order!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(WholesaleOrders))\n","import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n)\n\nconst ROLES = ['admin', 'member', 'guest']\n\nexport default function NewUserModal(props: {\n  open: boolean\n  handleClose: () => void\n  handleRefresh: () => void\n}) {\n  const token = localStorage && localStorage.getItem('token')\n\n  const classes = useStyles()\n\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('guest')\n  const [disabled, setDiabled] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (email && email.includes('@')) {\n      setDiabled(false)\n    } else {\n      setDiabled(true)\n    }\n  }, [email])\n\n  const createUser = () => {\n    if (!email) {\n      setError('type an email!')\n      return\n    } else {\n      setError('')\n    }\n    fetch(`${API_HOST}/user/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ email, role })\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log('result', result)\n        if (result.error) {\n          return setError(result.msg)\n        } else {\n          props.handleRefresh()\n          props.handleClose()\n        }\n      })\n      .catch((err) => {\n        console.warn(err)\n        return setError('o noz! there was an error creating user')\n      })\n      .finally(() => setDiabled(false))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <h2>Add New User</h2>\n            <div>\n              <TextField\n                type=\"email\"\n                margin=\"dense\"\n                label=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(event: any) => setEmail(event.target.value)}\n                autoFocus\n                fullWidth\n              />\n\n              <FormControl fullWidth>\n                <InputLabel id=\"role-select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  id=\"role-select\"\n                  margin=\"dense\"\n                  value={role}\n                  onChange={(event) =>\n                    event.target &&\n                    event.target.value &&\n                    setRole(event.target.value as string)\n                  }\n                >\n                  {ROLES.map((name) => (\n                    <MenuItem value={name} key={`role-select${name}`}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createUser}\n                disabled={disabled}\n              >\n                CREATE\n              </Button>\n\n              {error && (\n                <Box color=\"error.main\">\n                  <Typography component=\"p\">{error}</Typography>\n                </Box>\n              )}\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { User } from '../types/User'\nimport { API_HOST } from '../constants'\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserRolesMenu(props: {\n  user: User\n  disabled: boolean\n}) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [role, setRole] = React.useState(props.user.role || 'none')\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleRoleChange = (id: string | undefined, role: string) => {\n    if (!id) {\n      return\n    }\n    const token = localStorage && localStorage.getItem('token')\n    fetch(`${API_HOST}/user/role`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, role })\n    })\n      .then((response) => response.json())\n      .then((resp) => {\n        // console.log('resp success!?', resp)\n        handleClose()\n        setRole(role)\n      })\n      .catch((err) => console.warn('handleRoleChange caught err:', err))\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"user-roles-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        disabled={props.disabled}\n      >\n        {role}\n      </Button>\n      <StyledMenu\n        id=\"user-roles-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* <StyledMenuItem>\n          <ListItemText\n            primary=\"Superuser\"\n            onClick={() => handleRoleChange(props.user.id, 'superuser')}\n          />\n        </StyledMenuItem> */}\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"admin\"\n            onClick={() => handleRoleChange(props.user.id, 'admin')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"member\"\n            onClick={() => handleRoleChange(props.user.id, 'member')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"guest\"\n            onClick={() => handleRoleChange(props.user.id, 'guest')}\n          />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import Add from '@material-ui/icons/Add'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n// import Snackbar from '@material-ui/core/Snackbar'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\n// import { Switch } from 'react-router'\n// import ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\n// import { useAllUsersService } from './useUserService'\nimport { UserRouterProps } from '../types/UserRouterProps'\nimport { User } from '../types/User'\nimport NewUserModal from './NewUserModal'\nimport UserRolesMenu from './UserRolesMenu'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Users(props: Props & RouteComponentProps<UserRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n  const tableRef = createRef<any>()\n\n  console.log('#TODO: deal with userService:', userService)\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const token = localStorage && localStorage.getItem('token')\n  const [newUserModalOpen, setNewUserModalOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newUserAction = {\n    icon: 'add',\n    tooltip: 'add new user',\n    isFreeAction: true,\n    onClick: () => setNewUserModalOpen(true)\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove User',\n    icon: 'delete',\n    onClick: (e: any, user: User) => {\n      if (\n        userService &&\n        userService.user &&\n        userService.user.email === user.email\n      ) {\n        alert('you cannot delete yrself!')\n      } else {\n        if (!user.id) {\n          return\n        }\n        if (window.confirm(`Are you sure you want to delete ${user.email}?`)) {\n          fetch(`${API_HOST}/user`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({ id: user.id })\n          })\n            .then((response) => response.json())\n            .then(() => tableRef.current && tableRef.current.onQueryChange())\n            .catch((err) => console.warn('user deleteAction caught err', err))\n        }\n      }\n    }\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newUserAction,\n    deleteAction\n  ])\n\n  useEffect(() => {\n    setActions([searchAction, newUserAction, deleteAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'role',\n            field: 'role',\n            type: 'string',\n            render: (row) => (\n              <UserRolesMenu\n                user={row as User}\n                disabled={\n                  !!(\n                    userService &&\n                    userService.user &&\n                    userService.user.email === row.email\n                  )\n                }\n              />\n            )\n          },\n          { title: 'email', field: 'email', type: 'string' },\n          {\n            title: 'active',\n            field: 'active',\n            type: 'boolean',\n            filtering: false\n          },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) => new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) => new Date(row.updatedAt).toLocaleString()\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/users`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Users\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n\n      <NewUserModal\n        open={newUserModalOpen}\n        handleClose={() => {\n          setNewUserModalOpen(false)\n        }}\n        handleRefresh={() =>\n          tableRef.current && tableRef.current.onQueryChange()\n        }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Users))\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n// import MoreVertIcon from '@material-ui/icons/MoreVert'\n// import IconButton from '@material-ui/core/IconButton'\n// import Tooltip from '@material-ui/core/Tooltip'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string | undefined) {\n  return (\n    codes &&\n    codes\n      .split(', ')\n      .map((code, idx) =>\n        PROPERTY_MAP[code] ? (\n          <Chip\n            label={PROPERTY_MAP[code]}\n            style={{ margin: 5 }}\n            size=\"small\"\n            key={`pprop${idx}`}\n          />\n        ) : (\n          ''\n        )\n      )\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\nfunction Products() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map((p) => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ ids })\n        })\n          .catch((err) => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then((response) => response.json())\n      .then((result) => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then((response) => response.json())\n      .then((result) => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then((response) => response.json())\n      .then((result) => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            },\n            render: (row) => {\n              if (row.name) {\n                return `${row.name} -- ${row.description}`\n              } else {\n                return row.description\n              }\n            }\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: (row) => renderCodes(row.codes)\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Products\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      zIndex: 2\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    }\n  })\n)\n\nexport default function ImportProducts() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [vendor, setVendor] = useState('')\n  const [importTag, setImportTag] = useState('')\n  const [prevImportTag, setPrevImportTag] = useState('')\n  const [markup, setMarkup] = useState(0.0)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then((response) => response.json())\n      .then((result) => setVendorLookup(result))\n  })\n\n  const [importTagsLookup, setImportTagsLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/import_tags`)\n      .then((response) => response.json())\n      .then((result) => setImportTagsLookup(result))\n  })\n\n  const token = localStorage && localStorage.getItem('token')\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('vendor')\n    formData.delete('import_tag')\n    formData.delete('prev_import_tag')\n    formData.delete('markup')\n    formData.append('vendor', vendor)\n    formData.append('import_tag', importTag)\n    formData.append('prev_import_tag', prevImportTag)\n    formData.append('markup', `${markup}`)\n\n    fetch(`${API_HOST}/products/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch((err) => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  const [\n    vendorMenuAnchorEl,\n    setVendorMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleVendorMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setVendorMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleVendorMenuClose = () => {\n    setVendorMenuAnchorEl(null)\n  }\n\n  const handleVendorSelect = (vendor: string) => {\n    setVendor(vendor)\n    handleVendorMenuClose()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Import Products</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <div className={classes.vendor}>\n            <TextField\n              label=\"Vendor\"\n              helperText=\"Required.\"\n              fullWidth\n              value={vendor}\n              onChange={(event) => setVendor(event.target.value)}\n            />\n\n            <div>\n              <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleVendorMenuOpen}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </div>\n\n            <Menu\n              id=\"vendor-menu\"\n              anchorEl={vendorMenuAnchorEl}\n              keepMounted\n              open={Boolean(vendorMenuAnchorEl)}\n              onClose={handleVendorMenuClose}\n            >\n              {vendorLookup &&\n                Object.keys(vendorLookup).map((vendor) => (\n                  <MenuItem\n                    key={`vendor-sel-${vendor}`}\n                    onClick={() => handleVendorSelect(vendor)}\n                  >\n                    {vendor}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </div>\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <InputLabel id=\"prev-import-tag-select-label\">\n              Previous Import Tag\n            </InputLabel>\n            <Select\n              labelId=\"prev-import-tag-select-label\"\n              id=\"prev-import-tag-select\"\n              value={prevImportTag}\n              onChange={(event) =>\n                event.target && setPrevImportTag(event.target.value as string)\n              }\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {importTagsLookup &&\n                Object.keys(importTagsLookup).map((tag) => (\n                  <MenuItem key={`tag-sel-${tag}`} value={tag}>\n                    {tag}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>\n              If updating, products with the tag you select here will first be\n              removed.\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label=\"Import Tag\"\n            helperText=\"Required. This should be unique.\"\n            fullWidth\n            value={importTag}\n            onChange={(event) => setImportTag(event.target.value)}\n            className={classes.gridItem}\n          />\n          <TextField\n            label=\"Markup\"\n            helperText=\"Markup percentage. Use decimal format.\"\n            type=\"number\"\n            inputProps={{\n              min: '0',\n              max: '1',\n              step: '0.01'\n            }}\n            fullWidth\n            value={markup}\n            onChange={(event) =>\n              setMarkup(\n                isNaN(parseFloat(event.target.value))\n                  ? 0.0\n                  : parseFloat(event.target.value)\n              )\n            }\n            className={classes.gridItem}\n          />\n\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={\n                loading || !importTag || !vendor || formData === undefined\n              }\n              onClick={() => submitData()}\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              IMPORT\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>What kind of file should be uploaded?</dt>\n              <dd>Comma separated value files with the extension .csv</dd>\n\n              <dt>What columns will get processed?</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>name</b>, <b>description</b>,{' '}\n                <b>pk</b>, <b>size</b>, <b>unit_type</b>, <b>ws_price</b>,{' '}\n                <b>u_price</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>Are any of these optional?</dt>\n              <dd>\n                <b>unf</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>\n                <b>codes</b> column\n              </dt>\n              <dd>\n                the <b>codes</b> column value can be a comma-separated list of\n                codes. the values that can be entered in this field are any\n                combination of a, r, c, l, d, f, g, v, w, y, k, ft, m, s, n, og,\n                1, 2, 3.\n              </dd>\n\n              <dt>How do the code columns translate?</dt>\n              <dd>\n                The values in the code columns need to be the same as the\n                header. so for example if there's a column <b>a</b> then the\n                value for the fields in the column need to be <i>a</i> (or blank\n                if not appliciable). except for the <b>og</b> column which can\n                have values og, 1, 2, or 3.\n                <br />\n                <br />\n                <table>\n                  <thead>\n                    <tr>\n                      <th>code</th>\n                      <th>translation</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>a</td>\n                      <td>Artificial ingredients</td>\n                    </tr>\n                    <tr>\n                      <td>c</td>\n                      <td>Low carb</td>\n                    </tr>\n                    <tr>\n                      <td>d</td>\n                      <td>Dairy free</td>\n                    </tr>\n                    <tr>\n                      <td>f</td>\n                      <td>Food Service items</td>\n                    </tr>\n                    <tr>\n                      <td>g</td>\n                      <td>Gluten free</td>\n                    </tr>\n                    <tr>\n                      <td>k</td>\n                      <td>Kosher</td>\n                    </tr>\n                    <tr>\n                      <td>l</td>\n                      <td>Low sodium/no salt</td>\n                    </tr>\n                    <tr>\n                      <td>m</td>\n                      <td>Non-GMO Project Verified</td>\n                    </tr>\n                    <tr>\n                      <td>r</td>\n                      <td>Refined sugar</td>\n                    </tr>\n                    <tr>\n                      <td>v</td>\n                      <td>Vegan</td>\n                    </tr>\n                    <tr>\n                      <td>w</td>\n                      <td>Wheat free</td>\n                    </tr>\n                    <tr>\n                      <td>ft</td>\n                      <td>Fair Trade</td>\n                    </tr>\n                    <tr>\n                      <td>n</td>\n                      <td>Natural</td>\n                    </tr>\n                    <tr>\n                      <td>s</td>\n                      <td>Specialty Only</td>\n                    </tr>\n                    <tr>\n                      <td>y</td>\n                      <td>Yeast free</td>\n                    </tr>\n                    <tr>\n                      <td>og</td>\n                      <td>Organic</td>\n                    </tr>\n                    <tr>\n                      <td>1</td>\n                      <td>100% organic</td>\n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>95%+ organic</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>70%+ organic</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </dd>\n\n              <dt>How is markup applied?</dt>\n              <dd>\n                Markup is a percentage in decimal format so 0.10 will markup\n                products by 10%. The formula is: <i>PRICE + (PRICE * MARKUP)</i>{' '}\n                so if the value of <b>ws_price</b> is 10.00 and the markup\n                specified is 0.10 the the markup price will be 11.00.\n                <br />\n                <br />\n                If any rows of the price sheet has a non-empty, non-zero value\n                in the <b>ws_price_markup</b> or <b>u_price_markup</b> then that\n                will be used as the markup price. This means only some rows of\n                the price sheet can contain special markups while the rest of\n                the sheet can have a single markup applied.\n              </dd>\n\n              <dt>Import Tag</dt>\n              <dd>\n                This field is used to track changes to new price sheets that are\n                meant to update products that have already been imported once. A\n                use-case for this is when uploading partial lists of product for\n                a vendor. So for example if a sub-set of products are imported,\n                then a while later a new sheet of products can be imported\n                without having to destroy and re-import all the products for a\n                vendor. If uploading a complete list of all products for a\n                particular vendor then it would be reasonable to use the same\n                value as the Vendor field.\n                <br />\n                <br />\n                <b>NOTE:</b> it can be useful to include the current date in the\n                value for the Import Tag field (or otherwise make this a unique\n                value). When creating wholesale orders it might be useful to\n                know which price sheet a product that was ordered came from.\n                <br />\n                <br />\n                When the Previous Import Tag is specified, products with that\n                tag are first deleted before new products are created.\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Order } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst useOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Order>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    const token = localStorage && localStorage.getItem('token')\n\n    fetch(`${API_HOST}/order/edit/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Order })\n      })\n      .catch((error) => {\n        console.warn('useOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\nexport { useOrderService }\n","import React, { useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\nimport Link from '@material-ui/core/Link'\n\nimport { LineItem } from '../types/Order'\nimport { TAX_RATE, TAX_RATE_STRING } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (num === undefined) {\n    return '0.00'\n  }\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items\n    .filter((li) => li.kind === 'product')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction adjustmentsTotal(items: LineItem[]) {\n  return items\n    .filter((li) => li.kind === 'adjustment')\n    .map(({ total }) => parseFloat(`${total}`))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  const u_price =\n    line_item.data && line_item.data.product && line_item.data.product.u_price\n      ? parseFloat(line_item.data.product.u_price)\n      : line_item.price\n  const ws_price =\n    line_item.data && line_item.data.product\n      ? parseFloat(line_item.data.product.ws_price)\n      : line_item.price\n\n  return line_item.selected_unit === 'EA' && u_price\n    ? isNaN(line_item.quantity * u_price)\n      ? 0.0\n      : line_item.quantity * u_price\n    : isNaN(line_item.quantity * ws_price)\n    ? 0.0\n    : line_item.quantity * ws_price\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.pk &&\n    line_item.data.product.pk !== 1 &&\n    pksize.push(line_item.data.product.pk)\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.size &&\n    pksize.push(line_item.data.product.size)\n  return pksize.join(' / ')\n}\n\nfunction OrderLineItems(props: {\n  line_items: LineItem[]\n  onLineItemUpdated: (idx: number, line_item: LineItem) => void\n  removeLineItem: (idx: number) => void\n  onTaxesChange: (amount: number) => void\n  onTotalChange: (total: number) => void\n  onSubTotalChange: (subtotal: number) => void\n  createCreditFromLineItem: (line_item: LineItem) => void\n}) {\n  const classes = useStyles()\n\n  const orderSubtotal = subtotal(props.line_items)\n  const orderAdjustmentsTotal = adjustmentsTotal(props.line_items)\n  const orderTaxes = TAX_RATE * (orderSubtotal + orderAdjustmentsTotal)\n  const orderTotal = orderTaxes + orderSubtotal + orderAdjustmentsTotal\n\n  const { onTaxesChange, onTotalChange, onSubTotalChange } = props\n  useEffect(() => {\n    onTaxesChange(orderTaxes)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTaxes])\n\n  useEffect(() => {\n    onTotalChange(orderTotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTotal])\n\n  useEffect(() => {\n    onSubTotalChange(orderSubtotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderSubtotal])\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    if (line_item.data && line_item.data.product) {\n      line_item.price =\n        unit === 'CS'\n          ? +line_item.data.product.ws_price\n          : +line_item.data.product.u_price\n    }\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleDescriptionChange = (\n    line_item: LineItem,\n    description: string\n  ) => {\n    line_item.description = description\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handlePriceChange = (line_item: LineItem, price: number) => {\n    line_item.price = price\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const removeLineItem = (line_item: LineItem) => {\n    const idx = props.line_items.indexOf(line_item)\n    props.removeLineItem(idx)\n  }\n\n  const createLineItemCredit = (line_item: LineItem) => {\n    console.log('createLineItemCredit line_item:', line_item)\n    props.createCreditFromLineItem(line_item)\n  }\n\n  const adjustments = props.line_items.filter((li) => li.kind === 'adjustment')\n  const payments = props.line_items.filter((li) => li.kind === 'payment')\n  const paymentsTotal = payments.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const credits = props.line_items.filter((li) => li.kind === 'credit')\n  const creditsTotal = credits.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const balance =\n    parseFloat(`${orderTotal}`) +\n    parseFloat(`${creditsTotal}`) +\n    parseFloat(`${paymentsTotal}`)\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map(\n            (line_item, idx) =>\n              line_item.kind === 'product' && (\n                <TableRow key={`li${idx}`}>\n                  <TableCell align=\"center\">\n                    <Tooltip title=\"remove line item\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        onClick={(event: any) => removeLineItem(line_item)}\n                      >\n                        <ClearIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"give order credits\">\n                      <IconButton\n                        aria-label=\"issue order credits for this item\"\n                        onClick={() => createLineItemCredit(line_item)}\n                      >\n                        <CreditIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>\n                    [{line_item.vendor}] {line_item.description}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      {line_item.data &&\n                      line_item.data.product &&\n                      line_item.selected_unit === 'EA' &&\n                      line_item.data.product.u_price\n                        ? usdFormat(line_item.data.product.u_price)\n                        : usdFormat(\n                            line_item.data && line_item.data.product\n                              ? line_item.data.product.ws_price\n                              : line_item.price\n                          )}\n                    </div>\n                    <div>{liPkSize(line_item)}</div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {line_item.data &&\n                    line_item.data.product &&\n                    line_item.data.product.u_price &&\n                    line_item.data.product.u_price !==\n                      line_item.data.product.ws_price ? (\n                      <Select\n                        value={line_item.selected_unit}\n                        onChange={(event: any) =>\n                          handleUnitChange(line_item, event.target.value)\n                        }\n                        margin=\"dense\"\n                      >\n                        <MenuItem value=\"CS\">Case</MenuItem>\n                        <MenuItem value=\"EA\">Each</MenuItem>\n                      </Select>\n                    ) : line_item.data &&\n                      line_item.data.product &&\n                      line_item.data.product.unit_type === 'CS' ? (\n                      'Case'\n                    ) : (\n                      'Each'\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      className={classes.qtyinput}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"dense\"\n                      fullWidth\n                      value={line_item.quantity}\n                      onChange={(event: any) =>\n                        handleQtyChange(line_item, event.target.value)\n                      }\n                      inputProps={{ min: '1', step: '1' }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {usdFormat(line_item.total)}\n                  </TableCell>\n                </TableRow>\n              )\n          )}\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(orderSubtotal)}</TableCell>\n          </TableRow>\n          {adjustments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '9999',\n                    step: '1'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Tax</TableCell>\n            <TableCell align=\"center\">{TAX_RATE_STRING}</TableCell>\n            <TableCell align=\"right\">{usdFormat(orderTaxes)}</TableCell>\n          </TableRow>\n\n          {payments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Payments</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {payments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove payment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n                {line_item.data &&\n                  line_item.data.payment &&\n                  line_item.data.payment.receipt_number && (\n                    <Link\n                      color=\"secondary\"\n                      href={line_item.data.payment.receipt_url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {line_item.data.payment.receipt_number}\n                    </Link>\n                  )}\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '-0.01',\n                    step: '0.01'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          {credits.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Credits</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {credits.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove credit\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '-0.01',\n                    step: '0.01'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              {usdFormat(orderTotal)}\n            </TableCell>\n          </TableRow>\n\n          {balance > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Balance Due</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\" colSpan={2}>\n                <b>${balance.toFixed(2)}</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {balance < 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Credit Owed</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\" colSpan={2}>\n                <b>${Math.abs(balance).toFixed(2)}</b>\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default OrderLineItems\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\ninterface ProductResponse {\n  data: Product[]\n}\n\ninterface ProductOption {\n  name: string\n  product: Product\n}\n\ninterface LineItemAutocompleteProps {\n  onItemSelected: (value: { name: string; product: Product }) => void\n}\n\nexport default function LineItemAutocomplete(props: LineItemAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<ProductOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/products`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const products = (await response.json()) as ProductResponse\n\n      if (active) {\n        setOptions(\n          products.data.map((p) => ({\n            name: `${p.name} ${p.description} ${p.pk} ${p.size} $${\n              p.ws_price\n            } ${p.u_price !== p.ws_price ? `($${p.u_price} EA)` : ''}`,\n            product: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Product search\"\n          fullWidth\n          variant=\"outlined\"\n          value={q}\n          onChange={(event) => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\ninterface MemberResponse {\n  data: Member[]\n}\n\ninterface MemberOption {\n  name: string\n  member: Member\n}\n\ninterface MemberAutocompleteProps {\n  onItemSelected: (value: { name: string; member: Member }) => void\n}\n\nexport default function MemberAutocomplete(props: MemberAutocompleteProps) {\n  const [open, setOpen] = useState(false)\n  const [options, setOptions] = useState<MemberOption[]>([])\n  const [q, setQ] = useState('')\n  const [loading, setLoading] = useState(open && options.length === 0)\n\n  useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    const token = localStorage && localStorage.getItem('token')\n    // this is a little weird\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const members = (await response.json()) as MemberResponse\n      if (active) {\n        setOptions(\n          members.data.map((p) => ({\n            name: `${p.name} ${\n              p.User && p.User.email ? p.User.email : p.registration_email\n            }`,\n            member: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 0) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Member search\"\n          fullWidth\n          autoFocus\n          variant=\"outlined\"\n          value={q}\n          onChange={(event) => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport EmailIcon from '@material-ui/icons/Email'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport Loading from '../Loading'\nimport { useOrderService } from './useOrderService'\nimport {\n  Order,\n  OrderRouterProps,\n  OrderStatus,\n  ShipmentStatus,\n  PaymentStatus\n} from '../types/Order'\nimport { LineItem } from '../types/Order'\nimport OrderLineItems from './OrderLineItems'\nimport LineItemAutocomplete from './LineItemAutocomplete'\nimport MemberAutocomplete from './MemberAutocomplete'\nimport { Product } from '../types/Product'\nimport { Member } from '../types/Member'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES,\n  TAX_RATE_STRING,\n  TAX_RATE\n} from '../constants'\n\nconst blankOrder: Order = {\n  id: 'new',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  total: 0.0,\n  item_count: 0,\n  subtotal: 0,\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  notes: '',\n  createdAt: '',\n  updatedAt: '',\n  OrderLineItems: []\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    form: {\n      marginBottom: theme.spacing(4)\n    },\n    formInput: {\n      display: 'block',\n      marginBottom: theme.spacing(2)\n    },\n    status: {\n      marginBottom: theme.spacing(2)\n    },\n    liHeader: {\n      display: 'inline-block',\n      marginRight: theme.spacing(2)\n    },\n    sticky: {\n      [theme.breakpoints.up('md')]: {\n        position: 'sticky',\n        top: '0px'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    saveBtn: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(2)\n    },\n    orderSideHeading: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      minHeight: '54px',\n      marginBottom: theme.spacing(2)\n    },\n    emailIcon: {\n      marginRight: '5px'\n    }\n  })\n)\n\nexport async function fetchStoreCredit(\n  MemberId: string,\n  token: string | null,\n  setStoreCredit: React.Dispatch<React.SetStateAction<number>>\n) {\n  if (!token) {\n    return\n  }\n  const store_credit = await fetch(`${API_HOST}/admin/store_credit`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({ MemberId })\n  })\n    .then((response: any) => response.json())\n    .then((response) =>\n      response && response.store_credit ? response.store_credit : 0\n    )\n    .catch((err: any) => 0)\n\n  setStoreCredit(store_credit)\n}\n\ninterface EditOrderProps {\n  userService?: UserService\n}\n\nfunction EditOrder(\n  props: EditOrderProps & RouteComponentProps<OrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orderId, setOrderId] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [order, setOrder] = useState<Order>(blankOrder)\n  const [saving, setSaving] = useState(false)\n  const [showLiAutocomplete, setShowLiAutocomplete] = useState(false)\n  const [showMemberAutocomplete, setShowMemberAutocomplete] = useState(false)\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n  const [needToCheckForDiscounts, setNeedToCheckForDiscounts] = useState(true)\n  const [canApplyMemberDiscount, setCanApplyMemberDiscount] = useState(false)\n  const orderService = useOrderService(orderId, setLoading)\n\n  const [storeCredit, setStoreCredit] = useState<number>(0)\n\n  useEffect(() => {\n    if (orderService.status === 'loaded') {\n      if (orderService.payload) {\n        const _order = orderService.payload\n        if (\n          _order.Member &&\n          _order.Member.discount &&\n          _order.Member.discount > 0\n        ) {\n          setCanApplyMemberDiscount(true)\n        }\n        if (_order.Member && _order.Member.id) {\n          fetchStoreCredit(_order.Member.id, token, setStoreCredit)\n        }\n        setOrder(_order)\n      }\n    }\n  }, [orderService, token])\n\n  const pOrderId = props.match.params.id\n\n  useEffect(() => {\n    if (pOrderId && pOrderId !== 'new') {\n      setOrderId(pOrderId)\n    }\n  }, [pOrderId])\n\n  useEffect(() => {\n    if (\n      order &&\n      !order.UserId &&\n      props.userService &&\n      props.userService.user &&\n      props.userService.user.id\n    ) {\n      const UserId = props.userService.user.id\n      UserId &&\n        setOrder((prevOrder) => ({\n          ...prevOrder,\n          UserId\n        }))\n    }\n  }, [props.userService, order])\n\n  useEffect(() => {\n    if (!needToCheckForDiscounts || !order) {\n      setNeedToCheckForDiscounts(false)\n      return\n    }\n    if (order && order.OrderLineItems && canApplyMemberDiscount) {\n      const discountAmt = order.OrderLineItems.map((li) => {\n        let canDiscount = false\n        if (li.data && li.data.product && li.selected_unit === 'CS') {\n          canDiscount =\n            li.data.product.ws_price !== li.data.product.ws_price_cost\n        } else if (li.data && li.data.product && li.selected_unit === 'EA') {\n          canDiscount = li.data.product.u_price !== li.data.product.u_price_cost\n        }\n        if (canDiscount && li.data && li.data.product) {\n          const price =\n            li.selected_unit === 'CS'\n              ? parseFloat(li.data.product.ws_price_cost)\n              : parseFloat(li.data.product.u_price_cost)\n\n          return +(li.total - price * li.quantity).toFixed(2)\n        } else {\n          return 0\n        }\n      }).reduce((acc, v) => acc + v, 0)\n\n      if (discountAmt > 0) {\n        const discountPrice = -discountAmt.toFixed(2)\n        const discounts = order.OrderLineItems.filter(\n          (li) =>\n            li.kind === 'adjustment' && li.description === 'member discount'\n        )\n        if (discounts[0]) {\n          if (discounts[0].total !== discountPrice) {\n            const idx = order.OrderLineItems.indexOf(discounts[0])\n            updateLineItem(idx, {\n              ...discounts[0],\n              price: discountPrice,\n              total: discountPrice\n            })\n          }\n        } else {\n          const adjustment: LineItem = {\n            description: 'member discount',\n            quantity: 1,\n            price: discountPrice,\n            total: discountPrice,\n            kind: 'adjustment'\n          }\n          setOrder((prevOrder) => ({\n            ...prevOrder,\n            OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n          }))\n        }\n      }\n    }\n\n    setNeedToCheckForDiscounts(false)\n  }, [needToCheckForDiscounts, order, canApplyMemberDiscount])\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function onAddLineitem(value: { name: string; product: Product }) {\n    if (!value) {\n      return\n    }\n    const { product } = value\n    if (value && value.name && product) {\n      const lineItem: LineItem = {\n        description: `${product.name} ${product.description}`,\n        quantity: 1,\n        selected_unit: 'CS',\n        price: parseFloat(product.ws_price),\n        total: parseFloat(product.ws_price),\n        kind: 'product',\n        vendor: product.vendor,\n        data: { product }\n      }\n      setOrder((order) => ({\n        ...order,\n        item_count:\n          order.OrderLineItems.filter((li) => li.kind === 'product').length + 1,\n        OrderLineItems: [...order.OrderLineItems, lineItem]\n      }))\n      setNeedToCheckForDiscounts(true)\n    }\n  }\n\n  function updateLineItem(idx: number, line_item: LineItem) {\n    setOrder((prevOrder) => {\n      let orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1, line_item)\n\n      return {\n        ...prevOrder,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n  function onLineItemUpdated(idx: number, line_item: LineItem) {\n    updateLineItem(idx, line_item)\n    setNeedToCheckForDiscounts(true)\n  }\n  function removeLineItem(idx: number) {\n    if (idx > -1) {\n      const li = order.OrderLineItems[idx]\n      if (li.kind === 'adjustment' && li.description === 'member discount') {\n        setCanApplyMemberDiscount(false)\n      }\n    }\n    setOrder((prevOrder) => {\n      const orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1)\n      const item_count = orderLineItems.filter((li) => li.kind === 'product')\n        .length\n      return {\n        ...prevOrder,\n        item_count,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n\n  function createAdjustment(event: any) {\n    const adjustment: LineItem = {\n      description: 'new adjustment',\n      quantity: 1,\n      price: 0.0,\n      total: 0.0,\n      kind: 'adjustment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function createPayment(event: any) {\n    const price = parseFloat(order.total.toFixed(2)) || -0.0\n    const payment: LineItem = {\n      description: 'payment',\n      quantity: 1,\n      price: -price,\n      total: -price,\n      kind: 'payment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, payment]\n    }))\n  }\n\n  function createCreditClick(event: any) {\n    createCredit(-1, 'credit')\n  }\n\n  function createCredit(li_total: number, description: string) {\n    const absPrice = Math.abs(parseFloat(`${li_total}`))\n    const price = -absPrice\n    const total = -(absPrice + absPrice * TAX_RATE)\n    const credit: LineItem = {\n      description,\n      quantity: 1,\n      price: -parseFloat(Math.abs(price).toFixed(2)),\n      total: -parseFloat(Math.abs(total).toFixed(2)),\n      kind: 'credit'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, credit]\n    }))\n  }\n\n  function createCreditFromLineItem(line_item: LineItem) {\n    createCredit(line_item.total, `STORE CREDIT (${line_item.description})`)\n  }\n\n  function applyStoreCredit() {\n    const subtotal =\n      order && order.subtotal ? order.subtotal : Math.abs(storeCredit)\n    const amt = Math.abs(storeCredit) >= subtotal ? -subtotal : storeCredit\n    const adjustment: LineItem = {\n      description: 'STORE CREDIT',\n      quantity: 1,\n      price: amt,\n      total: amt,\n      kind: 'adjustment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function emailReceipt(event: any) {\n    fetch(`${API_HOST}/orders/resend_email`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ orderId: order.id })\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.success) {\n          setSnackMsg(`Re-sent email to ${order.email}`)\n        } else {\n          setSnackMsg(`onoz! could not send email to ${order.email}`)\n        }\n      })\n      .catch((e) => {\n        console.warn('onoz! caught error re-sending email:', e)\n        setSnackMsg('onoz! could not re-send email')\n      })\n      .finally(() => setSnackOpen(true))\n  }\n\n  function onMembertemSelected(value?: { name: string; member: Member }) {\n    if (value && value.member) {\n      const { id, name, phone, address } = value.member // email\n      const email =\n        value.member.User && value.member.User.email\n          ? value.member.User.email\n          : value.member.registration_email\n      setOrder((prevOrder) => ({\n        ...prevOrder,\n        name: name || '',\n        email: email || '',\n        phone: phone || '',\n        address: address || '',\n        MemberId: id\n      }))\n      setShowMemberAutocomplete(false)\n      fetchStoreCredit(id, token, setStoreCredit)\n    }\n  }\n\n  const onSaveBtnClick = (): void => {\n    setSaving(true)\n    const path =\n      orderId && orderId !== 'new' ? '/order/update' : '/order/create'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(order)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.success) {\n          order &&\n            order.Member &&\n            order.Member.id &&\n            fetchStoreCredit(order.Member.id, token, setStoreCredit)\n          setSnackOpen(true)\n          setSnackMsg('Saved order!')\n          if (response.order.id && (!orderId || orderId === 'new')) {\n            props.history.replace(`/orders/edit/${response.order.id}`)\n          }\n        }\n      })\n      .finally(() => setSaving(false))\n  }\n\n  function onTaxesChange(tax: number) {\n    console.log('onTaxesChange tax:', tax)\n    setOrder((prevOrder) => {\n      const notTaxLineItems = prevOrder.OrderLineItems.filter(\n        (li) => li.kind !== 'tax'\n      )\n\n      return {\n        ...prevOrder,\n        OrderLineItems: [\n          ...notTaxLineItems,\n          {\n            kind: 'tax',\n            description: `tax ${TAX_RATE_STRING}`,\n            quantity: 1,\n            price: tax,\n            total: tax\n          }\n        ]\n      }\n    })\n  }\n\n  function onSubTotalChange(subtotal: number) {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      subtotal\n    }))\n  }\n\n  function onTotalChange(total: number) {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      total\n    }))\n  }\n\n  function valueFor(field: keyof Order) {\n    return order && order[field] ? order[field] : ''\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      status: event.target.value as OrderStatus\n    }))\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      payment_status: event.target.value as PaymentStatus\n    }))\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      shipment_status: event.target.value as ShipmentStatus\n    }))\n  }\n\n  const shouldShowAddMemberDiscount =\n    !canApplyMemberDiscount ||\n    (order &&\n      order.OrderLineItems.filter((li) => li.description === 'member discount')\n        .length === 0)\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={12} md={4}>\n            <div className={classes.sticky}>\n              {showMemberAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowMemberAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <MemberAutocomplete onItemSelected={onMembertemSelected} />\n                </div>\n              ) : (\n                <div className={classes.orderSideHeading}>\n                  <Tooltip title=\"BACK TO ORDERS\">\n                    <IconButton\n                      aria-label=\"back to orders\"\n                      onClick={() => props.history.push('/orders')}\n                    >\n                      <ArrowBackIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <h2 style={{ display: 'inline-block' }}>\n                    {orderId && orderId !== 'new' ? (\n                      <>\n                        EDIT ORDER <i>#{order.id}</i>\n                      </>\n                    ) : (\n                      'CREATE ORDER'\n                    )}\n                  </h2>\n\n                  <div className={classes.saveBtn}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={onSaveBtnClick}\n                      disabled={saving}\n                      fullWidth\n                    >\n                      Save\n                    </Button>\n                  </div>\n                  <div>\n                    <Tooltip title=\"ADD USER DETAILS\">\n                      <IconButton\n                        aria-label=\"add user details\"\n                        onClick={() => setShowMemberAutocomplete(true)}\n                      >\n                        <PeopleIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {order.status !== 'new' && order.status !== 'needs_review' && (\n              <Box color=\"error.main\">\n                <Typography variant=\"overline\" display=\"block\">\n                  ohey!\n                </Typography>\n                <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                  this order status is not \"new\" or \"needs review\" so making\n                  changes might not be great...\n                </Typography>\n              </Box>\n            )}\n            {order.Member && order.Member.discount && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has discount:{' '}\n                  <b>\n                    {order.Member.discount}{' '}\n                    {order.Member.discount_type &&\n                      `(${order.Member.discount_type})`}\n                  </b>\n                </Typography>\n              </Box>\n            )}\n            {storeCredit !== 0 && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has store credit:\n                  <Tooltip title=\"apply store credit\">\n                    <Button\n                      aria-label=\"apply store credit\"\n                      size=\"large\"\n                      onClick={() => applyStoreCredit()}\n                    >\n                      {storeCredit}\n                    </Button>\n                  </Tooltip>\n                </Typography>\n              </Box>\n            )}\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"name\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.name}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, name: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"email\"\n                type=\"email\"\n                className={classes.formInput}\n                fullWidth\n                value={order.email}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, email: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"phone\"\n                type=\"phone\"\n                className={classes.formInput}\n                fullWidth\n                value={order.phone}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, phone: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"address\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.address}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({\n                    ...order,\n                    address: event.target.value\n                  }))\n                }}\n              />\n              <TextField\n                label=\"notes\"\n                className={classes.formInput}\n                multiline\n                rowsMax=\"20\"\n                fullWidth\n                value={order.notes}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, notes: event.target.value }))\n                }}\n              />\n\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map((status) => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </form>\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <div>\n              {showLiAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowLiAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <LineItemAutocomplete onItemSelected={onAddLineitem} />\n                </div>\n              ) : (\n                <>\n                  <Button\n                    aria-label=\"add line items\"\n                    size=\"large\"\n                    onClick={() => setShowLiAutocomplete(true)}\n                  >\n                    <AddIcon />\n                    LINE ITEMS\n                  </Button>\n\n                  <Button\n                    aria-label=\"add adjustment\"\n                    size=\"large\"\n                    onClick={createAdjustment}\n                  >\n                    <AddIcon />\n                    ADJUSTMENT\n                  </Button>\n\n                  {shouldShowAddMemberDiscount && (\n                    <Button\n                      aria-label=\"add member discount\"\n                      size=\"large\"\n                      onClick={() => {\n                        setCanApplyMemberDiscount(true)\n                        setNeedToCheckForDiscounts(true)\n                      }}\n                    >\n                      <AddIcon />\n                      MEMBER DISCOUNT\n                    </Button>\n                  )}\n\n                  <Button\n                    aria-label=\"add payment\"\n                    size=\"large\"\n                    onClick={createPayment}\n                  >\n                    <AddIcon />\n                    PAYMENT\n                  </Button>\n\n                  <Button\n                    aria-label=\"add credit\"\n                    size=\"large\"\n                    onClick={createCreditClick}\n                  >\n                    <AddIcon />\n                    CREDIT\n                  </Button>\n\n                  <Button\n                    aria-label=\"email receipt\"\n                    size=\"large\"\n                    onClick={emailReceipt}\n                  >\n                    <EmailIcon className={classes.emailIcon} />\n                    email receipt\n                  </Button>\n                </>\n              )}\n            </div>\n            <OrderLineItems\n              line_items={order.OrderLineItems}\n              onLineItemUpdated={onLineItemUpdated}\n              removeLineItem={removeLineItem}\n              onTaxesChange={onTaxesChange}\n              onTotalChange={onTotalChange}\n              onSubTotalChange={onSubTotalChange}\n              createCreditFromLineItem={createCreditFromLineItem}\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(EditOrder))\n","import React, { createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { MemberRouterProps } from '../types/Member'\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Members(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const tableRef = createRef<any>()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const newMemberAction = {\n    icon: 'add',\n    tooltip: 'add new member',\n    isFreeAction: true,\n    onClick: () => props.history.push('/members/new')\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove Member',\n    icon: 'delete',\n    onClick: (e: any, member: Member | Member[]) => {\n      let members: Member[]\n      if (Array.isArray(member)) {\n        members = member\n      } else {\n        members = [member]\n      }\n\n      if (!members || members.length === 0) {\n        return\n      }\n      const id = members[0].id\n      if (window.confirm(`Are you sure you want to delete this member?`)) {\n        fetch(`${API_HOST}/member`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ id })\n        })\n          .then((response) => response.json())\n          .then(() => tableRef.current && tableRef.current.onQueryChange())\n          .catch((err) => console.warn('members deleteAction caught err', err))\n      }\n    }\n  }\n\n  const editAction = {\n    icon: 'edit',\n    tooltip: 'edit member',\n    onClick: (e: any, members: Member | Member[]) => {\n      let member: Member\n      if (Array.isArray(members)) {\n        member = members[0]\n      } else {\n        member = members\n      }\n      member.id && props.history.push(`/members/${member.id}`)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) =>\n              row.createdAt && new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'registration email',\n            field: 'registration_email',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'phone', field: 'phone', type: 'string', filtering: false },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'discount', field: 'discount', type: 'string' },\n          { title: 'discount type', field: 'discount_type', type: 'string' },\n          { title: 'fees paid', field: 'fees_paid', type: 'string' },\n          { title: 'shares', field: 'shares', type: 'string' },\n          { title: 'type', field: 'member_type', type: 'string' },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            hidden: true\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/members`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Members\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={[newMemberAction, deleteAction, editAction]}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Members)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { Member, MemberRouterProps } from '../types/Member'\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\nimport { fetchStoreCredit } from '../orders/EditOrder'\nimport { Order } from '../types/Order'\n\nconst blankMember: Member = {\n  id: 'new',\n  registration_email: '',\n  name: '',\n  phone: '',\n  address: '',\n  discount: 0,\n  discount_type: '',\n  fees_paid: 0,\n  store_credit: 0,\n  shares: 0,\n  member_type: '',\n  data: {}\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    sticky: {\n      [theme.breakpoints.up('sm')]: {\n        position: 'sticky',\n        top: '0'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper,\n      width: '100%'\n    },\n    ordersHeader: {\n      fontSize: '1.25em',\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n)\n\nasync function fetchMemberOrders(\n  MemberId: string,\n  token: string | null,\n  setOrders: React.Dispatch<React.SetStateAction<Order[]>>\n) {\n  if (!token) {\n    return\n  }\n  const orders = await fetch(`${API_HOST}/admin/member_orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({ MemberId })\n  })\n    .then((response: any) => response.json())\n    .catch((err: any) => [])\n  setOrders(orders)\n}\n\nfunction EditMember(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const [loadingMember, setLoadingMember] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n  const memberId = props.match.params.id\n\n  const [member, setMember] = useState<Member>(blankMember)\n  const [createNewUser, setCreateNewUser] = useState(false)\n  const [storeCredit, setStoreCredit] = useState(0)\n  const [orders, setOrders] = useState<Order[]>([])\n\n  const token = localStorage && localStorage.getItem('token')\n\n  useEffect(() => {\n    if (!memberId || memberId === 'undefined') {\n      return\n    }\n\n    if (memberId === 'new') {\n      setMember(blankMember)\n      setLoadingMember(false)\n    } else {\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          filters: [\n            {\n              column: {\n                field: 'id'\n              },\n              value: memberId\n            }\n          ]\n        })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('zomfg response:', response)\n          setMember(response.data[0] as Member)\n        })\n        .catch((err) => setMember(blankMember))\n        .finally(() => setLoadingMember(false))\n      fetchStoreCredit(memberId, token, setStoreCredit)\n      fetchMemberOrders(memberId, token, setOrders)\n    }\n  }, [memberId, token])\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n\n    const path = memberId === 'new' ? '/create' : '/update'\n\n    fetch(`${API_HOST}/member${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ member, createNewUser })\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch((err) => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      {loadingMember ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={6}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                minHeight: '54px'\n              }}\n              className={classes.sticky}\n            >\n              <Tooltip title=\"BACK TO MEMBERS\">\n                <IconButton\n                  aria-label=\"back to members\"\n                  onClick={() => props.history.push('/members')}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </Tooltip>\n\n              <h2>{memberId === 'new' ? 'Create' : 'Edit'} Member</h2>\n            </div>\n\n            <TextField\n              label=\"email\"\n              fullWidth\n              value={member.registration_email}\n              className={classes.gridItem}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  registration_email: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"name\"\n              fullWidth\n              value={member.name}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  name: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"phone\"\n              fullWidth\n              value={member.phone}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  phone: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"address\"\n              fullWidth\n              value={member.address}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  address: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount\"\n              fullWidth\n              value={member.discount}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  discount: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount type\"\n              fullWidth\n              value={member.discount_type}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  discount_type: event.target.value\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"fees paid\"\n              fullWidth\n              value={member.fees_paid}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  fees_paid: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"store credit\"\n              fullWidth\n              value={member.store_credit}\n              className={classes.gridItem}\n              type=\"number\"\n              helperText=\"note: depreciated, don't use this store_credit field anymore.\"\n            />\n            <TextField\n              label=\"shares\"\n              fullWidth\n              value={member.shares}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  shares: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <InputLabel id=\"prev-import-tag-select-label\">Type</InputLabel>\n              <Select\n                labelId=\"prev-import-tag-select-label\"\n                id=\"prev-import-tag-select\"\n                value={member.member_type}\n                onChange={(event) =>\n                  event.target &&\n                  event.target.value &&\n                  setMember((prevMember) => ({\n                    ...prevMember,\n                    member_type: event.target.value as string\n                  }))\n                }\n              >\n                <MenuItem value=\"consumer-owners\">consumer-owner</MenuItem>\n                <MenuItem value=\"worker-owners\">worker-owner</MenuItem>\n                <MenuItem value=\"producer-owners\">producer owner</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={(\n                      event: React.ChangeEvent<HTMLInputElement>,\n                      checked: boolean\n                    ) => {\n                      setCreateNewUser(checked)\n                    }}\n                    value=\"createNewUser\"\n                  />\n                }\n                label=\"Create User\"\n              />\n            </FormControl>\n\n            <div className={classes.gridItem}>\n              <Button\n                disabled={loading}\n                onClick={() => submitData()}\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                {memberId === 'new' ? 'CREATE' : 'SAVE'}\n              </Button>\n            </div>\n          </Grid>\n\n          <Grid item sm={6} className={classes.sticky} zeroMinWidth>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n\n            {member && member.data && (\n              <dl>\n                {Object.keys(member.data).map((k) => (\n                  <React.Fragment key={`memberdata${k}`}>\n                    <dt>{k}</dt>\n                    <dd>{member.data[k]}</dd>\n                  </React.Fragment>\n                ))}\n              </dl>\n            )}\n\n            {storeCredit !== 0 && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has store credit: {storeCredit}\n                </Typography>\n              </Box>\n            )}\n\n            {orders.length > 0 && (\n              <List\n                component=\"nav\"\n                aria-label=\"member orders\"\n                subheader={\n                  <ListSubheader\n                    component=\"h2\"\n                    className={classes.ordersHeader}\n                  >\n                    Orders ({orders.length})\n                  </ListSubheader>\n                }\n              >\n                {orders.map((order) => (\n                  <ListItem\n                    key={order.id}\n                    button\n                    href={`/orders/edit/${order.id}`}\n                    onClick={() =>\n                      props.history.push(`/orders/edit/${order.id}`)\n                    }\n                  >\n                    <ListItemText\n                      primary={`#${order.id} $${order.total} (${order.item_count})`}\n                      secondary={\n                        order.createdAt &&\n                        new Date(order.createdAt).toLocaleString()\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </Paper>\n  )\n}\n\nexport default withRouter(EditMember)\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport clsx from 'clsx'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport Fab from '@material-ui/core/Fab'\nimport MUISwitch from '@material-ui/core/Switch'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport FaceIcon from '@material-ui/icons/Face'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { darkTheme, lightTheme } from './theme'\nimport { mainListItems } from './listItems' // secondaryListItems\n\nimport { RootState } from './redux'\nimport { UserServiceProps } from './redux/session/reducers'\nimport { checkSession, logout } from './redux/session/actions'\n\nimport { Preferences } from './types/Preferences'\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\nimport { getPreferences, setPreferences } from './redux/preferences/actions'\n\nimport Loading from './Loading'\nimport Dashboard from './dashboard/Dashboard'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ProtectedRoute from './auth/ProtectedRoute'\n// import UserMenu from './auth/UserMenu'\nimport StoreCredits from './members/StoreCredits'\nimport Orders from './orders/Orders'\nimport WholesaleOrders from './wholesaleorders/WholesaleOrders'\nimport Users from './users/Users'\nimport Products from './products/Products'\nimport ImportProducts from './products/ImportProducts'\nimport EditOrder from './orders/EditOrder'\nimport Members from './members/Members'\nimport EditMember from './members/EditMember'\nimport { APP_VERSION } from './constants'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: '100vh'\n    },\n    nav: {\n      // background: theme.palette.primary.main,\n      zIndex: theme.zIndex.speedDial,\n      display: 'flex',\n      // height: '48px',\n      // width: '48px',\n      alignItems: 'center',\n      position: 'fixed',\n      // bottom: theme.spacing(1),\n      // top: 'calc(50vh  - 28px)',\n      top: '-12px',\n      left: '-24px',\n      transition: '200ms ease-in-out',\n      '& svg': {\n        display: 'none'\n      },\n      '&:hover': {\n        top: -6,\n        left: -12\n      },\n      '&:hover svg': {\n        display: 'inline-block'\n      }\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    version: {\n      fontStyle: 'italic',\n      fontSize: '0.8em',\n      flexGrow: 1,\n      alignSelf: 'center',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    content: {\n      marginLeft: '16px'\n    }\n  })\n)\n\ninterface DispatchProps {\n  checkSession: () => void\n  getPreferences: () => void\n  setPreferences: (preferences: Preferences) => void\n  logout: () => void\n}\n\ntype Props = UserServiceProps & PreferencesServiceProps & DispatchProps\n\nexport function App(props: Props) {\n  const [loading, setLoading] = useState(true)\n  const [useDarkTheme, setUseDarkTheme] = useState<null | boolean>(null)\n\n  // checkSession is destructured from props and passed into useEffect\n  // which is a bit confusing since checkSession is also imported. ah scope.\n  const {\n    checkSession,\n    userService,\n    getPreferences,\n    preferencesService,\n    setPreferences\n  } = props\n\n  useEffect(() => {\n    getPreferences && getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      !preferencesService.isFetching &&\n      preferencesService.preferences\n    ) {\n      if (useDarkTheme === null) {\n        setUseDarkTheme(\n          preferencesService.preferences.dark_mode === 'true' ? true : false\n        )\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [preferencesService])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      preferencesService.preferences &&\n      (preferencesService.preferences.dark_mode === 'true' ? true : false) !==\n        useDarkTheme\n    ) {\n      setPreferences({ dark_mode: useDarkTheme ? 'true' : 'false' })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useDarkTheme])\n\n  useEffect(() => {\n    checkSession && checkSession()\n  }, [checkSession])\n\n  useEffect(() => {\n    if (userService) {\n      !userService.isFetching && userService.user && setLoading(false)\n    }\n  }, [userService])\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const theme =\n    preferencesService &&\n    preferencesService.preferences &&\n    preferencesService.preferences.dark_mode === 'true'\n      ? darkTheme\n      : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <div className={classes.nav}>\n                {/* <IconButton\n              edge=\"start\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(true)}\n            >\n              \n            </IconButton> */}\n\n                <Fab\n                  color=\"secondary\"\n                  aria-label=\"menu\"\n                  onClick={() => setOpen(true)}\n                >\n                  <MenuIcon />\n                </Fab>\n              </div>\n            )}\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <Drawer\n                classes={{\n                  paper: clsx(classes.drawerPaper)\n                }}\n                onClose={() => setOpen(false)}\n                open={open}\n              >\n                <List onClick={() => setOpen(false)}>{mainListItems}</List>\n\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => setUseDarkTheme((prev) => !prev)}\n                >\n                  <ListItemText>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <span>Dark Theme</span>\n                      <MUISwitch\n                        checked={\n                          useDarkTheme === null || useDarkTheme === undefined\n                            ? false\n                            : useDarkTheme\n                        }\n                        value=\"useDarkTheme\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </div>\n                  </ListItemText>\n                </ListItem>\n                <Divider />\n                <ListItem button onClick={() => props.logout()}>\n                  <ListItemIcon>\n                    <FaceIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"log out\"\n                    secondary={\n                      <span\n                        style={{\n                          display: 'block',\n                          textOverflow: 'ellipsis',\n                          overflow: 'hidden'\n                        }}\n                      >\n                        {userService && userService.user\n                          ? userService.user.email\n                          : ''}\n                      </span>\n                    }\n                  />\n                </ListItem>\n\n                {/* <List>{secondaryListItems}</List>  */}\n                <div className={classes.version}>\n                  <span>{APP_VERSION}</span>\n                </div>\n              </Drawer>\n            )}\n\n          <main className={classes.content}>\n            {/* ROUTER */}\n\n            {loading ? (\n              <Loading />\n            ) : (\n              <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products\"\n                  component={Products}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products/import\"\n                  component={ImportProducts}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders\"\n                  exact\n                  component={Orders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/edit/:id\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/create\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/wholesaleorders\"\n                  component={WholesaleOrders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/users\"\n                  component={Users}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members\"\n                  component={Members}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members/:id\"\n                  component={EditMember}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/storecredits\"\n                  component={StoreCredits}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/\"\n                  component={Dashboard}\n                />\n              </Switch>\n            )}\n\n            {/* <Box pt={4}>FOOT'r</Box> */}\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState\n): UserServiceProps & PreferencesServiceProps => {\n  return {\n    userService: states.session.userService,\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    checkSession: () => dispatch(checkSession()),\n    getPreferences: () => dispatch(getPreferences()),\n    setPreferences: (preferences: Preferences) =>\n      dispatch(setPreferences(preferences)),\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport bugsnag from '@bugsnag/js'\nimport bugsnagReact from '@bugsnag/plugin-react'\n\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport App from './App'\n\nif (process.env.NODE_ENV === 'production') {\n  const bugsnagClient = bugsnag('a9970532605e3f85a84598092888a776')\n  bugsnagClient.use(bugsnagReact, React)\n  const ErrorBoundary = bugsnagClient.getPlugin('react')\n\n  ReactDOM.render(\n    <ErrorBoundary>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ErrorBoundary>,\n    document.querySelector('#root')\n  )\n} else {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.querySelector('#root')\n  )\n}\n"],"sourceRoot":""}