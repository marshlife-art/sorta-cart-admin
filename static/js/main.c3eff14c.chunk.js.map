{"version":3,"sources":["listItems.tsx","constants.ts","redux/session/actions.ts","redux/preferences/actions.ts","Loading.tsx","dashboard/Title.tsx","dashboard/Orders.tsx","dashboard/Dashboard.tsx","auth/Login.tsx","auth/Register.tsx","auth/ProtectedRoute.tsx","pages/usePageService.ts","pages/EditPageMenu.tsx","pages/EditPage.tsx","pages/Pages.tsx","orders/OrderDetailPanel.tsx","orders/Orders.tsx","wholesaleorders/useWholesaleOrderService.ts","wholesaleorders/EditMenu.tsx","wholesaleorders/WholesaleOrderLineItems.tsx","wholesaleorders/EditWholesaleOrder.tsx","wholesaleorders/AddWholesaleOrderLineItems.tsx","wholesaleorders/WholesaleOrders.tsx","users/NewUserModal.tsx","users/UserRolesMenu.tsx","users/Users.tsx","products/Products.tsx","products/ImportProducts.tsx","orders/useOrderService.ts","orders/OrderLineItems.tsx","orders/LineItemAutocomplete.tsx","orders/MemberAutocomplete.tsx","orders/EditOrder.tsx","members/Members.tsx","members/EditMember.tsx","App.tsx","theme.tsx","redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","index.tsx"],"names":["mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","API_HOST","TAX_RATE","TAX_RATE_STRING","toFixed","ORDER_STATUSES","new","needs_review","pending","complete","void","archived","PAYMENT_STATUSES","balance_due","paid","credit_owed","failed","SHIPMENT_STATUSES","backorder","ready","shipped","partial","canceled","APP_VERSION","process","npm_package_version","require","version","set","user","type","setError","error","isFetching","NULL_USER","id","undefined","email","token","DEFAULT_PREFERENCES","dark_mode","preferences","Loading","Container","fixed","Box","pt","style","textAlign","Title","props","Typography","variant","color","gutterBottom","children","useStyles","makeStyles","theme","seeMore","marginTop","spacing","withRouter","classes","Fragment","className","href","onClick","event","preventDefault","history","push","root","padding","item","paper","display","overflowX","flexDirection","fixedHeight","height","Dashboard","fixedHeightPaper","clsx","Grid","container","xs","md","lg","Paper","marginLeft","form","width","minHeight","justifyContent","title","alignItems","submit","margin","connect","states","ownProps","userService","session","dispatch","login","password","a","async","Promise","resolve","fetch","method","headers","body","JSON","stringify","then","response","json","msg","localStorage","setItem","reason","message","catch","e","console","log","finally","useState","useEffect","role","maxWidth","onSubmit","target","currentTarget","emailEl","elements","namedItem","passwordEl","value","length","TextField","label","name","autoFocus","fullWidth","required","Button","disabled","register","regKey","regKeyParam","URLSearchParams","useLocation","search","get","passwordConfirmEl","regKeyEl","ProtectedRoute","Component","rest","render","isAdmin","pathname","state","from","location","getItem","usePageService","slug","setLoading","status","result","setResult","payload","warn","useAllPagesService","reloadPages","setReloadPages","Authorization","rows","usePageSaveService","page","doSave","setDoSave","setSnackMsg","setSnackOpen","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","withStyles","backgroundColor","palette","main","common","white","MenuItem","EditPageMenu","React","anchorEl","setAnchorEl","handleClose","ButtonGroup","aria-label","startIcon","onSaveBtnClick","aria-controls","aria-haspopup","size","keepMounted","open","Boolean","onClose","window","confirm","onDeleteBtnClick","fontSize","createStyles","row","pageName","marginBottom","marginRight","pageSlug","setPageSlug","content","setPage","loading","pageService","snackOpen","snackMsg","handleSnackClose","match","params","onChange","prevPage","replace","multiline","rowsMax","Snackbar","autoHideDuration","ContentProps","action","IconButton","key","titleText","flexGrow","text","secondary","Default","pages","setPages","allPages","direction","justify","sm","List","Divider","map","idx","path","exact","EditPage","borderLeft","divider","gridHeading","gridItem","paddingBottom","paddingLeft","paddingRight","lastUpdated","OrderDetailPanel","order","line_items","OrderLineItems","adjustments","filter","li","kind","Table","TableHead","TableRow","TableCell","item_count","align","TableBody","scope","vendor","description","data","product","unf","price","selected_unit","quantity","total","colSpan","subtotal","phone","address","User","Member","notes","createdAt","updatedAt","Date","toLocaleString","tableRef","createRef","searchExpanded","setSearchExpanded","isSelecting","setIsSelecting","searchAction","icon","tooltip","isFreeAction","newOrderAction","printAction","orderIds","wOpen","document","innerHTML","err","editAction","actions","setActions","columns","field","filtering","lookup","hidden","query","reject","totalCount","detailPanel","onRowClick","rowData","togglePanel","options","headerStyle","position","top","maxBodyHeight","pageSize","pageSizeOptions","debounceInterval","emptyRowsWhenPaging","selection","onSelectionChange","blankWholesaleOrder","payment_status","shipment_status","useWholesaleOrderService","reload","setReload","useAllWholesaleOrdersService","reloadWholesaleOrders","setReloadWholesaleOrders","useWholesaleOrderSaveService","wholesaleOrder","EditMenu","onProductsExportToCsv","liTable","deleteBtn","minWidth","groupedRow","background","default","groupedRowTotals","typography","h6","lineItems","lineItemData","setLineItemData","groupedLineItems","prevData","productTotal","adjustmentTotal","orderTotal","forEach","acc","qty","pk","liTotal","parseFloat","ws_price_cost","qtySum","totalSum","Object","values","reduce","v","Math","abs","u_price_cost","round","Tooltip","ids","removeLineItem","upc_code","category","sub_category","ws_price","u_price","import_tag","OrderId","keys","editMenu","wholesaleOrderId","setWholesaleOrderId","setWholesaleOrder","wholesaleOrderService","valueFor","prevOrder","FormControl","InputLabel","Select","labelId","setReloadOrders","onExportToCsv","Accept","responseText","filename","navigator","msSaveBlob","blobObject","Blob","anchor","createElement","download","URL","createObjectURL","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","saveStreamCSV","AddWholesaleOrderLineItems","needsRefresh","setNeedsRefresh","refreshTable","useCallback","current","onQueryChange","selectedLineItems","setSelectedLineItems","addAction","handleWholesaleOrderMenuOpen","Array","isArray","wholesaleorderLookup","setWholesaleOrderLookup","toLocaleDateString","wholesaleorderMenuAnchorEl","setWholesaleOrderMenuAnchorEl","handleWholesaleOrderMenuClose","handleWholesaleOrderSelect","filterPlaceholder","wholesaleorder","ExpansionPanel","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","paperNav","list","selectedListItem","noOrdersMsg","wholesaleOrders","setWholesaleOrders","reloadOrders","selectedStatus","setSelectedStatus","allWholesaleOrders","split","reverse","isNaN","parseInt","square","defaultExpanded","loadOrdersForStatus","expandIcon","modal","shadows","ROLES","NewUserModal","setEmail","setRole","setDiabled","includes","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","handleRefresh","UserRolesMenu","handleRoleChange","resp","newUserModalOpen","setNewUserModalOpen","newUserAction","deleteAction","alert","PROPERTY_MAP","c","d","f","g","k","l","m","og","r","w","ft","n","s","y","1","2","3","Products","p","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","setVendorLookup","vendorLookup","CS","EA","codes","code","Chip","zIndex","ImportProducts","setVendor","importTag","setImportTag","prevImportTag","setPrevImportTag","markup","setMarkup","formData","setFormData","setResponse","setImportTagsLookup","importTagsLookup","vendorMenuAnchorEl","setVendorMenuAnchorEl","handleVendorMenuClose","helperText","handleVendorSelect","tag","FormHelperText","inputProps","min","max","step","accept","files","FormData","append","delete","toString","useOrderService","table","borderCollapse","qtyinput","usdFormat","num","line_item","orderSubtotal","sum","i","orderAdjustmentsTotal","items","adjustmentsTotal","orderTaxes","onTaxesChange","onTotalChange","onSubTotalChange","handleQtyChange","indexOf","onLineItemUpdated","payments","pksize","join","liPkSize","unit","handleUnitChange","unit_type","InputLabelProps","shrink","rowSpan","handleDescriptionChange","handlePriceChange","InputProps","startAdornment","InputAdornment","LineItemAutocomplete","setOpen","setOptions","q","setQ","active","products","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onItemSelected","freeSolo","renderInput","endAdornment","CircularProgress","MemberAutocomplete","members","registration_email","member","blankOrder","formInput","liHeader","sticky","breakpoints","up","orderId","setOrderId","setOrder","saving","setSaving","showLiAutocomplete","setShowLiAutocomplete","showMemberAutocomplete","setShowMemberAutocomplete","needToCheckForDiscounts","setNeedToCheckForDiscounts","canApplyMemberDiscount","setCanApplyMemberDiscount","orderService","_order","discount","pOrderId","UserId","discountAmt","canDiscount","discountPrice","discounts","updateLineItem","adjustment","orderLineItems","splice","shouldShowAddMemberDiscount","MemberId","noValidate","autoComplete","persist","success","lineItem","tax","notTaxLineItems","newMemberAction","blankMember","discount_type","fees_paid","store_credit","shares","member_type","loadingMember","setLoadingMember","memberId","setMember","filters","column","prevMember","submitData","nav","left","drawer","flexShrink","drawerPaper","fontStyle","alignSelf","preferencesService","checkSession","getPreferences","rject","parse","logout","removeItem","CssBaseline","edge","Drawer","Login","Register","Orders","EditOrder","WholesaleOrders","Users","Members","EditMember","Pages","createMuiTheme","red","A400","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","store","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.c3eff14c.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport PeopleIcon from '@material-ui/icons/People'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products\">\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/import\">\n      <ListItemIcon>\n        <OpenInBrowserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Import Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/orders\">\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/wholesaleorders\">\n      <ListItemIcon>\n        <LocalShippingIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Wholesale Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/users\">\n      <ListItemIcon>\n        <TagFacesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/members\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Members\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/pages\">\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pages\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n","import { OrderStatus, PaymentStatus, ShipmentStatus } from './types/Order'\n\nexport const API_HOST =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'http://localhost:3000'\n\nexport const TAX_RATE = 0.06175\nexport const TAX_RATE_STRING = `${(TAX_RATE * 100).toFixed(3)}%`\n\ntype OrderStatusLookup = { [key in OrderStatus]: string }\nexport const ORDER_STATUSES: OrderStatusLookup = {\n  new: 'new',\n  needs_review: 'needs review',\n  pending: 'pending',\n  complete: 'complete',\n  void: 'void',\n  archived: 'archived'\n}\n\ntype OrderPaymentStatusLookup = { [key in PaymentStatus]: string }\nexport const PAYMENT_STATUSES: OrderPaymentStatusLookup = {\n  balance_due: 'balance due',\n  paid: 'paid',\n  credit_owed: 'credit owed',\n  failed: 'failed',\n  void: 'void'\n}\n\ntype OrderShipmentStatusLookup = { [key in ShipmentStatus]: string }\nexport const SHIPMENT_STATUSES: OrderShipmentStatusLookup = {\n  backorder: 'backorder',\n  pending: 'pending',\n  ready: 'ready',\n  shipped: 'shipped',\n  partial: 'partial',\n  canceled: 'canceled'\n}\n\nexport const APP_VERSION = `v${process.env.npm_package_version ||\n  require('../package.json').version} made with ♥ in NYC`\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { User, LoginError } from '../../types/User'\nimport { API_HOST } from '../../constants'\n\nexport interface SetAction {\n  type: 'SET'\n  user: User\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR'\n  error: LoginError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (user: User): SetAction => {\n  return { type: 'SET', user }\n}\nexport const setError = (error: LoginError): SetError => {\n  return { type: 'SET_ERROR', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING', isFetching }\n}\n\nconst NULL_USER: User = {\n  id: undefined,\n  email: undefined,\n  token: undefined\n}\n\nexport const checkSession = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      const token = localStorage && localStorage.getItem('token')\n\n      if (!token) {\n        // reject('no token')\n        dispatch(isFetching(false))\n        dispatch(set({ email: undefined, token: undefined }))\n        resolve()\n        return\n      }\n\n      fetch(`${API_HOST}/check_session`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('check_session', response)\n          if (response.msg === 'ok' && response.user) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(set(NULL_USER))\n          }\n        })\n        .catch(err => {\n          console.warn('check_session caught err:', err)\n          // hmm, maybe the API is just down? ...is it really necessary to NULL the user?\n          dispatch(set(NULL_USER))\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const register = (\n  regKey: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ regKey, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('register error:', e)\n          dispatch(\n            setError({\n              error: 'error',\n              reason: 'unable to register right now :('\n            })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('[session/actions] user login', response)\n          if (response.msg === 'ok' && response.user && response.user.token) {\n            localStorage && localStorage.setItem('token', response.user.token)\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch(e => {\n          console.log('login error:', e)\n          dispatch(\n            setError({ error: 'error', reason: 'unable to login right now :(' })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>(resolve => {\n      dispatch(isFetching(true))\n      localStorage && localStorage.removeItem('token')\n      dispatch(set(NULL_USER))\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'false'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React from 'react'\nimport { Container } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nexport default function Loading() {\n  return (\n    <Container fixed>\n      <Box pt={4} style={{ textAlign: 'center' }}>\n        L O A D I N G . . .\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: { children: React.ReactNode }) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\n// import Table from '@material-ui/core/Table'\n// import TableBody from '@material-ui/core/TableBody'\n// import TableCell from '@material-ui/core/TableCell'\n// import TableHead from '@material-ui/core/TableHead'\n// import TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}))\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <Title>ORDERZ</Title>\n      {/* <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table> */}\n      <div className={classes.seeMore}>\n        <Link\n          color=\"textPrimary\"\n          href=\"#\"\n          onClick={(event: any) => {\n            event.preventDefault()\n            props.history.push('/orders')\n          }}\n        >\n          SEE MORE ORDERS\n        </Link>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Orders)\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n// import Link from '@material-ui/core/Link'\nimport Orders from './Orders'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  item: {\n    // zIndex: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflowX: 'hidden',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {/* Chart */}\n        <Grid item xs={12} md={8} lg={9} className={classes.item}>\n          <Paper className={fixedHeightPaper}>\n            <span style={{ marginLeft: '1em' }}>CHART</span>\n          </Paper>\n        </Grid>\n        {/* Recent Deposits */}\n        <Grid item xs={12} md={4} lg={3} className={classes.item}>\n          <Paper className={fixedHeightPaper}>DEPOZ</Paper>\n        </Grid>\n        {/* Recent Orders */}\n        <Grid item xs={12} className={classes.item}>\n          <Paper className={classes.paper}>\n            <Orders />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { login } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  login: (email: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction Login(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n    const emailEl = target.elements.namedItem('email') as HTMLInputElement\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n\n    if (\n      emailEl &&\n      emailEl.value.length > 0 &&\n      passwordEl &&\n      passwordEl.value.length > 0\n    ) {\n      props.login(emailEl.value, passwordEl.value)\n    }\n  }\n\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={doLogin} className={classes.form}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" display=\"block\">\n            MARSH COOP\n          </Typography>\n          <Typography variant=\"overline\" display=\"inline\">\n            admin\n          </Typography>\n        </div>\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoFocus\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps, useLocation } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { register } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  register: (regKey: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    // minHeight: 'calc(100vh - 64px)'\n  },\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nfunction Register(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n    const passwordConfirmEl = target.elements.namedItem(\n      'password_confirm'\n    ) as HTMLInputElement\n\n    let regKey: string = ''\n\n    if (regKeyParam) {\n      regKey = regKeyParam\n    }\n\n    if (!regKey) {\n      const regKeyEl = target.elements.namedItem('regKey') as HTMLInputElement\n      if (regKeyEl && regKeyEl.value.length > 1) {\n        regKey = regKeyEl.value\n      }\n    }\n\n    if (!regKey) {\n      setError('no registration key')\n    }\n\n    if (\n      passwordEl &&\n      passwordEl.value.length > 0 &&\n      passwordConfirmEl &&\n      passwordConfirmEl.value.length > 0\n    ) {\n      if (passwordConfirmEl.value !== passwordEl.value) {\n        setError('passwords do not match')\n      } else {\n        props.register(regKey, passwordConfirmEl.value)\n      }\n    }\n  }\n\n  let query = useQuery()\n  const regKeyParam = query.get('regKey')\n  console.log('[Register] regKeyParam', regKeyParam)\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={doLogin} className={classes.form}>\n        {!regKeyParam && (\n          <TextField\n            label=\"registration key\"\n            name=\"regKey\"\n            type=\"text\"\n            autoFocus\n            fullWidth\n            required\n          />\n        )}\n\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoFocus={!!regKeyParam}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password_confirm\"\n          name=\"password_confirm\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            submit\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    register: (regKey, password) => dispatch(register(regKey, password))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Register))\n","import React from 'react'\nimport { RouteProps, Redirect, Route } from 'react-router-dom'\n\nimport { UserServiceProps, UserService } from '../redux/session/reducers'\n\nconst isAdmin = (userService: UserService): boolean =>\n  userService.user && userService.user.role && userService.user.role === 'admin'\n    ? true\n    : false\n\ninterface ProtectedRouteProps {\n  children?: React.ReactNode\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  userService,\n  children,\n  ...rest\n}: ProtectedRouteProps & RouteProps & UserServiceProps) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAdmin(userService) ? (\n        Component ? (\n          <Component {...props} />\n        ) : (\n          children\n        )\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default ProtectedRoute\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst usePageService = (\n  slug: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!slug || slug.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page?slug=${slug}`)\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Page })\n      })\n      .catch(error => {\n        console.warn('usePageService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [slug, setLoading])\n\n  return result\n}\n\nconst useAllPagesService = (\n  reloadPages: boolean,\n  setReloadPages: (reloadPages: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadPages &&\n      fetch(`${API_HOST}/pages`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('page', response)\n          setResult({ status: 'loaded', payload: response.rows as Page[] })\n        })\n        .catch(error => {\n          console.warn('usePageService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => setReloadPages(false))\n  }, [reloadPages, setReloadPages])\n\n  return result\n}\n\nconst usePageSaveService = (\n  page: Page | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !page || page.slug.length === 0) {\n      setDoSave(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('usePageSaveService response:', response)\n        setResult({ status: 'loaded', payload: response as Page })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('usePageSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [page, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport { usePageService, useAllPagesService, usePageSaveService }\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport SaveIcon from '@material-ui/icons/Save'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Page } from '../types/Page'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditPageMenuProps {\n  page: Page\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n}\n\nexport default function EditPageMenu(props: EditPageMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.page.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete page\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport Loading from '../Loading'\nimport { usePageService, usePageSaveService } from './usePageService'\nimport EditPageMenu from './EditPageMenu'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    row: {\n      display: 'flex'\n    },\n    pageName: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n)\n\nfunction EditPage(props: RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n\n  const [pageSlug, setPageSlug] = useState('')\n  const [page, setPage] = useState<Page>({ slug: '', content: '' })\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n\n  const pageService = usePageService(pageSlug, setLoading)\n\n  useEffect(() => {\n    if (pageService.status === 'loaded') {\n      if (pageService.payload) {\n        setPage(pageService.payload)\n      } else {\n        setPage({ slug: pageSlug, content: '' })\n      }\n    }\n  }, [pageService, pageSlug])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handlePageContentChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPage(prevPage => ({ ...prevPage, content: event.target.value }))\n  }\n\n  const handlePageNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage(prevPage => ({ ...prevPage, slug: event.target.value }))\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const slug = props.match.params.slug\n\n  useEffect(() => {\n    if (slug) {\n      setPageSlug(slug)\n    }\n  }, [slug])\n\n  const onSaveBtnClick = (): void => {\n    setDoSave(true)\n  }\n\n  usePageSaveService(page, doSave, setDoSave, setSnackMsg, setSnackOpen)\n\n  const onDeleteBtnClick = (): void => {\n    fetch(`${API_HOST}/page`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(page)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setSnackMsg(response.msg)\n          setSnackOpen(true)\n        } else {\n          props.history.replace('/pages')\n        }\n      })\n      .catch(error => {\n        console.warn('delete page fetch caught err:', error)\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n  }\n\n  return page ? (\n    <>\n      <div className={classes.row}>\n        <TextField\n          className={classes.pageName}\n          label=\"permalink\"\n          fullWidth\n          value={page.slug}\n          onChange={handlePageNameChange}\n        />\n\n        <EditPageMenu\n          page={page}\n          onSaveBtnClick={onSaveBtnClick}\n          onDeleteBtnClick={onDeleteBtnClick}\n        />\n      </div>\n\n      {loading ? (\n        <Loading />\n      ) : (\n        <TextField\n          label=\"content\"\n          multiline\n          fullWidth\n          rows={4}\n          rowsMax={28}\n          value={page.content}\n          onChange={handlePageContentChange}\n        />\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditPage)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditPage from './EditPage'\nimport { useAllPagesService } from './usePageService'\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport { Page } from '../types/Page'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    }\n  })\n)\n\nconst Default = () => <h3>pages!</h3>\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Pages(props: Props & RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [pages, setPages] = useState<Page[]>([])\n  const [reloadPages, setReloadPages] = useState(true)\n  const allPages = useAllPagesService(reloadPages, setReloadPages)\n\n  useEffect(() => {\n    allPages.status === 'loaded' && setPages(allPages.payload)\n  }, [allPages])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addPage() {\n    props.history.push('/pages/edit/newpage')\n    setSnackOpen(true)\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid xs={12} sm={4} md={3} lg={2} item>\n          <Paper className={classes.paper}>\n            <List>\n              <ListItem>\n                <ListItemText>\n                  <div className={classes.title}>\n                    <span className={classes.titleText}>PAGES</span>\n                    <IconButton\n                      aria-label=\"add page\"\n                      title=\"add page\"\n                      onClick={() => addPage()}\n                    >\n                      <Add />\n                    </IconButton>\n                  </div>\n                </ListItemText>\n              </ListItem>\n              <Divider />\n              {pages.map((page: Page, idx: number) => (\n                <ListItem\n                  button\n                  component={Link}\n                  to={`/pages/edit/${page.slug}`}\n                  key={`page${idx}`}\n                >\n                  <ListItemText primary={page.slug} />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        <Grid xs={12} sm={8} md={9} lg={10} item>\n          <Paper className={classes.paper}>\n            <Switch>\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages\"\n                component={Default}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages/edit/:slug\"\n                component={EditPage}\n              />\n            </Switch>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new page!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Pages))\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\n\nimport { Order } from '../types/Order'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(2),\n      borderLeft: `${theme.spacing(6)}px solid ${theme.palette.divider}`\n    },\n    gridHeading: {\n      color: theme.palette.text.secondary\n    },\n    gridItem: {\n      paddingBottom: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center'\n    },\n    lastUpdated: {\n      marginLeft: theme.spacing(2)\n    }\n  })\n)\n\nexport default function OrderDetailPanel(props: { order: Order }) {\n  const classes = useStyles()\n  const order = props.order\n  const line_items = props.order.OrderLineItems || []\n  const adjustments = line_items.filter(li => li.kind !== 'product')\n\n  return (\n    <div className={classes.root}>\n      <Table aria-label=\"order details table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">\n              Line Items ({order.item_count})\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              price\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              unit\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              qty\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {line_items.map(\n            (li, idx) =>\n              li.kind === 'product' && (\n                <TableRow key={`orderli${idx}`}>\n                  <TableCell component=\"td\" scope=\"row\">\n                    {li.vendor && `[${li.vendor}] ${li.description} `}\n                    {li.data && li.data.product ? `${li.data.product.unf}` : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.price}</TableCell>\n                  <TableCell align=\"right\">{li.selected_unit}</TableCell>\n                  <TableCell align=\"right\">{li.quantity}</TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              )\n          )}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Sub Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.subtotal}\n            </TableCell>\n          </TableRow>\n\n          {adjustments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Adjustments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {adjustments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {`(${li.kind}) `} {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              customer\n            </Typography>\n            <Typography variant=\"body1\">\n              {order.name}{' '}\n              <Link color=\"primary\" href={`mailto:${order.email}`}>\n                {order.email}\n              </Link>\n              <br />\n              <Link color=\"primary\" href={`tel:${order.phone}`}>\n                {order.phone}\n              </Link>\n              <br />\n              {order.address} <br />\n            </Typography>\n          </div>\n        </Grid>\n        {order.User && order.User !== order.Member && (\n          <Grid item xs={4}>\n            <div className={classes.gridItem}>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                className={classes.gridHeading}\n                gutterBottom\n              >\n                created by\n              </Typography>\n              <Typography variant=\"body1\">\n                <Link color=\"primary\" href={`mailto:${order.User.email}`}>\n                  {order.User.email}\n                </Link>{' '}\n                {order.User.role && <>({order.User.role}) </>}\n              </Typography>\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              notes\n            </Typography>\n            <Typography variant=\"body2\">{order.notes}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      {order.createdAt !== order.updatedAt && (\n        <div className={classes.lastUpdated}>\n          <i>Last updated</i> {new Date(order.updatedAt).toLocaleString()}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\nimport { Order } from '../types/Order'\nimport OrderDetailPanel from './OrderDetailPanel'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'CLOSE SEARCH' : 'SEARCH',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newOrderAction = {\n    icon: 'add',\n    tooltip: 'NEW ORDER',\n    isFreeAction: true,\n    onClick: () => props.history.push('/orders/create')\n  }\n\n  const printAction = {\n    tooltip: 'PRINT',\n    icon: 'print',\n    onClick: (e: any, data: Order[]) => {\n      const orderIds = data.map(order => order.id)\n      console.log('printAction orderIds:', orderIds, ' data:', data)\n\n      fetch(`${API_HOST}/orders/print`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ orderIds })\n      })\n        .then(response => response.text())\n        .then(result => {\n          try {\n            // eslint-disable-next-line\n            const wOpen = window.open('about:blank')\n            if (wOpen) {\n              wOpen.document.body.innerHTML += result\n            }\n          } catch (e) {\n            console.warn('caught error doing this razzle dazze shit e:', e)\n          }\n        })\n        .catch(err => {\n          console.warn(err)\n        })\n    }\n  }\n\n  const editAction = {\n    tooltip: 'EDIT',\n    icon: 'edit',\n    onClick: (e: any, data: Order[]) => {\n      data[0] && data[0].id && props.history.push(`/orders/edit/${data[0].id}`)\n    }\n  }\n\n  // const archiveAction = {\n  //   tooltip: 'ARCHIVE',\n  //   icon: 'archive',\n  //   onClick: (e: any, data: Order[]) => {\n  //     console.log('archive these muthafuckaz')\n  //   }\n  // }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newOrderAction\n  ])\n\n  useEffect(() => {\n    !isSelecting && setActions([searchAction, newOrderAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, isSelecting]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (order: Order) => new Date(order.createdAt).toLocaleString()\n          },\n          {\n            title: 'status',\n            field: 'status',\n            type: 'string',\n            lookup: ORDER_STATUSES\n          },\n          {\n            title: 'payment status',\n            field: 'payment_status',\n            type: 'string',\n            lookup: PAYMENT_STATUSES\n          },\n          {\n            title: 'shipment status',\n            field: 'shipment_status',\n            type: 'string',\n            lookup: SHIPMENT_STATUSES\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'email', field: 'email', type: 'string', filtering: false },\n          {\n            title: 'items',\n            field: 'item_count',\n            type: 'numeric',\n            filtering: false\n          },\n          {\n            title: 'total',\n            field: 'total',\n            type: 'currency',\n            filtering: false\n          },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            hidden: true\n            // render: (order: Order) =>\n            //   order.updatedAt\n            //     ? new Date(order.updatedAt).toLocaleString()\n            //     : null\n          },\n          { title: 'phone', field: 'phone', type: 'string', hidden: true },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'notes', field: 'notes', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'history', field: 'history', type: 'string', hidden: true },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            // console.log('query:', query)\n            fetch(`${API_HOST}/orders`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                // console.log('result', result)\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        detailPanel={order => <OrderDetailPanel order={order} />}\n        onRowClick={(event, rowData, togglePanel) =>\n          togglePanel && togglePanel()\n        }\n        title=\"Orders\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        onSelectionChange={(data: Order[], rowData?: Order | undefined) => {\n          searchExpanded && setSearchExpanded(false)\n          if (data.length === 0) {\n            setIsSelecting(false)\n            return\n          }\n          setIsSelecting(true)\n          if (data.length === 1) {\n            setActions([printAction, editAction])\n          } else {\n            setActions([printAction])\n          }\n        }}\n        actions={actions}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Orders)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\nimport { OrderStatus } from '../types/Order'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankWholesaleOrder: WholesaleOrder = {\n  id: '',\n  vendor: '',\n  notes: '',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  createdAt: '',\n  updatedAt: ''\n}\n\nconst useWholesaleOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void,\n  reload: boolean,\n  setReload: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id) {\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    if (id === 'new') {\n      setResult({ status: 'loaded', payload: blankWholesaleOrder })\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    fetch(`${API_HOST}/wholesaleorder/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({ status: 'loaded', payload: response as WholesaleOrder })\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n        setReload(false)\n      })\n  }, [id, setLoading, reload, setReload])\n\n  return result\n}\n\nconst useAllWholesaleOrdersService = (\n  status: OrderStatus,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  reloadWholesaleOrders: boolean,\n  setReloadWholesaleOrders: (reloadWholesaleOrders: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadWholesaleOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          setResult({\n            status: 'loaded',\n            payload: response.data as WholesaleOrder[]\n          })\n        })\n        .catch(error => {\n          console.warn('useWholesaleOrderService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => {\n          setReloadWholesaleOrders(false)\n          setLoading(false)\n        })\n  }, [reloadWholesaleOrders, setReloadWholesaleOrders, status, setLoading])\n\n  return result\n}\n\nconst useWholesaleOrderSaveService = (\n  wholesaleOrder: WholesaleOrder | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !wholesaleOrder || !wholesaleOrder.id) {\n      setDoSave(false)\n      return\n    }\n\n    const path =\n      wholesaleOrder.id === 'new'\n        ? '/wholesaleorder/create'\n        : '/wholesaleorder/upsert'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(wholesaleOrder)\n    })\n      .then(response => response.json())\n      .then(response => {\n        setResult({\n          status: 'loaded',\n          payload: response.order as WholesaleOrder\n        })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch(error => {\n        console.warn('useWholesaleOrderSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [wholesaleOrder, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport {\n  useWholesaleOrderService,\n  useAllWholesaleOrdersService,\n  useWholesaleOrderSaveService\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport SaveIcon from '@material-ui/icons/Save'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport FileIcon from '@material-ui/icons/FileCopy'\n\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditWholesaleOrderMenuProps {\n  wholesaleOrder: WholesaleOrder\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n  onExportToCsv: () => void\n  onProductsExportToCsv: () => void\n}\n\nexport default function EditMenu(props: EditWholesaleOrderMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SaveIcon />}\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"wholesaleorders-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"wholesaleorders-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete wholesale order\" />\n        </StyledMenuItem>\n\n        {/* <StyledMenuItem\n          onClick={() => {\n            props.onExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export to .csv\" />\n        </StyledMenuItem> */}\n\n        <StyledMenuItem\n          onClick={() => {\n            props.onProductsExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"export products to .csv\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { LineItemData, GroupedItem } from './EditWholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    liTable: {\n      marginTop: theme.spacing(4)\n    },\n    deleteBtn: {\n      width: '88px'\n    },\n    unf: {\n      minWidth: '105px'\n    },\n    groupedRow: {\n      backgroundColor: theme.palette.background.default\n    },\n    groupedRowTotals: theme.typography.h6\n  })\n)\n\nfunction WholesaleOrderLineItems(\n  props: {\n    wholesaleOrder?: WholesaleOrder\n    setReload: React.Dispatch<React.SetStateAction<boolean>>\n    lineItemData: LineItemData\n    setLineItemData: React.Dispatch<React.SetStateAction<LineItemData>>\n  } & RouteComponentProps\n) {\n  const classes = useStyles()\n  const lineItems = props?.wholesaleOrder?.OrderLineItems\n  const { lineItemData, setLineItemData } = props\n\n  function calc() {\n    let groupedLineItems: {\n      [key: string]: GroupedItem\n    } = {}\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      productTotal: 0,\n      adjustmentTotal: 0,\n      orderTotal: 0\n    }))\n\n    lineItems?.forEach(li => {\n      const id = li.data && li.data.product && li.data.product.id\n      const key = id ? id : li.description\n\n      let acc = groupedLineItems[key]\n\n      const qty =\n        li.data && li.data.product && li.selected_unit === 'EA'\n          ? li.quantity / li.data.product.pk\n          : li.quantity\n\n      const liTotal =\n        li.data && li.data.product\n          ? +(parseFloat(li.data.product.ws_price_cost) * qty).toFixed(2)\n          : li.total\n\n      groupedLineItems[key] = {\n        qtySum: acc ? acc.qtySum + qty : qty,\n        totalSum: acc ? acc.totalSum + liTotal : liTotal,\n        product: li && li.data && li.data.product,\n        vendor: li.vendor,\n        description: li.description,\n        line_items: acc ? [...acc.line_items, li] : [li]\n      }\n\n      setLineItemData(prevData => ({\n        ...prevData,\n        productTotal: prevData.productTotal + parseFloat(`${liTotal}`),\n        orderTotal: prevData.orderTotal + liTotal\n      }))\n    })\n\n    Object.values(groupedLineItems).forEach(item => {\n      // check if qtySum is not a round number (i.e. a partial case)\n      if (item.qtySum % 1 !== 0 && item.product) {\n        const pk = item.product.pk\n        const qty = item.line_items.reduce((acc, v) => acc + v.quantity, 0)\n        // quantity needed to complete a case\n        const quantity = Math.abs((qty % pk) - pk)\n        const price = +(\n          quantity * parseFloat(item.product.u_price_cost)\n        ).toFixed(2)\n\n        const total = price\n        item.line_items.push({\n          quantity,\n          price,\n          total,\n          kind: 'adjustment',\n          description: `add ${quantity} EA`\n        })\n        // also add to the sums when creating this adjustment.\n        item.totalSum = item.totalSum + total\n        item.qtySum = Math.round(item.qtySum + quantity / pk)\n\n        setLineItemData(prevData => ({\n          ...prevData,\n          adjustmentTotal: prevData.adjustmentTotal + +total,\n          orderTotal: prevData.orderTotal + total\n        }))\n      }\n    })\n\n    setLineItemData(prevData => ({\n      ...prevData,\n      groupedLineItems\n    }))\n  }\n\n  useEffect(calc, [lineItems])\n\n  function removeLineItem(item: GroupedItem) {\n    const ids = item.line_items.map(li => li.id).filter(a => a)\n    if (ids && ids.length && window.confirm('are you sure?')) {\n      const token = localStorage && localStorage.getItem('token')\n      fetch(`${API_HOST}/wholesaleorder/removelineitem`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ ids })\n      })\n        .then(response => response.json())\n        .then(response => !response.error && props.setReload(true))\n        .catch(err => console.warn('members removelineitem caught err', err))\n    }\n  }\n\n  return (\n    <Table size=\"small\" className={classes.liTable}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.deleteBtn} />\n          <TableCell className={classes.unf}>unf</TableCell>\n          <TableCell>description</TableCell>\n          <TableCell>price</TableCell>\n          <TableCell>cost</TableCell>\n          <TableCell>pk</TableCell>\n\n          <TableCell align=\"center\">qty</TableCell>\n          <TableCell align=\"right\">total</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.values(lineItemData.groupedLineItems).map(\n          (item: GroupedItem, idx: number) => (\n            <React.Fragment key={`wsgli${idx}`}>\n              <TableRow className={classes.groupedRow}>\n                <TableCell className={classes.deleteBtn}>\n                  <Tooltip title=\"remove these line item(s)\">\n                    <IconButton\n                      aria-label=\"remove these line item(s)\"\n                      onClick={() => removeLineItem(item)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${\n                      item.product.unf\n                        ? item.product.unf\n                        : item.product.upc_code\n                    } `}\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${item.product.name} ${item.product.description}`}\n                  {item.product && (\n                    <>\n                      <br />\n                      {`${item.product.upc_code} ${item.product.category} > ${item.product.sub_category}`}{' '}\n                    </>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && item.product.ws_price}\n                  {item.product &&\n                  item.product.ws_price !== item.product.u_price ? (\n                    <>\n                      <br />\n                      {`(${item.product.u_price}EA)`}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && ` ${item.product.ws_price_cost}`}\n                  <br />\n                  {item.product &&\n                    `${\n                      item.product.ws_price_cost !== item.product.u_price_cost\n                        ? `(${item.product.u_price_cost}EA)`\n                        : ''\n                    }`}\n                </TableCell>\n                <TableCell>{item.product && item.product.pk}</TableCell>\n\n                <TableCell align=\"center\" className={classes.groupedRowTotals}>\n                  {+item.qtySum.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.groupedRowTotals}>\n                  {item.totalSum.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              {item.line_items.map(li => (\n                <TableRow key={`wsli${li.id}`}>\n                  <TableCell colSpan={2} />\n                  <TableCell>\n                    [{li.kind}] {li.vendor}{' '}\n                    {li.data && li.data.product && li.data.product.import_tag\n                      ? li.data.product.import_tag\n                      : li.description}{' '}\n                    {li.OrderId && (\n                      <Link\n                        color=\"primary\"\n                        href=\"\"\n                        onClick={(e: any) => {\n                          e.preventDefault()\n                          props.history.push(`/orders/edit/${li.OrderId}`)\n                        }}\n                      >\n                        Order #{li.OrderId}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell>\n                    {li.kind === 'adjustment'\n                      ? `${li.quantity} EA`\n                      : `${li.quantity} ${li.selected_unit}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {li.data && li.data.product && li.selected_unit === 'EA'\n                      ? +(li.quantity / li.data.product.pk).toFixed(2)\n                      : null}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              ))}\n            </React.Fragment>\n          )\n        )}\n\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            ITEM COUNT\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            PRODUCT TOTAL\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            ADJUSTMENTS TOTAL\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            TOTAL\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            {Object.keys(lineItemData.groupedLineItems).length}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.productTotal.toFixed(2)}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.adjustmentTotal.toFixed(2)}\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            {lineItemData.orderTotal.toFixed(2)}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default withRouter(WholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { LineItem } from '../types/Order'\nimport { Product } from '../types/Product'\nimport {\n  WholesaleOrder,\n  WholesaleOrderRouterProps\n} from '../types/WholesaleOrder'\nimport { OrderStatus, ShipmentStatus, PaymentStatus } from '../types/Order'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport Loading from '../Loading'\nimport {\n  useWholesaleOrderService,\n  useWholesaleOrderSaveService\n} from './useWholesaleOrderService'\nimport EditMenu from './EditMenu'\nimport WholesaleOrderLineItems from './WholesaleOrderLineItems'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    vendor: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    editMenu: {\n      padding: `${theme.spacing(2)}px 0`,\n      textAlign: 'right'\n    }\n  })\n)\n\nexport interface GroupedItem {\n  qtySum: number\n  totalSum: number\n  product: Product | undefined\n  vendor: string | undefined\n  description: string\n  line_items: LineItem[]\n}\n\nexport interface LineItemData {\n  groupedLineItems: {\n    [key: string]: GroupedItem\n  }\n  orderTotal: number\n  productTotal: number\n  adjustmentTotal: number\n}\n\ninterface EditWholesaleOrderProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction EditWholesaleOrder(\n  props: EditWholesaleOrderProps &\n    RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const [wholesaleOrderId, setWholesaleOrderId] = useState('')\n  const [wholesaleOrder, setWholesaleOrder] = useState<WholesaleOrder>()\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [reload, setReload] = useState(true)\n\n  const [lineItemData, setLineItemData] = useState<LineItemData>({\n    groupedLineItems: {},\n    productTotal: 0,\n    adjustmentTotal: 0,\n    orderTotal: 0\n  })\n\n  const wholesaleOrderService = useWholesaleOrderService(\n    wholesaleOrderId,\n    setLoading,\n    reload,\n    setReload\n  )\n\n  useEffect(() => {\n    if (wholesaleOrderService.status === 'loaded') {\n      if (wholesaleOrderService.payload) {\n        setWholesaleOrder(wholesaleOrderService.payload)\n      }\n    }\n  }, [wholesaleOrderService, wholesaleOrderId])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handleOrderNotesChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          notes: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleOrderVendorChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          vendor: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          status: event.target.value as OrderStatus\n        }\n      }\n    })\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          payment_status: event.target.value as PaymentStatus\n        }\n      }\n    })\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder(prevOrder => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          shipment_status: event.target.value as ShipmentStatus\n        }\n      }\n    })\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const id = props.match.params.id\n\n  useEffect(() => {\n    if (id) {\n      setWholesaleOrderId(id)\n    }\n  }, [id])\n\n  const onSaveBtnClick = (): void => {\n    if (wholesaleOrderId === 'new') {\n      setWholesaleOrder(prevOrder => {\n        if (prevOrder) {\n          return {\n            ...prevOrder,\n            id: 'new'\n          }\n        }\n      })\n    }\n    setDoSave(true)\n    props.setReloadOrders(true)\n  }\n\n  useWholesaleOrderSaveService(\n    wholesaleOrder,\n    doSave,\n    setDoSave,\n    setSnackMsg,\n    setSnackOpen\n  )\n\n  const onDeleteBtnClick = (): void => {\n    wholesaleOrder &&\n      fetch(`${API_HOST}/wholesaleorder`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ id: wholesaleOrder.id })\n      })\n        .then(response => response.json())\n        .then(response => {\n          if (response.error) {\n            setSnackMsg(response.msg)\n            setSnackOpen(true)\n          } else {\n            props.history.replace('/wholesaleorders')\n          }\n        })\n        .catch(error => {\n          console.warn('delete wholesaleOrder fetch caught err:', error)\n          setSnackMsg(`o noz! ${error}`)\n          setSnackOpen(true)\n        })\n  }\n\n  const saveStreamCSV = (filename: string, text: any) => {\n    // lolol shoutout to https://stackoverflow.com/questions/37095233/downloading-and-saving-data-with-fetch-from-authenticated-rest\n    if (window.navigator.msSaveBlob) {\n      // IE 10 and later, and Edge.\n      const blobObject = new Blob([text], { type: 'text/csv' })\n      window.navigator.msSaveBlob(blobObject, filename)\n    } else {\n      // Everthing else (except old IE).\n      // Create a dummy anchor (with a download attribute) to click.\n      const anchor = document.createElement('a')\n      anchor.download = filename\n      if (window.URL.createObjectURL) {\n        // Everything else new.\n        const blobObject = new Blob([text], { type: 'text/csv' })\n        anchor.href = window.URL.createObjectURL(blobObject)\n      } else {\n        // Fallback for older browsers (limited to 2MB on post-2010 Chrome).\n        // Load up the data into the URI for \"download.\"\n        anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(text)\n      }\n      // Now, click it.\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        anchor.dispatchEvent(event)\n      } else {\n        anchor.click()\n      }\n    }\n  }\n\n  const onExportToCsv = (): void => {\n    console.log('handle onExportToCsv wholesaleOrder:', lineItemData)\n  }\n  const onProductsExportToCsv = (): void => {\n    const vendor = wholesaleOrder && wholesaleOrder.vendor\n    if (!vendor) {\n      return\n    }\n    fetch(`${API_HOST}/whosaleorder/exportcsv`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/csv',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        lineItemData\n      })\n    })\n      .then(response => response.text())\n      .then(responseText => saveStreamCSV(`${vendor}.csv`, responseText))\n      .catch(error => {\n        console.warn('wholesaleOrder onExportToCsv fetch caught err:', error)\n        setSnackMsg(`o noz! ran into a problem ;(`)\n        setSnackOpen(true)\n      })\n  }\n\n  function valueFor(field: keyof WholesaleOrder) {\n    return wholesaleOrder && wholesaleOrder[field] ? wholesaleOrder[field] : ''\n  }\n\n  return wholesaleOrder ? (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item sm={5}>\n              <TextField\n                className={classes.vendor}\n                label=\"vendor\"\n                fullWidth\n                value={valueFor('vendor')}\n                onChange={handleOrderVendorChange}\n              />\n              <FormControl fullWidth>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={7}>\n              <TextField\n                label=\"notes\"\n                multiline\n                fullWidth\n                rows={4}\n                rowsMax={28}\n                value={valueFor('notes')}\n                onChange={handleOrderNotesChange}\n              />\n              <div className={classes.editMenu}>\n                <EditMenu\n                  wholesaleOrder={wholesaleOrder}\n                  onSaveBtnClick={onSaveBtnClick}\n                  onDeleteBtnClick={onDeleteBtnClick}\n                  onExportToCsv={onExportToCsv}\n                  onProductsExportToCsv={onProductsExportToCsv}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <WholesaleOrderLineItems\n            wholesaleOrder={wholesaleOrder}\n            setReload={setReload}\n            lineItemData={lineItemData}\n            setLineItemData={setLineItemData}\n          />\n        </>\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditWholesaleOrder)\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport MaterialTable from 'material-table'\n\nimport { LineItem } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100vw'\n    }\n  })\n)\n\ninterface AddWholesaleOrderLineItemsProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction AddWholesaleOrderLineItems(props: AddWholesaleOrderLineItemsProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const [selectedLineItems, setSelectedLineItems] = useState<string[]>()\n\n  const addAction = {\n    tooltip: 'ADD LINE ITEMS TO ORDER',\n    icon: 'add',\n    onClick: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      data: LineItem | LineItem[]\n    ) => {\n      handleWholesaleOrderMenuOpen(event)\n      if (Array.isArray(data)) {\n        // ain't nobody (tsc) tell me nothin\n        setSelectedLineItems(data.map(li => li.id) as string[])\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [wholesaleorderLookup, setWholesaleOrderLookup] = useState<\n    Array<{ id: string; name: string }>\n  >()\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ status: ['new', 'needs_review'] })\n    })\n      .then(response => response.json())\n      .then(result =>\n        setWholesaleOrderLookup(\n          result.data.map(\n            (order: { id: string; vendor: string; createdAt: string }) => ({\n              id: order.id,\n              name: `${order.vendor} ${new Date(\n                order.createdAt\n              ).toLocaleDateString()}`\n            })\n          )\n        )\n      )\n      .catch(console.warn)\n  }, [])\n  const [\n    wholesaleorderMenuAnchorEl,\n    setWholesaleOrderMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleWholesaleOrderMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setWholesaleOrderMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleWholesaleOrderMenuClose = () => {\n    setSelectedLineItems([])\n    setWholesaleOrderMenuAnchorEl(null)\n  }\n\n  const handleWholesaleOrderSelect = (id: string) => {\n    fetch(`${API_HOST}/wholesaleorder/addlineitems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, selectedLineItems })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('update line items result:', result)\n      })\n      .catch(console.warn)\n      .finally(() => {\n        handleWholesaleOrderMenuClose()\n        setNeedsRefresh(true)\n        props.setReloadOrders(true)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'qty',\n            field: 'quantity',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'total', field: 'total', type: 'string', filtering: false },\n          {\n            title: 'product',\n            field: 'data',\n            type: 'string',\n            render: row =>\n              row.data && row.data.product\n                ? `${row.data.product.name} ${row.data.product.description}`\n                : null\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true },\n          { title: 'OrderId', field: 'OrderId', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/wholesaleorders/lineitems`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Line Items\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[addAction]}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={wholesaleorderMenuAnchorEl}\n        keepMounted\n        open={Boolean(wholesaleorderMenuAnchorEl)}\n        onClose={handleWholesaleOrderMenuClose}\n      >\n        <MenuItem onClick={() => handleWholesaleOrderSelect('new')}>\n          New wholesale order\n        </MenuItem>\n        <Divider />\n        {wholesaleorderLookup &&\n          wholesaleorderLookup.map(\n            (wholesaleorder: { id: string; name: string }) => (\n              <MenuItem\n                key={`wholesaleorder-sel-${wholesaleorder.id}`}\n                onClick={() => handleWholesaleOrderSelect(wholesaleorder.id)}\n              >\n                {wholesaleorder.name}\n              </MenuItem>\n            )\n          )}\n      </Menu>\n    </div>\n  )\n}\n\nexport default AddWholesaleOrderLineItems\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MUILink from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditWholesaleOrder from './EditWholesaleOrder'\nimport { useAllWholesaleOrdersService } from './useWholesaleOrderService'\nimport { WholesaleOrderRouterProps } from '../types/WholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport { withStyles } from '@material-ui/core/styles'\nimport { OrderStatus } from '../types/Order'\nimport Loading from '../Loading'\nimport { ORDER_STATUSES } from '../constants'\nimport AddWholesaleOrderLineItems from './AddWholesaleOrderLineItems'\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n  root: {\n    padding: 0 //theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      textAlign: 'left',\n      marginLeft: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    paperNav: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    list: {\n      padding: 0,\n      width: '100%'\n    },\n    selectedListItem: {\n      borderLeft: `${theme.spacing(2)}px solid ${theme.palette.divider}`\n    },\n    noOrdersMsg: {\n      padding: theme.spacing(2)\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction WholesaleOrders(\n  props: Props & RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [wholesaleOrders, setWholesaleOrders] = useState<WholesaleOrder[]>([])\n  const [reloadOrders, setReloadOrders] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>('new')\n  const allWholesaleOrders = useAllWholesaleOrdersService(\n    selectedStatus,\n    setLoading,\n    reloadOrders,\n    setReloadOrders\n  )\n\n  useEffect(() => {\n    allWholesaleOrders.status === 'loaded' &&\n      setWholesaleOrders(allWholesaleOrders.payload)\n  }, [allWholesaleOrders])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addWholesaleOrder() {\n    props.history.push('/wholesaleorders/edit/new')\n    setSnackOpen(true)\n  }\n\n  function loadOrdersForStatus(status: OrderStatus, expanded: boolean) {\n    if (expanded) {\n      setSelectedStatus(status)\n      setReloadOrders(true)\n    }\n  }\n\n  let id: string | number | undefined\n  try {\n    id = window.location.pathname.split('/').reverse()[0]\n    if (isNaN(parseInt(id))) {\n      id = undefined\n    }\n  } catch {\n    /* wellfuck */\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid sm={12} md={3} lg={2} item>\n          <Paper className={classes.paperNav}>\n            <div className={classes.title}>\n              <MUILink\n                color=\"textPrimary\"\n                href=\"\"\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push('/wholesaleorders')\n                }}\n                className={classes.titleText}\n              >\n                WHOLESALE ORDERS\n              </MUILink>\n              <IconButton\n                aria-label=\"add wholesale order\"\n                title=\"add wholeslae order\"\n                onClick={() => addWholesaleOrder()}\n              >\n                <Add />\n              </IconButton>\n            </div>\n\n            {Object.keys(ORDER_STATUSES).map(status => (\n              <ExpansionPanel\n                square\n                key={`EP${status}`}\n                defaultExpanded={status === 'new'}\n                expanded={selectedStatus === status}\n                onChange={(event: any, expanded: boolean) =>\n                  loadOrdersForStatus(status as OrderStatus, expanded)\n                }\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`panel${status}-content`}\n                  id={`panel${status}-header`}\n                >\n                  <Typography>\n                    {ORDER_STATUSES[status as OrderStatus]}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {loading ? (\n                    <Loading />\n                  ) : (\n                    <List className={classes.list}>\n                      {wholesaleOrders && wholesaleOrders.length ? (\n                        wholesaleOrders.map(\n                          (order: WholesaleOrder, idx: number) => (\n                            <ListItem\n                              button\n                              component={Link}\n                              to={`/wholesaleorders/edit/${order.id}`}\n                              key={`wsorder${idx}`}\n                              className={\n                                // eslint-disable-next-line\n                                id == order.id\n                                  ? classes.selectedListItem\n                                  : undefined\n                              }\n                            >\n                              <ListItemText\n                                primary={order.vendor}\n                                secondary={new Date(\n                                  order.createdAt\n                                ).toLocaleDateString()}\n                              />\n                            </ListItem>\n                          )\n                        )\n                      ) : (\n                        <div className={classes.noOrdersMsg}>\n                          <i>No wholesale orders for this status...</i>\n                        </div>\n                      )}\n                    </List>\n                  )}\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Paper>\n        </Grid>\n\n        <Grid sm={12} md={9} lg={10} item>\n          <Switch>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders\"\n              exact\n            >\n              <AddWholesaleOrderLineItems setReloadOrders={setReloadOrders} />\n            </ProtectedRoute>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders/edit/:id\"\n            >\n              <Paper className={classes.paper}>\n                <EditWholesaleOrder setReloadOrders={setReloadOrders} />\n              </Paper>\n            </ProtectedRoute>\n          </Switch>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new Wholesale Order!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(WholesaleOrders))\n","import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n)\n\nconst ROLES = ['admin', 'member', 'guest']\n\nexport default function NewUserModal(props: {\n  open: boolean\n  handleClose: () => void\n  handleRefresh: () => void\n}) {\n  const token = localStorage && localStorage.getItem('token')\n\n  const classes = useStyles()\n\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('guest')\n  const [disabled, setDiabled] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (email && email.includes('@')) {\n      setDiabled(false)\n    } else {\n      setDiabled(true)\n    }\n  }, [email])\n\n  const createUser = () => {\n    if (!email) {\n      setError('type an email!')\n      return\n    } else {\n      setError('')\n    }\n    fetch(`${API_HOST}/user/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ email, role })\n    })\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result', result)\n        if (result.error) {\n          return setError(result.msg)\n        } else {\n          props.handleRefresh()\n          props.handleClose()\n        }\n      })\n      .catch(err => {\n        console.warn(err)\n        return setError('o noz! there was an error creating user')\n      })\n      .finally(() => setDiabled(false))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <h2>Add New User</h2>\n            <div>\n              <TextField\n                type=\"email\"\n                margin=\"dense\"\n                label=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(event: any) => setEmail(event.target.value)}\n                autoFocus\n                fullWidth\n              />\n\n              <FormControl fullWidth>\n                <InputLabel id=\"role-select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  id=\"role-select\"\n                  margin=\"dense\"\n                  value={role}\n                  onChange={event =>\n                    event.target &&\n                    event.target.value &&\n                    setRole(event.target.value as string)\n                  }\n                >\n                  {ROLES.map(name => (\n                    <MenuItem value={name} key={`role-select${name}`}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createUser}\n                disabled={disabled}\n              >\n                CREATE\n              </Button>\n\n              {error && (\n                <Box color=\"error.main\">\n                  <Typography component=\"p\">{error}</Typography>\n                </Box>\n              )}\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { User } from '../types/User'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserRolesMenu(props: {\n  user: User\n  disabled: boolean\n}) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [role, setRole] = React.useState(props.user.role || 'none')\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleRoleChange = (id: string | undefined, role: string) => {\n    if (!id) {\n      return\n    }\n    fetch(`${API_HOST}/user/role`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ id, role })\n    })\n      .then(response => response.json())\n      .then(resp => {\n        // console.log('resp success!?', resp)\n        handleClose()\n        setRole(role)\n      })\n      .catch(err => console.warn('handleRoleChange caught err:', err))\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"user-roles-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        disabled={props.disabled}\n      >\n        {role}\n      </Button>\n      <StyledMenu\n        id=\"user-roles-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* <StyledMenuItem>\n          <ListItemText\n            primary=\"Superuser\"\n            onClick={() => handleRoleChange(props.user.id, 'superuser')}\n          />\n        </StyledMenuItem> */}\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"admin\"\n            onClick={() => handleRoleChange(props.user.id, 'admin')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"member\"\n            onClick={() => handleRoleChange(props.user.id, 'member')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"guest\"\n            onClick={() => handleRoleChange(props.user.id, 'guest')}\n          />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import Add from '@material-ui/icons/Add'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n// import Snackbar from '@material-ui/core/Snackbar'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\n// import { Switch } from 'react-router'\n// import ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\n// import { useAllUsersService } from './useUserService'\nimport { UserRouterProps } from '../types/UserRouterProps'\nimport { User } from '../types/User'\nimport NewUserModal from './NewUserModal'\nimport UserRolesMenu from './UserRolesMenu'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Users(props: Props & RouteComponentProps<UserRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n  const tableRef = createRef<any>()\n\n  console.log('#TODO: deal with userService:', userService)\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const token = localStorage && localStorage.getItem('token')\n  const [newUserModalOpen, setNewUserModalOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newUserAction = {\n    icon: 'add',\n    tooltip: 'add new user',\n    isFreeAction: true,\n    onClick: () => setNewUserModalOpen(true)\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove User',\n    icon: 'delete',\n    onClick: (e: any, user: User) => {\n      if (\n        userService &&\n        userService.user &&\n        userService.user.email === user.email\n      ) {\n        alert('you cannot delete yrself!')\n      } else {\n        if (!user.id) {\n          return\n        }\n        if (window.confirm(`Are you sure you want to delete ${user.email}?`)) {\n          fetch(`${API_HOST}/user`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify({ id: user.id })\n          })\n            .then(response => response.json())\n            .then(() => tableRef.current && tableRef.current.onQueryChange())\n            .catch(err => console.warn('user deleteAction caught err', err))\n        }\n      }\n    }\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newUserAction,\n    deleteAction\n  ])\n\n  useEffect(() => {\n    setActions([searchAction, newUserAction, deleteAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'role',\n            field: 'role',\n            type: 'string',\n            render: row => (\n              <UserRolesMenu\n                user={row as User}\n                disabled={\n                  !!(\n                    userService &&\n                    userService.user &&\n                    userService.user.email === row.email\n                  )\n                }\n              />\n            )\n          },\n          { title: 'email', field: 'email', type: 'string' },\n          {\n            title: 'active',\n            field: 'active',\n            type: 'boolean',\n            filtering: false\n          },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            render: row => new Date(row.updatedAt).toLocaleString()\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/users`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Users\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n\n      <NewUserModal\n        open={newUserModalOpen}\n        handleClose={() => {\n          setNewUserModalOpen(false)\n        }}\n        handleRefresh={() =>\n          tableRef.current && tableRef.current.onQueryChange()\n        }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Users))\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\nimport { Chip } from '@material-ui/core'\n// import MoreVertIcon from '@material-ui/icons/MoreVert'\n// import IconButton from '@material-ui/core/IconButton'\n// import Tooltip from '@material-ui/core/Tooltip'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst PROPERTY_MAP: { [index: string]: string } = {\n  a: 'Artificial ingredients',\n  c: 'Low carb',\n  d: 'Dairy free',\n  f: 'Food Service items',\n  g: 'Gluten free',\n  k: 'Kosher',\n  l: 'Low sodium/no salt',\n  m: 'Non-GMO Project Verified',\n  og: 'Organic',\n  r: 'Refined sugar',\n  v: 'Vegan',\n  w: 'Wheat free',\n  ft: 'Fair Trade',\n  n: 'Natural',\n  s: 'Specialty Only',\n  y: 'Yeast free',\n  1: '100% organic',\n  2: '95%+ organic',\n  3: '70%+ organic'\n}\n\nfunction renderCodes(codes: string | undefined) {\n  return (\n    codes &&\n    codes\n      .split(', ')\n      .map((code, idx) =>\n        PROPERTY_MAP[code] ? (\n          <Chip\n            label={PROPERTY_MAP[code]}\n            style={{ margin: 5 }}\n            size=\"small\"\n            key={`pprop${idx}`}\n          />\n        ) : (\n          ''\n        )\n      )\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\nfunction Products() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map(p => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ ids })\n        })\n          .catch(err => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then(response => response.json())\n      .then(result => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then(response => response.json())\n      .then(result => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'description',\n            field: 'description',\n            type: 'string',\n            filtering: false,\n            render: row => `${row.name} -- ${row.description}`\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false\n          },\n          { title: 'size', field: 'size', type: 'string', filtering: false },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            lookup: { CS: 'Case', EA: 'Each' },\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'unit price',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: 'properties',\n            field: 'codes',\n            type: 'string',\n            lookup: PROPERTY_MAP,\n            filterPlaceholder: 'filter',\n            render: row => renderCodes(row.codes)\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Products\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      zIndex: 2\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    }\n  })\n)\n\nexport default function ImportProducts() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [vendor, setVendor] = useState('')\n  const [importTag, setImportTag] = useState('')\n  const [prevImportTag, setPrevImportTag] = useState('')\n  const [markup, setMarkup] = useState(0.0)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then(response => response.json())\n      .then(result => setVendorLookup(result))\n  })\n\n  const [importTagsLookup, setImportTagsLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/import_tags`)\n      .then(response => response.json())\n      .then(result => setImportTagsLookup(result))\n  })\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('vendor')\n    formData.delete('import_tag')\n    formData.delete('prev_import_tag')\n    formData.delete('markup')\n    formData.append('vendor', vendor)\n    formData.append('import_tag', importTag)\n    formData.append('prev_import_tag', prevImportTag)\n    formData.append('markup', `${markup}`)\n\n    fetch(`${API_HOST}/products/upload`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      body: formData\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  const [\n    vendorMenuAnchorEl,\n    setVendorMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleVendorMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setVendorMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleVendorMenuClose = () => {\n    setVendorMenuAnchorEl(null)\n  }\n\n  const handleVendorSelect = (vendor: string) => {\n    setVendor(vendor)\n    handleVendorMenuClose()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Import Products</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <div className={classes.vendor}>\n            <TextField\n              label=\"Vendor\"\n              helperText=\"Required.\"\n              fullWidth\n              value={vendor}\n              onChange={event => setVendor(event.target.value)}\n            />\n\n            <div>\n              <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleVendorMenuOpen}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </div>\n\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={vendorMenuAnchorEl}\n              keepMounted\n              open={Boolean(vendorMenuAnchorEl)}\n              onClose={handleVendorMenuClose}\n            >\n              {vendorLookup &&\n                Object.keys(vendorLookup).map(vendor => (\n                  <MenuItem\n                    key={`vendor-sel-${vendor}`}\n                    onClick={() => handleVendorSelect(vendor)}\n                  >\n                    {vendor}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </div>\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <InputLabel id=\"prev-import-tag-select-label\">\n              Previous Import Tag\n            </InputLabel>\n            <Select\n              labelId=\"prev-import-tag-select-label\"\n              id=\"prev-import-tag-select\"\n              value={prevImportTag}\n              onChange={event =>\n                event.target &&\n                event.target.value &&\n                setPrevImportTag(event.target.value as string)\n              }\n            >\n              {importTagsLookup &&\n                Object.keys(importTagsLookup).map(tag => (\n                  <MenuItem key={`tag-sel-${tag}`} value={tag}>\n                    {tag}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>\n              If updating, products with the tag you select here will first be\n              removed.\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label=\"Import Tag\"\n            helperText=\"Required. This should be unique.\"\n            fullWidth\n            value={importTag}\n            onChange={event => setImportTag(event.target.value)}\n            className={classes.gridItem}\n          />\n          <TextField\n            label=\"Markup\"\n            helperText=\"Markup percentage. Use decimal format.\"\n            type=\"number\"\n            inputProps={{\n              min: '0',\n              max: '1',\n              step: '0.01'\n            }}\n            fullWidth\n            value={markup}\n            onChange={event =>\n              setMarkup(\n                isNaN(parseFloat(event.target.value))\n                  ? 0.0\n                  : parseFloat(event.target.value)\n              )\n            }\n            className={classes.gridItem}\n          />\n\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={\n                loading || !importTag || !vendor || formData === undefined\n              }\n              onClick={() => submitData()}\n              size=\"large\"\n            >\n              UPLOAD\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>What kind of file should be uploaded?</dt>\n              <dd>Comma separated value files with the extension .csv</dd>\n\n              <dt>What columns will get processed?</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>name</b>, <b>description</b>,{' '}\n                <b>pk</b>, <b>size</b>, <b>unit_type</b>, <b>ws_price</b>,{' '}\n                <b>u_price</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>Are any of these optional?</dt>\n              <dd>\n                <b>unf</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>codes</b>, <b>a</b>,{' '}\n                <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>, <b>f</b>, <b>g</b>,{' '}\n                <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>, <b>ft</b>, <b>m</b>,{' '}\n                <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>\n                <b>codes</b> column\n              </dt>\n              <dd>\n                the <b>codes</b> column value can be a comma-separated list of\n                codes. the values that can be entered in this field are any\n                combination of a, r, c, l, d, f, g, v, w, y, k, ft, m, s, n, og,\n                1, 2, 3.\n              </dd>\n\n              <dt>How do the code columns translate?</dt>\n              <dd>\n                The values in the code columns need to be the same as the\n                header. so for example if there's a column <b>a</b> then the\n                value for the fields in the column need to be <i>a</i> (or blank\n                if not appliciable). except for the <b>og</b> column which can\n                have values og, 1, 2, or 3.\n                <br />\n                <br />\n                <table>\n                  <thead>\n                    <tr>\n                      <th>code</th>\n                      <th>translation</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>a</td>\n                      <td>Artificial ingredients</td>\n                    </tr>\n                    <tr>\n                      <td>c</td>\n                      <td>Low carb</td>\n                    </tr>\n                    <tr>\n                      <td>d</td>\n                      <td>Dairy free</td>\n                    </tr>\n                    <tr>\n                      <td>f</td>\n                      <td>Food Service items</td>\n                    </tr>\n                    <tr>\n                      <td>g</td>\n                      <td>Gluten free</td>\n                    </tr>\n                    <tr>\n                      <td>k</td>\n                      <td>Kosher</td>\n                    </tr>\n                    <tr>\n                      <td>l</td>\n                      <td>Low sodium/no salt</td>\n                    </tr>\n                    <tr>\n                      <td>m</td>\n                      <td>Non-GMO Project Verified</td>\n                    </tr>\n                    <tr>\n                      <td>r</td>\n                      <td>Refined sugar</td>\n                    </tr>\n                    <tr>\n                      <td>v</td>\n                      <td>Vegan</td>\n                    </tr>\n                    <tr>\n                      <td>w</td>\n                      <td>Wheat free</td>\n                    </tr>\n                    <tr>\n                      <td>ft</td>\n                      <td>Fair Trade</td>\n                    </tr>\n                    <tr>\n                      <td>n</td>\n                      <td>Natural</td>\n                    </tr>\n                    <tr>\n                      <td>s</td>\n                      <td>Specialty Only</td>\n                    </tr>\n                    <tr>\n                      <td>y</td>\n                      <td>Yeast free</td>\n                    </tr>\n                    <tr>\n                      <td>og</td>\n                      <td>Organic</td>\n                    </tr>\n                    <tr>\n                      <td>1</td>\n                      <td>100% organic</td>\n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>95%+ organic</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>70%+ organic</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </dd>\n\n              <dt>How is markup applied?</dt>\n              <dd>\n                Markup is a percentage in decimal format so 0.10 will markup\n                products by 10%. The formula is: <i>PRICE + (PRICE * MARKUP)</i>{' '}\n                so if the value of <b>ws_price</b> is 10.00 and the markup\n                specified is 0.10 the the markup price will be 11.00.\n                <br />\n                <br />\n                If any rows of the price sheet has a non-empty, non-zero value\n                in the <b>ws_price_markup</b> or <b>u_price_markup</b> then that\n                will be used as the markup price. This means only some rows of\n                the price sheet can contain special markups while the rest of\n                the sheet can have a single markup applied.\n              </dd>\n\n              <dt>Import Tag</dt>\n              <dd>\n                This field is used to track changes to new price sheets that are\n                meant to update products that have already been imported once. A\n                use-case for this is when uploading partial lists of product for\n                a vendor. So for example if a sub-set of products are imported,\n                then a while later a new sheet of products can be imported\n                without having to destroy and re-import all the products for a\n                vendor. If uploading a complete list of all products for a\n                particular vendor then it would be reasonable to use the same\n                value as the Vendor field.\n                <br />\n                <br />\n                <b>NOTE:</b> it can be useful to include the current date in the\n                value for the Import Tag field (or otherwise make this a unique\n                value). When creating wholesale orders it might be useful to\n                know which price sheet a product that was ordered came from.\n                <br />\n                <br />\n                When the Previous Import Tag is specified, products with that\n                tag are first deleted before new products are created.\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Order } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst useOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Order>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/order/edit/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Order })\n      })\n      .catch(error => {\n        console.warn('useOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\n// const useOrderSaveService = (\n//   order: Order | undefined,\n//   doSave: boolean,\n//   setDoSave: (value: boolean) => void,\n//   setSnackMsg: (msg: string) => void,\n//   setSnackOpen: (value: boolean) => void\n// ) => {\n//   const [result, setResult] = useState<Service<Order>>({\n//     status: 'loading'\n//   })\n\n//   useEffect(() => {\n//     if (!doSave || !order) {\n//       setDoSave(false)\n//       return\n//     }\n\n//     console.log('need to save order', order)\n//     setResult({ status: 'error', error: new Error('#TODO') })\n//     fetch(`${API_HOST}/order/create`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${token}`\n//       },\n//       body: JSON.stringify(order)\n//     })\n//       .then(response => response.json())\n//       .then(response => {\n//         // console.log('usePageSaveService response:', response)\n//         setResult({ status: 'loaded', payload: response as Order })\n//         setSnackMsg(response.msg)\n//         setSnackOpen(true)\n//       })\n//       .catch(error => {\n//         console.warn('usePageSaveService fetch caught err:', error)\n//         setResult({ ...error })\n//         setSnackMsg(`o noz! ${error}`)\n//         setSnackOpen(true)\n//       })\n//       .finally(() => {\n//         setDoSave(false)\n//       })\n//   }, [order, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n//   return result\n// }\n\nexport { useOrderService }\n","import React, { useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nimport { LineItem } from '../types/Order'\nimport { TAX_RATE, TAX_RATE_STRING } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (num === undefined) {\n    return '0.00'\n  }\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'product')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction adjustmentsTotal(items: LineItem[]) {\n  return items\n    .filter(li => li.kind === 'adjustment')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  const u_price =\n    line_item.data && line_item.data.product && line_item.data.product.u_price\n      ? parseFloat(line_item.data.product.u_price)\n      : line_item.price\n  const ws_price =\n    line_item.data && line_item.data.product\n      ? parseFloat(line_item.data.product.ws_price)\n      : line_item.price\n\n  return line_item.selected_unit === 'EA' && u_price\n    ? isNaN(line_item.quantity * u_price)\n      ? 0.0\n      : line_item.quantity * u_price\n    : isNaN(line_item.quantity * ws_price)\n    ? 0.0\n    : line_item.quantity * ws_price\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.pk &&\n    line_item.data.product.pk !== 1 &&\n    pksize.push(line_item.data.product.pk)\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.size &&\n    pksize.push(line_item.data.product.size)\n  return pksize.join(' / ')\n}\n\nfunction OrderLineItems(props: {\n  line_items: LineItem[]\n  onLineItemUpdated: (idx: number, line_item: LineItem) => void\n  removeLineItem: (idx: number) => void\n  onTaxesChange: (amount: number) => void\n  onTotalChange: (total: number) => void\n  onSubTotalChange: (subtotal: number) => void\n}) {\n  const classes = useStyles()\n\n  const orderSubtotal = subtotal(props.line_items)\n  const orderAdjustmentsTotal = adjustmentsTotal(props.line_items)\n  const orderTaxes = TAX_RATE * (orderSubtotal + orderAdjustmentsTotal)\n  const orderTotal = orderTaxes + orderSubtotal + orderAdjustmentsTotal\n\n  const { onTaxesChange, onTotalChange, onSubTotalChange } = props\n  useEffect(() => {\n    onTaxesChange(orderTaxes)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTaxes]) // adding onTaxesChange here causes infinite loopz\n\n  useEffect(() => {\n    onTotalChange(orderTotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTotal]) // adding onTotalChange causes infinite loopz :/\n\n  useEffect(() => {\n    onSubTotalChange(orderSubtotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderSubtotal])\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    if (line_item.data && line_item.data.product) {\n      line_item.price =\n        unit === 'CS'\n          ? +line_item.data.product.ws_price\n          : +line_item.data.product.u_price\n    }\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleDescriptionChange = (\n    line_item: LineItem,\n    description: string\n  ) => {\n    line_item.description = description\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handlePriceChange = (line_item: LineItem, price: number) => {\n    line_item.price = price\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const removeLineItem = (line_item: LineItem) => {\n    const idx = props.line_items.indexOf(line_item)\n    props.removeLineItem(idx)\n  }\n\n  const adjustments = props.line_items.filter(li => li.kind === 'adjustment')\n  const payments = props.line_items.filter(li => li.kind === 'payment')\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.line_items.map(\n            (line_item, idx) =>\n              line_item.kind === 'product' && (\n                <TableRow key={`li${idx}`}>\n                  <TableCell align=\"center\">\n                    <Tooltip title=\"remove line item\">\n                      <IconButton\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        onClick={(event: any) => removeLineItem(line_item)}\n                      >\n                        <ClearIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                  <TableCell>{line_item.description}</TableCell>\n                  <TableCell align=\"right\">\n                    <div>\n                      {line_item.data &&\n                      line_item.data.product &&\n                      line_item.selected_unit === 'EA' &&\n                      line_item.data.product.u_price\n                        ? usdFormat(line_item.data.product.u_price)\n                        : usdFormat(\n                            line_item.data && line_item.data.product\n                              ? line_item.data.product.ws_price\n                              : line_item.price\n                          )}\n                    </div>\n                    <div>{liPkSize(line_item)}</div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {line_item.data &&\n                    line_item.data.product &&\n                    line_item.data.product.u_price &&\n                    line_item.data.product.u_price !==\n                      line_item.data.product.ws_price ? (\n                      <Select\n                        value={line_item.selected_unit}\n                        onChange={(event: any) =>\n                          handleUnitChange(line_item, event.target.value)\n                        }\n                        margin=\"dense\"\n                      >\n                        <MenuItem value=\"CS\">Case</MenuItem>\n                        <MenuItem value=\"EA\">Each</MenuItem>\n                      </Select>\n                    ) : line_item.data &&\n                      line_item.data.product &&\n                      line_item.data.product.unit_type === 'CS' ? (\n                      'Case'\n                    ) : (\n                      'Each'\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <TextField\n                      className={classes.qtyinput}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"dense\"\n                      fullWidth\n                      value={line_item.quantity}\n                      onChange={(event: any) =>\n                        handleQtyChange(line_item, event.target.value)\n                      }\n                      inputProps={{ min: '1', step: '1' }}\n                    />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {usdFormat(line_item.total)}\n                  </TableCell>\n                </TableRow>\n              )\n          )}\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(orderSubtotal)}</TableCell>\n          </TableRow>\n          {adjustments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '9999',\n                    step: '1'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Tax</TableCell>\n            <TableCell align=\"center\">{TAX_RATE_STRING}</TableCell>\n            <TableCell align=\"right\">{usdFormat(orderTaxes)}</TableCell>\n          </TableRow>\n\n          {payments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={4}>{line_item.description}</TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              <b>{usdFormat(orderTotal)}</b>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default OrderLineItems\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\ninterface ProductResponse {\n  data: Product[]\n}\n\ninterface ProductOption {\n  name: string\n  product: Product\n}\n\ninterface LineItemAutocompleteProps {\n  onItemSelected: (value: { name: string; product: Product }) => void\n}\n\nexport default function LineItemAutocomplete(props: LineItemAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<ProductOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/products`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const products = (await response.json()) as ProductResponse\n\n      if (active) {\n        setOptions(\n          products.data.map(p => ({\n            name: `${p.name} ${p.description} ${p.pk} ${p.size} $${\n              p.ws_price\n            } ${p.u_price !== p.ws_price ? `($${p.u_price} EA)` : ''}`,\n            product: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Product search\"\n          fullWidth\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\ninterface MemberResponse {\n  data: Member[]\n}\n\ninterface MemberOption {\n  name: string\n  member: Member\n}\n\ninterface MemberAutocompleteProps {\n  onItemSelected: (value: { name: string; member: Member }) => void\n}\n\nexport default function MemberAutocomplete(props: MemberAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<MemberOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const members = (await response.json()) as MemberResponse\n      if (active) {\n        setOptions(\n          members.data.map(p => ({\n            name: `${p.name} ${\n              p.User && p.User.email ? p.User.email : p.registration_email\n            }`,\n            member: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      onChange={(event, value) => props.onItemSelected(value)}\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={params => (\n        <TextField\n          {...params}\n          label=\"Member search\"\n          fullWidth\n          autoFocus\n          variant=\"outlined\"\n          value={q}\n          onChange={event => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport Loading from '../Loading'\nimport { useOrderService } from './useOrderService'\nimport {\n  Order,\n  OrderRouterProps,\n  OrderStatus,\n  ShipmentStatus,\n  PaymentStatus\n} from '../types/Order'\nimport { LineItem } from '../types/Order'\nimport OrderLineItems from './OrderLineItems'\nimport LineItemAutocomplete from './LineItemAutocomplete'\nimport MemberAutocomplete from './MemberAutocomplete'\nimport { Product } from '../types/Product'\nimport { Member } from '../types/Member'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES,\n  TAX_RATE_STRING\n} from '../constants'\n\nconst blankOrder: Order = {\n  id: 'new',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  total: 0.0,\n  item_count: 0,\n  subtotal: 0,\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  notes: '',\n  createdAt: '',\n  updatedAt: '',\n  OrderLineItems: []\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `calc(100vh - 64px)`\n    },\n    form: {\n      marginBottom: theme.spacing(4)\n    },\n    formInput: {\n      display: 'block',\n      marginBottom: theme.spacing(2)\n    },\n    status: {\n      marginBottom: theme.spacing(2)\n    },\n    liHeader: {\n      display: 'inline-block',\n      marginRight: theme.spacing(2)\n    },\n    sticky: {\n      [theme.breakpoints.up('md')]: {\n        position: 'sticky',\n        top: '72px'\n      }\n    }\n  })\n)\n\ninterface EditOrderProps {\n  userService?: UserService\n}\n\nfunction EditOrder(\n  props: EditOrderProps & RouteComponentProps<OrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const [orderId, setOrderId] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [order, setOrder] = useState<Order>(blankOrder)\n  const [saving, setSaving] = useState(false)\n  const [showLiAutocomplete, setShowLiAutocomplete] = useState(false)\n  const [showMemberAutocomplete, setShowMemberAutocomplete] = useState(false)\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n  const [needToCheckForDiscounts, setNeedToCheckForDiscounts] = useState(true)\n  const [canApplyMemberDiscount, setCanApplyMemberDiscount] = useState(false)\n  const orderService = useOrderService(orderId, setLoading)\n\n  useEffect(() => {\n    if (orderService.status === 'loaded') {\n      if (orderService.payload) {\n        const _order = orderService.payload\n        if (\n          _order.Member &&\n          _order.Member.discount &&\n          _order.Member.discount > 0\n        ) {\n          setCanApplyMemberDiscount(true)\n        }\n        setOrder(_order)\n      }\n    }\n  }, [orderService])\n\n  const pOrderId = props.match.params.id\n\n  useEffect(() => {\n    if (pOrderId && pOrderId !== 'new') {\n      setOrderId(pOrderId)\n    }\n  }, [pOrderId])\n\n  useEffect(() => {\n    if (\n      order &&\n      !order.UserId &&\n      props.userService &&\n      props.userService.user &&\n      props.userService.user.id\n    ) {\n      const UserId = props.userService.user.id\n      UserId &&\n        setOrder(prevOrder => ({\n          ...prevOrder,\n          UserId\n        }))\n    }\n  }, [props.userService, order])\n\n  useEffect(() => {\n    if (!needToCheckForDiscounts || !order) {\n      setNeedToCheckForDiscounts(false)\n      return\n    }\n    if (order && order.OrderLineItems && canApplyMemberDiscount) {\n      const discountAmt = order.OrderLineItems.map(li => {\n        let canDiscount = false\n        if (li.data && li.data.product && li.selected_unit === 'CS') {\n          canDiscount =\n            li.data.product.ws_price !== li.data.product.ws_price_cost\n        } else if (li.data && li.data.product && li.selected_unit === 'EA') {\n          canDiscount = li.data.product.u_price !== li.data.product.u_price_cost\n        }\n        if (canDiscount && li.data && li.data.product) {\n          const price =\n            li.selected_unit === 'CS'\n              ? parseFloat(li.data.product.ws_price_cost)\n              : parseFloat(li.data.product.u_price_cost)\n\n          return +(li.total - price * li.quantity).toFixed(2)\n        } else {\n          return 0\n        }\n      }).reduce((acc, v) => acc + v, 0)\n\n      if (discountAmt > 0) {\n        const discountPrice = -discountAmt.toFixed(2)\n        const discounts = order.OrderLineItems.filter(\n          li => li.kind === 'adjustment' && li.description === 'member discount'\n        )\n        if (discounts[0]) {\n          if (discounts[0].total !== discountPrice) {\n            const idx = order.OrderLineItems.indexOf(discounts[0])\n            updateLineItem(idx, {\n              ...discounts[0],\n              price: discountPrice,\n              total: discountPrice\n            })\n          }\n        } else {\n          const adjustment: LineItem = {\n            description: 'member discount',\n            quantity: 1,\n            price: discountPrice,\n            total: discountPrice,\n            kind: 'adjustment'\n          }\n          setOrder(prevOrder => ({\n            ...prevOrder,\n            OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n          }))\n        }\n      }\n    }\n\n    setNeedToCheckForDiscounts(false)\n  }, [needToCheckForDiscounts, order, canApplyMemberDiscount])\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function onAddLineitem(value: { name: string; product: Product }) {\n    if (!value) {\n      return\n    }\n    const { product } = value\n    if (value && value.name && product) {\n      const lineItem: LineItem = {\n        description: `${product.name} ${product.description}`,\n        quantity: 1,\n        selected_unit: 'CS',\n        price: parseFloat(product.ws_price),\n        total: parseFloat(product.ws_price),\n        kind: 'product',\n        vendor: product.vendor,\n        data: { product }\n      }\n      setOrder(order => ({\n        ...order,\n        item_count:\n          order.OrderLineItems.filter(li => li.kind === 'product').length + 1,\n        OrderLineItems: [...order.OrderLineItems, lineItem]\n      }))\n      setNeedToCheckForDiscounts(true)\n    }\n  }\n\n  function updateLineItem(idx: number, line_item: LineItem) {\n    setOrder(prevOrder => {\n      let orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1, line_item)\n\n      return {\n        ...prevOrder,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n  function onLineItemUpdated(idx: number, line_item: LineItem) {\n    updateLineItem(idx, line_item)\n    setNeedToCheckForDiscounts(true)\n  }\n  function removeLineItem(idx: number) {\n    if (idx > -1) {\n      const li = order.OrderLineItems[idx]\n      if (li.kind === 'adjustment' && li.description === 'member discount') {\n        setCanApplyMemberDiscount(false)\n      }\n    }\n    setOrder(prevOrder => {\n      const orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1)\n      const item_count = orderLineItems.filter(li => li.kind === 'product')\n        .length\n      return {\n        ...prevOrder,\n        item_count,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n\n  function createAdjustment(event: any) {\n    const adjustment: LineItem = {\n      description: 'new adjustment',\n      quantity: 1,\n      price: 0.0,\n      total: 0.0,\n      kind: 'adjustment'\n    }\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function onMembertemSelected(value?: { name: string; member: Member }) {\n    if (value && value.member) {\n      const { id, name, phone, address } = value.member // email\n      const email =\n        value.member.User && value.member.User.email\n          ? value.member.User.email\n          : value.member.registration_email\n      setOrder(prevOrder => ({\n        ...prevOrder,\n        name: name || '',\n        email: email || '',\n        phone: phone || '',\n        address: address || '',\n        MemberId: id\n      }))\n      setShowMemberAutocomplete(false)\n    }\n  }\n\n  const onSaveBtnClick = (): void => {\n    setSaving(true)\n    const path =\n      orderId && orderId !== 'new' ? '/order/update' : '/order/create'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(order)\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.success) {\n          setSnackOpen(true)\n          setSnackMsg('Saved order!')\n          if (response.order.id && (!orderId || orderId === 'new')) {\n            props.history.replace(`/orders/edit/${response.order.id}`)\n          }\n        }\n      })\n      .finally(() => setSaving(false))\n  }\n\n  function onTaxesChange(tax: number) {\n    console.log('onTaxesChange tax:', tax)\n    setOrder(prevOrder => {\n      const notTaxLineItems = prevOrder.OrderLineItems.filter(\n        li => li.kind !== 'tax'\n      )\n\n      return {\n        ...prevOrder,\n        OrderLineItems: [\n          ...notTaxLineItems,\n          {\n            kind: 'tax',\n            description: `tax ${TAX_RATE_STRING}`,\n            quantity: 1,\n            price: tax,\n            total: tax\n          }\n        ]\n      }\n    })\n  }\n\n  function onSubTotalChange(subtotal: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      subtotal\n    }))\n  }\n\n  function onTotalChange(total: number) {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      total\n    }))\n  }\n\n  function valueFor(field: keyof Order) {\n    return order && order[field] ? order[field] : ''\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      status: event.target.value as OrderStatus\n    }))\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      payment_status: event.target.value as PaymentStatus\n    }))\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder(prevOrder => ({\n      ...prevOrder,\n      shipment_status: event.target.value as ShipmentStatus\n    }))\n  }\n\n  const shouldShowAddMemberDiscount =\n    !canApplyMemberDiscount ||\n    (order &&\n      order.OrderLineItems.filter(li => li.description === 'member discount')\n        .length === 0)\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={12} md={4} className={classes.sticky}>\n            {showMemberAutocomplete ? (\n              <div style={{ display: 'flex' }}>\n                <Tooltip title=\"close\">\n                  <IconButton\n                    aria-label=\"close\"\n                    onClick={() => setShowMemberAutocomplete(false)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n                <MemberAutocomplete onItemSelected={onMembertemSelected} />\n              </div>\n            ) : (\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  minHeight: '54px'\n                }}\n              >\n                <div>\n                  <Tooltip title=\"BACK TO ORDERS\">\n                    <IconButton\n                      aria-label=\"back to orders\"\n                      onClick={() => props.history.push('/orders')}\n                    >\n                      <ArrowBackIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <h2 style={{ display: 'inline' }}>\n                    {orderId && orderId !== 'new' ? (\n                      <>\n                        EDIT ORDER <i>#{order.id}</i>\n                      </>\n                    ) : (\n                      'CREATE ORDER'\n                    )}\n                  </h2>\n                </div>\n                <div>\n                  <Tooltip title=\"ADD USER DETAILS\">\n                    <IconButton\n                      aria-label=\"add user details\"\n                      onClick={() => setShowMemberAutocomplete(true)}\n                    >\n                      <PeopleIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              </div>\n            )}\n\n            {order.status !== 'new' && order.status !== 'needs_review' && (\n              <Box color=\"error.main\">\n                <Typography variant=\"overline\" display=\"block\">\n                  ohey!\n                </Typography>\n                <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                  this order status is not \"new\" or \"needs review\" so making\n                  changes might not be great...\n                </Typography>\n              </Box>\n            )}\n            {order.Member && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has discount {order.Member.discount}\n                </Typography>\n              </Box>\n            )}\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"name\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.name}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, name: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"email\"\n                type=\"email\"\n                className={classes.formInput}\n                fullWidth\n                value={order.email}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, email: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"phone\"\n                type=\"phone\"\n                className={classes.formInput}\n                fullWidth\n                value={order.phone}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, phone: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"address\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.address}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, address: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"notes\"\n                className={classes.formInput}\n                multiline\n                rowsMax=\"20\"\n                fullWidth\n                value={order.notes}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder(order => ({ ...order, notes: event.target.value }))\n                }}\n              />\n\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map(status => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map(status => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map(status => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </form>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onSaveBtnClick}\n              disabled={saving}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item sm={12} md={8}>\n            <div>\n              {showLiAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowLiAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <LineItemAutocomplete onItemSelected={onAddLineitem} />\n                </div>\n              ) : (\n                <>\n                  <Button\n                    aria-label=\"add line items\"\n                    size=\"large\"\n                    onClick={() => setShowLiAutocomplete(true)}\n                  >\n                    <AddIcon />\n                    LINE ITEMS\n                  </Button>\n\n                  <Button\n                    aria-label=\"add adjustment\"\n                    size=\"large\"\n                    onClick={createAdjustment}\n                  >\n                    <AddIcon />\n                    ADJUSTMENT\n                  </Button>\n\n                  {shouldShowAddMemberDiscount && (\n                    <Button\n                      aria-label=\"add member discount\"\n                      size=\"large\"\n                      onClick={() => {\n                        setCanApplyMemberDiscount(true)\n                        setNeedToCheckForDiscounts(true)\n                      }}\n                    >\n                      <AddIcon />\n                      MEMBER DISCOUNT\n                    </Button>\n                  )}\n                </>\n              )}\n            </div>\n            <OrderLineItems\n              line_items={order.OrderLineItems}\n              onLineItemUpdated={onLineItemUpdated}\n              removeLineItem={removeLineItem}\n              onTaxesChange={onTaxesChange}\n              onTotalChange={onTotalChange}\n              onSubTotalChange={onSubTotalChange}\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(EditOrder))\n","import React, { createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { MemberRouterProps } from '../types/Member'\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Members(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const tableRef = createRef<any>()\n\n  const token = localStorage && localStorage.getItem('token')\n\n  const newMemberAction = {\n    icon: 'add',\n    tooltip: 'add new member',\n    isFreeAction: true,\n    onClick: () => props.history.push('/members/new')\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove Member',\n    icon: 'delete',\n    onClick: (e: any, member: Member | Member[]) => {\n      let members: Member[]\n      if (Array.isArray(member)) {\n        members = member\n      } else {\n        members = [member]\n      }\n\n      if (!members || members.length === 0) {\n        return\n      }\n      const id = members[0].id\n      if (window.confirm(`Are you sure you want to delete this member?`)) {\n        fetch(`${API_HOST}/member`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ id })\n        })\n          .then(response => response.json())\n          .then(() => tableRef.current && tableRef.current.onQueryChange())\n          .catch(err => console.warn('members deleteAction caught err', err))\n      }\n    }\n  }\n\n  const editAction = {\n    icon: 'edit',\n    tooltip: 'edit member',\n    onClick: (e: any, members: Member | Member[]) => {\n      let member: Member\n      if (Array.isArray(members)) {\n        member = members[0]\n      } else {\n        member = members\n      }\n      member.id && props.history.push(`/members/${member.id}`)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: row =>\n              row.createdAt && new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'registration email',\n            field: 'registration_email',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'phone', field: 'phone', type: 'string', filtering: false },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'discount', field: 'discount', type: 'string' },\n          { title: 'discount type', field: 'discount_type', type: 'string' },\n          { title: 'fees paid', field: 'fees_paid', type: 'string' },\n          { title: 'store credit', field: 'store_credit', type: 'string' },\n          { title: 'shares', field: 'shares', type: 'string' },\n          { title: 'type', field: 'member_type', type: 'string' },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            hidden: true\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={query =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/members`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n              },\n              body: JSON.stringify(query)\n            })\n              .then(response => response.json())\n              .then(result => {\n                resolve(result)\n              })\n              .catch(err => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Members\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={[newMemberAction, deleteAction, editAction]}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Members)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\n// import FormHelperText from '@material-ui/core/FormHelperText'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\n// import Menu from '@material-ui/core/Menu'\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Member, MemberRouterProps } from '../types/Member'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst token = localStorage && localStorage.getItem('token')\n\nconst blankMember: Member = {\n  id: 'new',\n  registration_email: '',\n  name: '',\n  phone: '',\n  address: '',\n  discount: 0,\n  discount_type: '',\n  fees_paid: 0,\n  store_credit: 0,\n  shares: 0,\n  member_type: '',\n  data: {}\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    sticky: {\n      [theme.breakpoints.up('sm')]: {\n        position: 'sticky',\n        top: '0'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n)\n\nfunction EditMember(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const [loadingMember, setLoadingMember] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n  const memberId = props.match.params.id\n\n  const [member, setMember] = useState<Member>(blankMember)\n\n  useEffect(() => {\n    if (!memberId || memberId === 'undefined') {\n      return\n    }\n\n    if (memberId === 'new') {\n      setMember(blankMember)\n      setLoadingMember(false)\n    } else {\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          filters: [\n            {\n              column: {\n                field: 'id'\n              },\n              value: memberId\n            }\n          ]\n        })\n      })\n        .then(response => response.json())\n        .then(response => {\n          // console.log('zomfg response:', response)\n          setMember(response.data[0] as Member)\n        })\n        .catch(err => setMember(blankMember))\n        .finally(() => setLoadingMember(false))\n    }\n  }, [memberId])\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n\n    const path = memberId === 'new' ? '/create' : '/update'\n\n    fetch(`${API_HOST}/member${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({ member })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch(err => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      {loadingMember ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={6}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                minHeight: '54px'\n              }}\n              className={classes.sticky}\n            >\n              <Tooltip title=\"BACK TO MEMBERS\">\n                <IconButton\n                  aria-label=\"back to members\"\n                  onClick={() => props.history.push('/members')}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </Tooltip>\n\n              <h2>{memberId === 'new' ? 'Create' : 'Edit'} Member</h2>\n            </div>\n\n            <TextField\n              label=\"email\"\n              fullWidth\n              value={member.registration_email}\n              className={classes.gridItem}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  registration_email: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"name\"\n              fullWidth\n              value={member.name}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  name: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"phone\"\n              fullWidth\n              value={member.phone}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  phone: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"address\"\n              fullWidth\n              value={member.address}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  address: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount\"\n              fullWidth\n              value={member.discount}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount type\"\n              fullWidth\n              value={member.discount_type}\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  discount_type: event.target.value\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"fees paid\"\n              fullWidth\n              value={member.fees_paid}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  fees_paid: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"store credit\"\n              fullWidth\n              value={member.store_credit}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  store_credit: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"shares\"\n              fullWidth\n              value={member.shares}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={event => {\n                event.persist()\n                setMember(prevMember => ({\n                  ...prevMember,\n                  shares: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <InputLabel id=\"prev-import-tag-select-label\">Type</InputLabel>\n              <Select\n                labelId=\"prev-import-tag-select-label\"\n                id=\"prev-import-tag-select\"\n                value={member.member_type}\n                onChange={event =>\n                  event.target &&\n                  event.target.value &&\n                  setMember(prevMember => ({\n                    ...prevMember,\n                    member_type: event.target.value as string\n                  }))\n                }\n              >\n                <MenuItem value=\"consumer-owners\">consumer-owner</MenuItem>\n                <MenuItem value=\"worker-owners\">worker-owner</MenuItem>\n                <MenuItem value=\"producer-owners\">producer owner</MenuItem>\n              </Select>\n            </FormControl>\n\n            <div className={classes.gridItem}>\n              <Button\n                disabled={loading}\n                onClick={() => submitData()}\n                size=\"large\"\n              >\n                {memberId === 'new' ? 'CREATE' : 'SAVE'}\n              </Button>\n            </div>\n          </Grid>\n\n          <Grid item sm={6} className={classes.sticky}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </Paper>\n  )\n}\n\nexport default withRouter(EditMember)\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport clsx from 'clsx'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TagFaces from '@material-ui/icons/TagFaces'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { mainListItems } from './listItems' // secondaryListItems\n\nimport { RootState } from './redux'\nimport { UserServiceProps } from './redux/session/reducers'\nimport { checkSession, logout } from './redux/session/actions'\n\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\nimport { getPreferences } from './redux/preferences/actions'\n\nimport Loading from './Loading'\nimport Dashboard from './dashboard/Dashboard'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ProtectedRoute from './auth/ProtectedRoute'\nimport UserMenu from './auth/UserMenu'\nimport Pages from './pages/Pages'\nimport Orders from './orders/Orders'\nimport WholesaleOrders from './wholesaleorders/WholesaleOrders'\nimport Users from './users/Users'\nimport Products from './products/Products'\nimport ImportProducts from './products/ImportProducts'\nimport EditOrder from './orders/EditOrder'\nimport Members from './members/Members'\nimport EditMember from './members/EditMember'\nimport { APP_VERSION } from './constants'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: '100vh'\n    },\n    nav: {\n      background: theme.palette.primary.main,\n      zIndex: 0,\n      display: 'flex',\n      height: '48px',\n      width: '48px',\n      alignItems: 'center',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      '&:hover': {\n        zIndex: theme.zIndex.drawer + 1\n      },\n      '& button': {\n        marginLeft: 0\n      }\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    version: {\n      fontStyle: 'italic',\n      fontSize: '0.8em',\n      flexGrow: 1,\n      alignSelf: 'center',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    content: {\n      marginLeft: '16px'\n    }\n  })\n)\n\ninterface DispatchProps {\n  checkSession: () => void\n  getPreferences: () => void\n  logout: () => void\n}\n\ntype Props = UserServiceProps & PreferencesServiceProps & DispatchProps\n\nconst App: React.FC<Props> = (props: Props) => {\n  const [loading, setLoading] = useState(true)\n\n  // checkSession is destructured from props and passed into useEffect\n  // which is a bit confusing since checkSession is also imported. ah scope.\n  const {\n    checkSession,\n    userService,\n    getPreferences\n    // ,preferencesService\n  } = props\n\n  useEffect(() => {\n    getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    checkSession()\n  }, [checkSession])\n\n  useEffect(() => {\n    // console.log(\n    //   'userService fx.. userService.isFetching:',\n    //   !userService.isFetching && !!userService.user,\n    //   'userService:',\n    //   userService\n    // )\n    !userService.isFetching && userService.user && setLoading(false)\n    setOpen(userService.isFetching && !!userService.user)\n  }, [userService])\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(true)\n\n  // #TODO: move this. i guess.\n  // console.log(preferencesService)\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        {userService.user && userService.user.role === 'admin' && (\n          <div className={classes.nav}>\n            <IconButton\n              edge=\"start\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n        )}\n\n        {userService && userService.user && userService.user.role === 'admin' && (\n          <Drawer\n            classes={{\n              paper: clsx(classes.drawerPaper)\n            }}\n            onClose={() => setOpen(false)}\n            open={open}\n          >\n            <List onClick={() => setOpen(false)}>{mainListItems}</List>\n\n            <Divider />\n            <ListItem button onClick={() => props.logout()}>\n              <ListItemIcon>\n                <TagFaces />\n              </ListItemIcon>\n              <ListItemText primary=\"log out\" />\n            </ListItem>\n\n            {/* <List>{secondaryListItems}</List>  */}\n            <div className={classes.version}>\n              <span>{APP_VERSION}</span>\n            </div>\n          </Drawer>\n        )}\n\n        <main className={classes.content}>\n          {/* ROUTER */}\n\n          {loading ? (\n            <Loading />\n          ) : (\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/register\" component={Register} />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/products\"\n                component={Products}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/products/import\"\n                component={ImportProducts}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders\"\n                exact\n                component={Orders}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders/edit/:id\"\n                component={EditOrder}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/orders/create\"\n                component={EditOrder}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/wholesaleorders\"\n                component={WholesaleOrders}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/users\"\n                component={Users}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/members\"\n                component={Members}\n                exact\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/members/:id\"\n                component={EditMember}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/pages\"\n                component={Pages}\n              />\n              <ProtectedRoute\n                userService={userService}\n                path=\"/\"\n                component={Dashboard}\n              />\n            </Switch>\n          )}\n\n          {/* <Box pt={4}>FOOT'r</Box> */}\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState\n): UserServiceProps & PreferencesServiceProps => {\n  return {\n    userService: states.session.userService,\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    checkSession: () => dispatch(checkSession()),\n    getPreferences: () => dispatch(getPreferences()),\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n    // background: {\n    //   default: '#fff',\n    // },\n  }\n})\n\nexport default theme\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport theme from './theme'\nimport store from './redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}