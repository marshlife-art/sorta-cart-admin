{"version":3,"sources":["redux/session/reducers.ts","redux/preferences/reducers.ts","redux/index.ts","theme.tsx","listItems.tsx","constants.ts","redux/session/actions.ts","redux/preferences/actions.ts","Loading.tsx","dashboard/Title.tsx","dashboard/Orders.tsx","dashboard/WholesaleOrders.tsx","dashboard/Members.tsx","dashboard/Dashboard.tsx","auth/Login.tsx","auth/Register.tsx","auth/ProtectedRoute.tsx","members/StoreCredits.tsx","orders/OrderDetailPanel.tsx","orders/Orders.tsx","wholesaleorders/useWholesaleOrderService.ts","wholesaleorders/EditMenu.tsx","wholesaleorders/WholesaleOrderLineItems.tsx","wholesaleorders/EditWholesaleOrder.tsx","wholesaleorders/AddWholesaleOrderLineItems.tsx","wholesaleorders/WholesaleOrders.tsx","users/NewUserModal.tsx","users/UserRolesMenu.tsx","users/Users.tsx","products/Products.tsx","products/ImportProducts.tsx","products/OnHand.tsx","products/AddStock.tsx","orders/OrderLineItems.tsx","orders/LineItemAutocomplete.tsx","orders/MemberAutocomplete.tsx","orders/EditOrder.tsx","orders/useOrderService.ts","members/Members.tsx","members/EditMember.tsx","announcements/EditAnnouncementMenu.tsx","announcements/renderers.tsx","announcements/EditAnnouncement.tsx","announcements/usePageService.ts","announcements/Announcements.tsx","App.tsx","index.tsx"],"names":["combineReducers","userService","state","isFetching","action","type","user","error","undefined","preferencesService","preferences","createStore","session","applyMiddleware","thunk","darkTheme","createMuiTheme","palette","primary","main","secondary","red","A400","lightTheme","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","ListSubheader","API_HOST","TAX_RATE","TAX_RATE_STRING","toFixed","ORDER_STATUSES","new","needs_review","pending","complete","void","archived","PAYMENT_STATUSES","balance_due","paid","credit_owed","failed","SHIPMENT_STATUSES","backorder","ready","shipped","partial","canceled","APP_VERSION","process","npm_package_version","require","version","set","setError","NULL_USER","id","email","token","DEFAULT_PREFERENCES","dark_mode","Loading","Container","fixed","Box","pt","style","textAlign","Title","props","Typography","variant","color","gutterBottom","children","useStyles","makeStyles","theme","seeMore","marginTop","spacing","rowHover","backgroundColor","background","default","cursor","withRouter","classes","useState","data","page","totalCount","orders","setOrders","useEffect","fetch","method","headers","credentials","then","response","json","catch","err","console","warn","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","order","className","onClick","history","push","title","createdAt","Date","toLocaleString","formatDistance","now","addSuffix","status","name","item_count","subtotal","total","Button","event","body","JSON","stringify","pageSize","vendor","members","setMembers","member","registration_email","fees_paid","root","padding","minHeight","paper","display","overflowX","flexDirection","Dashboard","Grid","container","item","xs","md","Paper","form","width","justifyContent","alignItems","submit","margin","connect","states","ownProps","dispatch","login","password","a","Promise","resolve","msg","reason","message","e","finally","role","maxWidth","onSubmit","preventDefault","target","currentTarget","emailEl","elements","namedItem","passwordEl","value","length","TextField","label","autoFocus","fullWidth","required","disabled","register","regKey","regKeyParam","URLSearchParams","useLocation","search","get","passwordConfirmEl","regKeyEl","ProtectedRoute","Component","rest","render","isAdmin","pathname","from","location","header","fontSize","text","row","nested","paddingLeft","ExpansionPanel","withStyles","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","content","MuiExpansionPanelSummary","ExpansionPanelDetails","marginLeft","MuiExpansionPanelDetails","result","List","aria-labelledby","subheader","Tooltip","store_credit","square","expandIcon","aria-controls","colSpan","credits","credits_sum","li","OrderId","description","adjustments","adjustments_sum","createStyles","marginRight","borderLeft","divider","gridHeading","gridItem","paddingBottom","paddingRight","lastUpdated","squareLink","OrderDetailPanel","line_items","OrderLineItems","filter","kind","payments","paymentsTotal","reduce","acc","v","parseFloat","creditsTotal","balance","aria-label","idx","scope","product","unf","price","selected_unit","quantity","payment","receipt_number","href","receipt_url","rel","Math","abs","direction","justify","phone","address","User","Member","notes","updatedAt","tableRef","createRef","searchExpanded","setSearchExpanded","isSelecting","setIsSelecting","searchAction","icon","tooltip","isFreeAction","newOrderAction","printAction","orderIds","wOpen","window","open","document","innerHTML","editAction","actions","setActions","columns","field","filtering","formatRelative","lookup","hidden","query","reject","detailPanel","onRowClick","rowData","togglePanel","options","headerStyle","position","top","maxBodyHeight","pageSizeOptions","debounceInterval","emptyRowsWhenPaging","selection","onSelectionChange","blankWholesaleOrder","payment_status","shipment_status","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","common","white","MenuItem","EditMenu","React","anchorEl","setAnchorEl","handleClose","ButtonGroup","onSaveBtnClick","aria-haspopup","keepMounted","Boolean","onClose","confirm","onDeleteBtnClick","wholesaleOrder","onProductsExportToCsv","liTable","deleteBtn","minWidth","groupedRow","groupedRowTotals","typography","h6","lineItems","lineItemData","setLineItemData","setSnackMsg","setSnackOpen","groupedLineItems","prevData","productTotal","adjustmentTotal","orderTotal","forEach","upc_code","key","qty","pk","qtyUnits","liTotal","ws_price_cost","qtySum","qtyAdjustments","totalSum","Object","values","u_price_cost","round","IconButton","ids","setReload","removeLineItem","items","o","issueOrderCredits","category","sub_category","ws_price","u_price","import_tag","keys","Parser","editMenu","wholesaleOrderId","setWholesaleOrderId","setWholesaleOrder","loading","setLoading","doSave","setDoSave","reload","wholesaleOrderService","setResult","payload","useWholesaleOrderService","snackOpen","snackMsg","handleSnackClose","match","params","valueFor","path","useWholesaleOrderSaveService","sm","onChange","prevOrder","FormControl","InputLabel","Select","labelId","multiline","rows","rowsMax","setReloadOrders","replace","csvout","fields","parse","filename","navigator","msSaveBlob","blobObject","Blob","anchor","createElement","download","URL","createObjectURL","encodeURIComponent","createEvent","initEvent","dispatchEvent","click","saveStreamCSV","Snackbar","autoHideDuration","ContentProps","needsRefresh","setNeedsRefresh","refreshTable","useCallback","current","onQueryChange","selectedLineItems","setSelectedLineItems","addAction","handleWholesaleOrderMenuOpen","Array","isArray","wholesaleorderLookup","setWholesaleOrderLookup","toLocaleDateString","wholesaleorderMenuAnchorEl","setWholesaleOrderMenuAnchorEl","handleWholesaleOrderMenuClose","handleWholesaleOrderSelect","filterPlaceholder","Divider","wholesaleorder","titleText","flexGrow","height","paperNav","list","selectedListItem","noOrdersMsg","wholesaleOrders","setWholesaleOrders","reloadOrders","selectedStatus","setSelectedStatus","allWholesaleOrders","reloadWholesaleOrders","setReloadWholesaleOrders","useAllWholesaleOrdersService","split","reverse","isNaN","parseInt","lg","defaultExpanded","loadOrdersForStatus","exact","modal","shadows","ROLES","NewUserModal","setEmail","setRole","setDiabled","includes","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","placeholder","handleRefresh","UserRolesMenu","handleRoleChange","resp","newUserModalOpen","setNewUserModalOpen","newUserAction","deleteAction","alert","Products","p","setCategoryLookup","categoryLookup","setSubCategoryLookup","subCategoryLookup","setVendorLookup","vendorLookup","filterCellStyle","paddingTop","unit_type","zIndex","preFormat","whiteSpace","ImportProducts","setVendor","importTag","setImportTag","prevImportTag","setPrevImportTag","markup","setMarkup","forceCheck","setForceCheck","formData","setFormData","setResponse","setImportTagsLookup","importTagsLookup","vendorMenuAnchorEl","setVendorMenuAnchorEl","handleVendorMenuClose","helperText","handleVendorSelect","tag","FormHelperText","inputProps","min","max","step","FormControlLabel","control","Checkbox","checked","accept","files","FormData","append","delete","toString","importFile","getElementById","OnHand","exportCsvAction","assign","AddStock","dryrun","setDryrun","addStockCSVFileInput","table","borderCollapse","qtyinput","usdFormat","num","line_item","liPkSize","pksize","join","orderSubtotal","sum","i","orderAdjustmentsTotal","adjustmentsTotal","orderTaxes","onTaxesChange","onTotalChange","onSubTotalChange","handleQtyChange","indexOf","onLineItemUpdated","handleDescriptionChange","handlePriceChange","onHandProducts","backorderProducts","renderLineItemRow","heading","createCreditFromLineItem","createLineItemCredit","unit","handleUnitChange","InputLabelProps","shrink","rowSpan","InputProps","startAdornment","InputAdornment","LineItemAutocomplete","setOpen","setOptions","q","setQ","active","products","count_on_hand","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","onItemSelected","freeSolo","renderInput","endAdornment","CircularProgress","MemberAutocomplete","blankOrder","formInput","liHeader","sticky","breakpoints","up","saveBtn","orderSideHeading","emailIcon","fetchStoreCredit","MemberId","setStoreCredit","orderId","setOrderId","setOrder","saving","setSaving","showLiAutocomplete","setShowLiAutocomplete","showMemberAutocomplete","setShowMemberAutocomplete","needToCheckForDiscounts","setNeedToCheckForDiscounts","canApplyMemberDiscount","setCanApplyMemberDiscount","orderService","useOrderService","storeCredit","_order","discount","pOrderId","UserId","discountAmt","canDiscount","discountPrice","discounts","updateLineItem","adjustment","orderLineItems","splice","createCredit","li_total","absPrice","credit","shouldShowAddMemberDiscount","success","discount_type","amt","applyStoreCredit","noValidate","autoComplete","persist","lineItem","tax","notTaxLineItems","newMemberAction","blankMember","shares","member_type","ordersHeader","loadingMember","setLoadingMember","memberId","setMember","createNewUser","setCreateNewUser","filters","column","fetchMemberOrders","prevMember","submitData","zeroMinWidth","k","EditAnnouncementMenu","styles","listItem","MarkdownHeading","level","MarkdownListItem","renderers","paragraph","link","tableHead","tableBody","tableRow","tableCell","preview","pageName","slug","pageSlug","setPageSlug","setPage","showPreview","setShowPreview","pageService","usePageService","usePageSaveService","prevPage","plugins","gfm","Default","pages","setPages","allPages","reloadPages","setReloadPages","useAllPagesService","EditAnnouncement","nav","speedDial","left","transition","drawer","flexShrink","drawerPaper","fontStyle","alignSelf","checkSession","getPreferences","rject","localStorage","getItem","setPreferences","setItem","logout","useDarkTheme","setUseDarkTheme","ThemeProvider","CssBaseline","Fab","Drawer","clsx","prev","textOverflow","overflow","Login","Register","Orders","EditOrder","WholesaleOrders","Users","Members","EditMember","StoreCredits","Announcements","bugsnagClient","bugsnag","use","bugsnagReact","ErrorBoundary","getPlugin","ReactDOM","store","querySelector"],"mappings":"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","file":"static/js/main.5c770484.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { User, LoginError } from '../../types/User'\n\nexport interface UserService {\n  isFetching: boolean\n  user?: User\n  error?: LoginError\n}\n\nexport interface UserServiceProps {\n  userService: UserService\n}\n\nconst userService = (\n  state: UserService = { isFetching: false },\n  action: Action\n): UserService => {\n  switch (action.type) {\n    case 'SET':\n      return { ...state, user: action.user, error: undefined }\n    case 'SET_FETCHING':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR':\n      return { ...state, user: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<UserServiceProps>({\n  userService\n})\n","import { combineReducers } from 'redux'\n\nimport { Action } from './actions'\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nexport interface PreferencesService {\n  isFetching: boolean\n  preferences?: Preferences\n  error?: PreferencesError\n}\n\nexport interface PreferencesServiceProps {\n  preferencesService: PreferencesService\n}\n\nconst preferencesService = (\n  state: PreferencesService = { isFetching: false },\n  action: Action\n): PreferencesService => {\n  switch (action.type) {\n    case 'SET_PREFERENCES':\n      return { ...state, preferences: action.preferences, error: undefined }\n    case 'SET_FETCHING_PREFERENCES':\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    case 'SET_ERROR_PREFERENCES':\n      return { ...state, preferences: undefined, error: action.error }\n  }\n  return state\n}\n\nexport default combineReducers<PreferencesServiceProps>({\n  preferencesService\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport session, { UserServiceProps } from './session/reducers'\nimport preferences, { PreferencesServiceProps } from './preferences/reducers'\n\nexport interface RootState {\n  session: UserServiceProps\n  preferences: PreferencesServiceProps\n}\n\nexport default createStore(\n  combineReducers<RootState>({\n    session,\n    preferences\n  }),\n  applyMiddleware(thunk)\n)\n","import red from '@material-ui/core/colors/red'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#FF4081'\n    },\n    error: {\n      main: red.A400\n    }\n  }\n})\nexport { darkTheme, lightTheme }\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport ViewListIcon from '@material-ui/icons/ViewList'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport TagFacesIcon from '@material-ui/icons/TagFaces'\nimport PeopleIcon from '@material-ui/icons/People'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\nimport OnHandIcon from '@material-ui/icons/PanTool'\nimport AddStockIcon from '@material-ui/icons/LibraryAdd'\nimport AnnouncementsIcon from '@material-ui/icons/Notifications'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products\">\n      <ListItemIcon>\n        <ViewListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/import\">\n      <ListItemIcon>\n        <OpenInBrowserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Import Products\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/onhand\">\n      <ListItemIcon>\n        <OnHandIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Stock On Hand\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/products/addstock\">\n      <ListItemIcon>\n        <AddStockIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Add Stock\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/orders\">\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/wholesaleorders\">\n      <ListItemIcon>\n        <LocalShippingIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Wholesale Orders\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/users\">\n      <ListItemIcon>\n        <TagFacesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Users\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/members\">\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Members\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/storecredits\">\n      <ListItemIcon>\n        <CreditIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Store Credits\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/announcements\">\n      <ListItemIcon>\n        <AnnouncementsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Announcements\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n","import { OrderStatus, PaymentStatus, ShipmentStatus } from './types/Order'\n\nexport const API_HOST =\n  process.env.NODE_ENV === 'production'\n    ? 'https://api.marshcoop.org'\n    : 'https://api.marsh.dev'\n\nexport const TAX_RATE = 0.06391\nexport const TAX_RATE_STRING = `${(TAX_RATE * 100).toFixed(3)}%`\n\ntype OrderStatusLookup = { [key in OrderStatus]: string }\nexport const ORDER_STATUSES: OrderStatusLookup = {\n  new: 'new',\n  needs_review: 'needs review',\n  pending: 'pending',\n  complete: 'complete',\n  void: 'void',\n  archived: 'archived'\n}\n\ntype OrderPaymentStatusLookup = { [key in PaymentStatus]: string }\nexport const PAYMENT_STATUSES: OrderPaymentStatusLookup = {\n  balance_due: 'balance due',\n  paid: 'paid',\n  credit_owed: 'credit owed',\n  failed: 'failed',\n  void: 'void'\n}\n\ntype OrderShipmentStatusLookup = { [key in ShipmentStatus]: string }\nexport const SHIPMENT_STATUSES: OrderShipmentStatusLookup = {\n  backorder: 'backorder',\n  pending: 'pending',\n  ready: 'ready',\n  shipped: 'shipped',\n  partial: 'partial',\n  canceled: 'canceled'\n}\n\nexport const APP_VERSION = `v${\n  process.env.npm_package_version || require('../package.json').version\n} made with ♥ in NYC`\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { User, LoginError } from '../../types/User'\nimport { API_HOST } from '../../constants'\n\nexport interface SetAction {\n  type: 'SET'\n  user: User\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR'\n  error: LoginError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (user: User): SetAction => {\n  return { type: 'SET', user }\n}\nexport const setError = (error: LoginError): SetError => {\n  return { type: 'SET_ERROR', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING', isFetching }\n}\n\nconst NULL_USER: User = {\n  id: undefined,\n  email: undefined,\n  token: undefined\n}\n\nexport const checkSession = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/check_session`, {\n        credentials: 'include'\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('check_session', response)\n          if (response.msg === 'ok' && response.user) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(set(NULL_USER))\n          }\n        })\n        .catch((err) => {\n          console.warn('check_session caught err:', err)\n          // hmm, maybe the API is just down? ...is it really necessary to NULL the user?\n          dispatch(set(NULL_USER))\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const register = (\n  regKey: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ regKey, password })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.msg === 'ok' && response.user && response.user.id) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch((e) => {\n          console.warn('register error:', e)\n          dispatch(\n            setError({\n              error: 'error',\n              reason: 'unable to register right now :('\n            })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ email, password })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.msg === 'ok' && response.user && response.user.id) {\n            dispatch(set(response.user))\n          } else {\n            dispatch(setError({ error: 'error', reason: response.message }))\n          }\n        })\n        .catch((e) => {\n          console.warn('login error:', e)\n          dispatch(\n            setError({ error: 'error', reason: 'unable to login right now :(' })\n          )\n        })\n        .finally(() => {\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n\nexport const logout = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve) => {\n      dispatch(isFetching(true))\n\n      fetch(`${API_HOST}/logout`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .catch(console.warn)\n        .finally(() => {\n          dispatch(set(NULL_USER))\n          dispatch(isFetching(false))\n          resolve()\n        })\n    })\n  }\n}\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\n\nimport { Preferences, PreferencesError } from '../../types/Preferences'\n\nconst DEFAULT_PREFERENCES: Preferences = {\n  dark_mode: 'true'\n}\n\nexport interface SetAction {\n  type: 'SET_PREFERENCES'\n  preferences: Preferences\n}\nexport interface SetFetcing {\n  type: 'SET_FETCHING_PREFERENCES'\n  isFetching: boolean\n}\nexport interface SetError {\n  type: 'SET_ERROR_PREFERENCES'\n  error: PreferencesError\n}\n\nexport type Action = SetAction | SetFetcing | SetError\n\nexport const set = (preferences: Preferences): SetAction => {\n  return { type: 'SET_PREFERENCES', preferences }\n}\nexport const setError = (error: PreferencesError): SetError => {\n  return { type: 'SET_ERROR_PREFERENCES', error }\n}\nexport const isFetching = (isFetching: boolean): SetFetcing => {\n  return { type: 'SET_FETCHING_PREFERENCES', isFetching }\n}\n\nexport const getPreferences = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      const preferences = localStorage && localStorage.getItem('preferences')\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        dispatch(set(JSON.parse(preferences)))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n\nexport const setPreferences = (\n  preferences: Preferences\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    return new Promise<void>((resolve, rject) => {\n      dispatch(isFetching(true))\n\n      if (!preferences) {\n        dispatch(set(DEFAULT_PREFERENCES))\n      } else {\n        localStorage &&\n          localStorage.setItem('preferences', JSON.stringify(preferences))\n        dispatch(set(preferences))\n      }\n      dispatch(isFetching(false))\n      resolve()\n    })\n  }\n}\n","import React from 'react'\nimport { Container } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nexport default function Loading() {\n  return (\n    <Container fixed>\n      <Box pt={4} style={{ textAlign: 'center' }}>\n        L O A D I N G . . .\n      </Box>\n    </Container>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: { children: React.ReactNode }) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Order } from '../types/Order'\nimport { formatDistance } from 'date-fns/esm'\n\ninterface OrderData {\n  data: Order[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const [orders, setOrders] = useState<OrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    fetch(`${API_HOST}/orders/recent`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then((response) => response.json())\n      .then(setOrders)\n      .catch((err) => {\n        console.warn(err)\n        return { data: [], page: 0, totalCount: 0 }\n      })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>orders in the last 14 days</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>status</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map((order) => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/orders/edit/${order.id}`)}\n            >\n              <TableCell\n                title={\n                  order.createdAt && new Date(order.createdAt).toLocaleString()\n                }\n              >\n                {order.createdAt &&\n                  formatDistance(new Date(order.createdAt), Date.now(), {\n                    addSuffix: true\n                  })}\n              </TableCell>\n              <TableCell>{order.status}</TableCell>\n              <TableCell>{order.name}</TableCell>\n              <TableCell>{order.email}</TableCell>\n              <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/orders')\n          }}\n        >\n          ALL ORDERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Orders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { formatDistance } from 'date-fns'\n\nimport { API_HOST } from '../constants'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\ninterface WholesaleOrderData {\n  data: WholesaleOrder[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction WholesaleOrders(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const [orders, setOrders] = useState<WholesaleOrderData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ pageSize: 10 })\n    })\n      .then((response) => response.json())\n      .then(setOrders)\n      .catch((err) => {\n        console.warn(err)\n        return { data: [], page: 0, totalCount: 0 }\n      })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>recent wholesale orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>vendor</TableCell>\n            <TableCell>status</TableCell>\n            {/* <TableCell>payment status</TableCell>\n            <TableCell>shipment status</TableCell>\n           <TableCell>items</TableCell>\n            <TableCell>subtotal</TableCell>\n            <TableCell align=\"right\">total</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.data.map((order) => (\n            <TableRow\n              key={order.id}\n              className={classes.rowHover}\n              onClick={() =>\n                props.history.push(`/wholesaleorders/edit/${order.id}`)\n              }\n            >\n              <TableCell\n                title={\n                  order.createdAt && new Date(order.createdAt).toLocaleString()\n                }\n              >\n                {order.createdAt &&\n                  formatDistance(new Date(order.createdAt), Date.now(), {\n                    addSuffix: true\n                  })}\n              </TableCell>\n              <TableCell>{order.vendor}</TableCell>\n              <TableCell>{order.status}</TableCell>\n              {/*<TableCell>{order.payment_status}</TableCell>\n              <TableCell>{order.shipment_status}</TableCell>\n               <TableCell>{order.item_count}</TableCell>\n              <TableCell>{order.subtotal}</TableCell>\n              <TableCell align=\"right\">{order.total}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/wholesaleorders')\n          }}\n        >\n          SEE MORE\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(WholesaleOrders)\n","import React, { useState, useEffect } from 'react'\n// import Link from '@material-ui/core/Link'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Title from './Title'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\n\nimport { API_HOST } from '../constants'\nimport { Member } from '../types/Member'\nimport { formatDistance } from 'date-fns'\n\ninterface MemberData {\n  data: Member[]\n  page: number\n  totalCount: number\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default,\n      cursor: 'pointer'\n    }\n  }\n}))\n\nfunction Members(props: RouteComponentProps) {\n  const classes = useStyles()\n\n  const [members, setMembers] = useState<MemberData>({\n    data: [],\n    page: 0,\n    totalCount: 0\n  })\n\n  useEffect(() => {\n    fetch(`${API_HOST}/members`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ pageSize: 10 })\n    })\n      .then((response) => response.json())\n      .then(setMembers)\n      .catch((err) => {\n        console.warn(err)\n        return { data: [], page: 0, totalCount: 0 }\n      })\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>recent members</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>created</TableCell>\n            <TableCell>name</TableCell>\n            <TableCell>email</TableCell>\n            <TableCell align=\"right\">fees_paid</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {members.data.map((member) => (\n            <TableRow\n              key={member.id}\n              className={classes.rowHover}\n              onClick={() => props.history.push(`/members/${member.id}`)}\n            >\n              <TableCell\n                title={\n                  member.createdAt &&\n                  new Date(member.createdAt).toLocaleString()\n                }\n              >\n                {member.createdAt &&\n                  formatDistance(new Date(member.createdAt), Date.now(), {\n                    addSuffix: true\n                  })}\n              </TableCell>\n              <TableCell>{member.name}</TableCell>\n              <TableCell>{member.registration_email}</TableCell>\n              <TableCell align=\"right\">{member.fees_paid}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(event: any) => {\n            props.history.push('/members')\n          }}\n        >\n          ALL MEMBERS\n        </Button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(Members)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nimport Orders from './Orders'\nimport WholesaleOrders from './WholesaleOrders'\nimport Members from './Members'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: '100vh'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflowX: 'hidden',\n    flexDirection: 'column'\n  }\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.paper}>\n            <WholesaleOrders />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className={classes.paper}>\n            <Members />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Orders />\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { login } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  login: (email: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction Login(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n    const emailEl = target.elements.namedItem('email') as HTMLInputElement\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n\n    if (\n      emailEl &&\n      emailEl.value.length > 0 &&\n      passwordEl &&\n      passwordEl.value.length > 0\n    ) {\n      props.login(emailEl.value, passwordEl.value)\n    }\n  }\n\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\">\n      <form onSubmit={doLogin} className={classes.form}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" display=\"block\">\n            MARSH COOP\n          </Typography>\n          <Typography variant=\"overline\" display=\"inline\">\n            admin\n          </Typography>\n        </div>\n        <TextField\n          label=\"email\"\n          name=\"email\"\n          type=\"text\"\n          autoFocus\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            Login\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { withRouter, RouteComponentProps, useLocation } from 'react-router-dom'\nimport { Container, Button, TextField } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { register } from '../redux/session/actions'\nimport { UserServiceProps } from '../redux/session/reducers'\n\ninterface OwnProps {}\n\ninterface DispatchProps {\n  register: (regKey: string, password: string) => void\n}\n\ntype Props = UserServiceProps & OwnProps & DispatchProps & RouteComponentProps\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    // minHeight: 'calc(100vh - 64px)'\n  },\n  form: {\n    width: '100%',\n    minHeight: '100vh',\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search)\n}\n\nfunction Register(props: Props) {\n  const doLogin = (event: React.FormEvent) => {\n    event.preventDefault()\n    setError('')\n    const target = event.currentTarget as HTMLFormElement\n\n    const passwordEl = target.elements.namedItem('password') as HTMLInputElement\n    const passwordConfirmEl = target.elements.namedItem(\n      'password_confirm'\n    ) as HTMLInputElement\n\n    let regKey: string = ''\n\n    if (regKeyParam) {\n      regKey = regKeyParam\n    }\n\n    if (!regKey) {\n      const regKeyEl = target.elements.namedItem('regKey') as HTMLInputElement\n      if (regKeyEl && regKeyEl.value.length > 1) {\n        regKey = regKeyEl.value\n      }\n    }\n\n    if (!regKey) {\n      setError('no registration key')\n    }\n\n    if (\n      passwordEl &&\n      passwordEl.value.length > 0 &&\n      passwordConfirmEl &&\n      passwordConfirmEl.value.length > 0\n    ) {\n      if (passwordConfirmEl.value !== passwordEl.value) {\n        setError('passwords do not match')\n      } else {\n        props.register(regKey, passwordConfirmEl.value)\n      }\n    }\n  }\n\n  let query = useQuery()\n  const regKeyParam = query.get('regKey')\n  const { userService, history } = props\n  const classes = useStyles()\n  const [error, setError] = useState('')\n\n  // when userService changes, figure out if the page should redirect if a user is already logged in.\n  useEffect(() => {\n    if (\n      userService.user &&\n      !userService.isFetching &&\n      userService.user.role &&\n      userService.user.role === 'admin'\n    ) {\n      history.push('/')\n    }\n    // else if (userService.user && !userService.isFetching) {\n    //   setError('o noz! error! ...hmm, not an admin?')\n    // }\n  }, [userService, history])\n\n  return (\n    <Container maxWidth=\"sm\" className={classes.container}>\n      <form onSubmit={doLogin} className={classes.form}>\n        {!regKeyParam && (\n          <TextField\n            label=\"registration key\"\n            name=\"regKey\"\n            type=\"text\"\n            autoFocus\n            fullWidth\n            required\n          />\n        )}\n\n        <TextField\n          label=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoFocus={!!regKeyParam}\n          fullWidth\n          required\n        />\n        <TextField\n          label=\"password_confirm\"\n          name=\"password_confirm\"\n          type=\"password\"\n          fullWidth\n          required\n        />\n\n        <div>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={props.userService.isFetching}\n            className={classes.submit}\n          >\n            submit\n          </Button>\n        </div>\n\n        <Box color=\"error.main\">\n          {props.userService.error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {props.userService.error.reason}\n              </Typography>\n            </>\n          )}\n          {error && (\n            <>\n              <Typography variant=\"overline\" display=\"block\">\n                onoz! an error!\n              </Typography>\n              <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                {error}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </form>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState,\n  ownProps: OwnProps\n): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>,\n  ownProps: OwnProps\n): DispatchProps => {\n  return {\n    register: (regKey, password) => dispatch(register(regKey, password))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(Register))\n","import React from 'react'\nimport { RouteProps, Redirect, Route } from 'react-router-dom'\n\nimport { UserServiceProps, UserService } from '../redux/session/reducers'\n\nconst isAdmin = (userService: UserService): boolean =>\n  userService.user && userService.user.role && userService.user.role === 'admin'\n    ? true\n    : false\n\ninterface ProtectedRouteProps {\n  children?: React.ReactNode\n}\n\nconst ProtectedRoute = ({\n  component: Component,\n  userService,\n  children,\n  ...rest\n}: ProtectedRouteProps & RouteProps & UserServiceProps) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAdmin(userService) ? (\n        Component ? (\n          <Component {...props} />\n        ) : (\n          children\n        )\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default ProtectedRoute\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\n\nimport { API_HOST } from '../constants'\nimport { LineItem } from '../types/Order'\nimport { Member } from '../types/Member'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    maxWidth: '100vw',\n    minHeight: '100vh'\n  },\n  header: {\n    fontSize: '1.5em',\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.background.paper\n  },\n  row: {\n    width: '100%',\n    padding: '0 1em',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  },\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  rowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.paper\n    }\n  }\n}))\n\nconst ExpansionPanel = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n}))(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    marginLeft: theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\ntype StoreCreditRow = Member & {\n  credits: LineItem[]\n  credits_sum: number\n  adjustments: LineItem[]\n  adjustments_sum: number\n  store_credit: number\n}\n\nfunction StoreCredits(props: RouteComponentProps) {\n  const classes = useStyles()\n  // const tableRef = createRef<any>()\n\n  const [members, setMembers] = useState<StoreCreditRow[]>([])\n  useEffect(() => {\n    fetch(`${API_HOST}/admin/store_credit_report`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        setMembers(result)\n      })\n      .catch((err) => {\n        console.warn(err)\n        setMembers([])\n      })\n  }, [])\n\n  return (\n    <Paper className={classes.root}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader component=\"h1\" className={classes.header}>\n            Store Credits\n          </ListSubheader>\n        }\n      >\n        {members.map((member) => (\n          <React.Fragment key={member.id}>\n            <ListItem>\n              <div className={classes.row}>\n                <Tooltip title=\"edit member\">\n                  <Button\n                    onClick={() => props.history.push(`/members/${member.id}`)}\n                  >\n                    {member.name}\n                  </Button>\n                </Tooltip>\n                <Typography>{member.registration_email}</Typography>\n                <Typography>$ {member.store_credit.toFixed(2)}</Typography>\n              </div>\n            </ListItem>\n            <ExpansionPanel square>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls={`panel${member.id}-content`}\n                id={`panel${member.id}-header`}\n              >\n                <Typography>Order Line Items</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>createdAt</TableCell>\n                      <TableCell>order#</TableCell>\n                      <TableCell>description</TableCell>\n                      <TableCell align=\"right\">total</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell colSpan={2} align=\"center\">\n                        Credits ({member.credits.length})\n                      </TableCell>\n                      <TableCell align=\"right\">SUM</TableCell>\n                      <TableCell align=\"right\">{member.credits_sum}</TableCell>\n                    </TableRow>\n                    {member.credits.map((li) => (\n                      <TableRow\n                        key={`${member.id}${li.id}`}\n                        className={classes.rowHover}\n                      >\n                        <TableCell>\n                          {li.createdAt &&\n                            new Date(li.createdAt).toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <Tooltip title=\"edit order\">\n                            <Button\n                              onClick={() =>\n                                props.history.push(`/orders/edit/${li.OrderId}`)\n                              }\n                            >\n                              #{li.OrderId}\n                            </Button>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell>{li.description}</TableCell>\n                        <TableCell align=\"right\">{li.total}</TableCell>\n                      </TableRow>\n                    ))}\n\n                    <TableRow>\n                      <TableCell colSpan={2} align=\"center\">\n                        Adjustments ({member.adjustments.length})\n                      </TableCell>\n                      <TableCell align=\"right\">SUM</TableCell>\n                      <TableCell align=\"right\">\n                        {member.adjustments_sum}\n                      </TableCell>\n                    </TableRow>\n                    {member.adjustments.map((li) => (\n                      <TableRow\n                        key={`${member.id}${li.id}`}\n                        className={classes.rowHover}\n                      >\n                        <TableCell>\n                          {li.createdAt &&\n                            new Date(li.createdAt).toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <Tooltip title=\"edit order\">\n                            <Button\n                              onClick={() =>\n                                props.history.push(`/orders/edit/${li.OrderId}`)\n                              }\n                            >\n                              #{li.OrderId}\n                            </Button>\n                          </Tooltip>\n                        </TableCell>\n                        <TableCell>{li.description}</TableCell>\n                        <TableCell align=\"right\">{li.total}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </React.Fragment>\n        ))}\n      </List>\n    </Paper>\n  )\n}\n\nexport default withRouter(StoreCredits)\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Link from '@material-ui/core/Link'\n\nimport { Order } from '../types/Order'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(2),\n      borderLeft: `${theme.spacing(6)}px solid ${theme.palette.divider}`\n    },\n    gridHeading: {\n      color: theme.palette.text.secondary\n    },\n    gridItem: {\n      paddingBottom: theme.spacing(2),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      textAlign: 'center'\n    },\n    lastUpdated: {\n      marginLeft: theme.spacing(2)\n    },\n    squareLink: {\n      marginLeft: '1em'\n    }\n  })\n)\n\nexport default function OrderDetailPanel(props: { order: Order }) {\n  const classes = useStyles()\n  const order = props.order\n  const line_items = props.order.OrderLineItems || []\n  const adjustments = line_items.filter(\n    (li) =>\n      li.kind !== 'product' && li.kind !== 'payment' && li.kind !== 'credit'\n  )\n  const payments = line_items.filter((li) => li.kind === 'payment')\n  const paymentsTotal = payments.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const credits = line_items.filter((li) => li.kind === 'credit')\n  const creditsTotal = credits.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const balance =\n    parseFloat(`${order.total}`) +\n    parseFloat(`${creditsTotal}`) +\n    parseFloat(`${paymentsTotal}`)\n\n  return (\n    <div className={classes.root}>\n      <Table aria-label=\"order details table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">\n              Line Items ({order.item_count})\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              on hand\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              price\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              unit\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              qty\n            </TableCell>\n            <TableCell component=\"th\" align=\"right\">\n              total\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {line_items.map(\n            (li, idx) =>\n              li.kind === 'product' && (\n                <TableRow key={`orderli${idx}`}>\n                  <TableCell component=\"td\" scope=\"row\">\n                    {li.vendor && `[${li.vendor}] `}\n                    {li.description}\n                    {li.data && li.data.product\n                      ? ` ${li.data.product.unf}`\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {li.status === 'on_hand' ? 'x' : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.price}</TableCell>\n                  <TableCell align=\"right\">{li.selected_unit}</TableCell>\n                  <TableCell align=\"right\">{li.quantity}</TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              )\n          )}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Sub Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.subtotal}\n            </TableCell>\n          </TableRow>\n\n          {adjustments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Adjustments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {adjustments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {`(${li.kind}) `} {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              <b>Total</b>\n            </TableCell>\n            <TableCell component=\"td\" scope=\"row\" align=\"right\">\n              {order.total}\n            </TableCell>\n          </TableRow>\n\n          {payments && payments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Payments</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {payments.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {li.description}\n                {li.data && li.data.payment && li.data.payment.receipt_number && (\n                  <Link\n                    className={classes.squareLink}\n                    color=\"secondary\"\n                    href={li.data.payment.receipt_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {li.data.payment.receipt_number}\n                  </Link>\n                )}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          {credits && credits.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Credits</b>\n              </TableCell>\n            </TableRow>\n          )}\n          {credits.map((li, idx) => (\n            <TableRow key={`orderli${idx}`}>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3}>\n                {li.description}\n              </TableCell>\n              <TableCell align=\"right\">{li.quantity}</TableCell>\n              <TableCell align=\"right\">{li.total}</TableCell>\n            </TableRow>\n          ))}\n\n          {balance > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Balance Due</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                {balance.toFixed(2)}\n              </TableCell>\n            </TableRow>\n          )}\n\n          {balance < 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Credit Owed</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                {Math.abs(balance).toFixed(2)}\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              customer\n            </Typography>\n            <Typography variant=\"body1\">\n              {order.name}{' '}\n              <Link color=\"secondary\" href={`mailto:${order.email}`}>\n                {order.email}\n              </Link>\n              <br />\n              <Link color=\"secondary\" href={`tel:${order.phone}`}>\n                {order.phone}\n              </Link>\n              <br />\n              {order.address} <br />\n            </Typography>\n          </div>\n        </Grid>\n        {order.User && order.User !== order.Member && (\n          <Grid item xs={4}>\n            <div className={classes.gridItem}>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                className={classes.gridHeading}\n                gutterBottom\n              >\n                created by\n              </Typography>\n              <Typography variant=\"body1\">\n                <Link color=\"secondary\" href={`mailto:${order.User.email}`}>\n                  {order.User.email}\n                </Link>{' '}\n                {order.User.role && <>({order.User.role}) </>}\n              </Typography>\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={4}>\n          <div className={classes.gridItem}>\n            <Typography\n              variant=\"overline\"\n              display=\"block\"\n              className={classes.gridHeading}\n              gutterBottom\n            >\n              notes\n            </Typography>\n            <Typography variant=\"body2\">{order.notes}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      {order.createdAt !== order.updatedAt && (\n        <div className={classes.lastUpdated}>\n          <i>Last updated</i> {new Date(order.updatedAt).toLocaleString()}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\nimport { Order } from '../types/Order'\nimport OrderDetailPanel from './OrderDetailPanel'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport { formatRelative } from 'date-fns'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Orders(props: RouteComponentProps) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'CLOSE SEARCH' : 'SEARCH',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newOrderAction = {\n    icon: 'add',\n    tooltip: 'NEW ORDER',\n    isFreeAction: true,\n    onClick: () => props.history.push('/orders/create')\n  }\n\n  const printAction = {\n    tooltip: 'PRINT',\n    icon: 'print',\n    onClick: (e: any, data: Order[]) => {\n      const orderIds = data.map((order) => order.id)\n\n      fetch(`${API_HOST}/orders/print`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ orderIds })\n      })\n        .then((response) => response.text())\n        .then((result) => {\n          try {\n            // eslint-disable-next-line\n            const wOpen = window.open('about:blank')\n            if (wOpen) {\n              wOpen.document.body.innerHTML += result\n            }\n          } catch (e) {\n            console.warn('caught error doing this razzle dazze shit e:', e)\n          }\n        })\n        .catch((err) => {\n          console.warn(err)\n        })\n    }\n  }\n\n  const editAction = {\n    tooltip: 'EDIT',\n    icon: 'edit',\n    onClick: (e: any, data: Order[]) => {\n      data[0] && data[0].id && props.history.push(`/orders/edit/${data[0].id}`)\n    }\n  }\n\n  // const archiveAction = {\n  //   tooltip: 'ARCHIVE',\n  //   icon: 'archive',\n  //   onClick: (e: any, data: Order[]) => {\n  //     console.log('archive these muthafuckaz')\n  //   }\n  // }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newOrderAction\n  ])\n\n  useEffect(() => {\n    !isSelecting && setActions([searchAction, newOrderAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded, isSelecting]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          { title: '#', field: 'id', type: 'string', filtering: false },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (order: Order) => (\n              <div\n                title={\n                  order.createdAt && new Date(order.createdAt).toLocaleString()\n                }\n              >\n                {order.createdAt &&\n                  formatRelative(new Date(order.createdAt), Date.now())}\n              </div>\n            )\n          },\n          {\n            title: 'status',\n            field: 'status',\n            type: 'string',\n            lookup: ORDER_STATUSES\n          },\n          {\n            title: 'payment status',\n            field: 'payment_status',\n            type: 'string',\n            lookup: PAYMENT_STATUSES\n          },\n          {\n            title: 'shipment status',\n            field: 'shipment_status',\n            type: 'string',\n            lookup: SHIPMENT_STATUSES\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'email', field: 'email', type: 'string', filtering: false },\n          {\n            title: 'items',\n            field: 'item_count',\n            type: 'numeric',\n            filtering: false\n          },\n          {\n            title: 'total',\n            field: 'total',\n            type: 'currency',\n            filtering: false\n          },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            hidden: true\n            // render: (order: Order) =>\n            //   order.updatedAt\n            //     ? new Date(order.updatedAt).toLocaleString()\n            //     : null\n          },\n          { title: 'phone', field: 'phone', type: 'string', hidden: true },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'notes', field: 'notes', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          },\n          { title: 'history', field: 'history', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            // console.log('query:', query)\n            fetch(`${API_HOST}/orders`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                // console.log('result', result)\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        detailPanel={(order) => <OrderDetailPanel order={order} />}\n        onRowClick={(event, rowData, togglePanel) =>\n          togglePanel && togglePanel()\n        }\n        title=\"Orders\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        onSelectionChange={(data: Order[], rowData?: Order | undefined) => {\n          searchExpanded && setSearchExpanded(false)\n          if (data.length === 0) {\n            setIsSelecting(false)\n            return\n          }\n          setIsSelecting(true)\n          if (data.length === 1) {\n            setActions([printAction, editAction])\n          } else {\n            setActions([printAction])\n          }\n        }}\n        actions={actions}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Orders)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\nimport { OrderStatus } from '../types/Order'\n\nconst blankWholesaleOrder: WholesaleOrder = {\n  id: '',\n  vendor: '',\n  notes: '',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  createdAt: '',\n  updatedAt: ''\n}\n\nconst useWholesaleOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void,\n  reload: boolean,\n  setReload: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id) {\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    if (id === 'new') {\n      setResult({ status: 'loaded', payload: blankWholesaleOrder })\n      setLoading(false)\n      setReload(false)\n      return\n    }\n\n    fetch(`${API_HOST}/wholesaleorder/${id}`, {\n      credentials: 'include',\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResult({ status: 'loaded', payload: response as WholesaleOrder })\n      })\n      .catch((error) => {\n        console.warn('useWholesaleOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n        setReload(false)\n      })\n  }, [id, setLoading, reload, setReload])\n\n  return result\n}\n\nconst useAllWholesaleOrdersService = (\n  status: OrderStatus,\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>,\n  reloadWholesaleOrders: boolean,\n  setReloadWholesaleOrders: (reloadWholesaleOrders: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadWholesaleOrders &&\n      fetch(`${API_HOST}/wholesaleorders`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          status\n        })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setResult({\n            status: 'loaded',\n            payload: response.data as WholesaleOrder[]\n          })\n        })\n        .catch((error) => {\n          console.warn('useWholesaleOrderService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => {\n          setReloadWholesaleOrders(false)\n          setLoading(false)\n        })\n  }, [\n    reloadWholesaleOrders,\n    setReloadWholesaleOrders,\n    status,\n    setLoading,\n  ])\n\n  return result\n}\n\nconst useWholesaleOrderSaveService = (\n  wholesaleOrder: WholesaleOrder | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<WholesaleOrder>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !wholesaleOrder || !wholesaleOrder.id) {\n      setDoSave(false)\n      return\n    }\n\n    const path =\n      wholesaleOrder.id === 'new'\n        ? '/wholesaleorder/create'\n        : '/wholesaleorder/upsert'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      body: JSON.stringify(wholesaleOrder)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResult({\n          status: 'loaded',\n          payload: response.order as WholesaleOrder\n        })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch((error) => {\n        console.warn('useWholesaleOrderSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [wholesaleOrder, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport {\n  useWholesaleOrderService,\n  useAllWholesaleOrdersService,\n  useWholesaleOrderSaveService\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport FileIcon from '@material-ui/icons/FileCopy'\n\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditWholesaleOrderMenuProps {\n  wholesaleOrder: WholesaleOrder\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n  onProductsExportToCsv: () => void\n}\n\nexport default function EditMenu(props: EditWholesaleOrderMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"wholesaleorders-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"wholesaleorders-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete wholesale order\" />\n        </StyledMenuItem>\n\n        <StyledMenuItem\n          onClick={() => {\n            props.onProductsExportToCsv()\n            handleClose()\n          }}\n          disabled={!props.wholesaleOrder.id}\n        >\n          <ListItemIcon>\n            <FileIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"export products to .csv\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { LineItemData, GroupedItem } from './EditWholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    liTable: {\n      marginTop: theme.spacing(4)\n    },\n    deleteBtn: {\n      width: '88px'\n    },\n    unf: {\n      minWidth: '105px'\n    },\n    groupedRow: {\n      backgroundColor: theme.palette.background.default\n    },\n    groupedRowTotals: theme.typography.h6\n  })\n)\n\nfunction WholesaleOrderLineItems(\n  props: {\n    wholesaleOrder?: WholesaleOrder\n    setReload: React.Dispatch<React.SetStateAction<boolean>>\n    lineItemData: LineItemData\n    setLineItemData: React.Dispatch<React.SetStateAction<LineItemData>>\n    setSnackMsg: (value: React.SetStateAction<string>) => void\n    setSnackOpen: React.Dispatch<React.SetStateAction<boolean>>\n  } & RouteComponentProps\n) {\n  const classes = useStyles()\n  const lineItems = props?.wholesaleOrder?.OrderLineItems\n  const { lineItemData, setLineItemData, setSnackMsg, setSnackOpen } = props\n\n  function calc() {\n    let groupedLineItems: {\n      [key: string]: GroupedItem\n    } = {}\n\n    setLineItemData((prevData) => ({\n      ...prevData,\n      productTotal: 0,\n      adjustmentTotal: 0,\n      orderTotal: 0\n    }))\n\n    lineItems?.forEach((li) => {\n      const id =\n        li.data &&\n        li.data.product &&\n        `${li.data.product.unf}${li.data.product.upc_code}`\n      const key = id ? id : li.description\n\n      let acc = groupedLineItems[key]\n\n      const qty =\n        li.data && li.data.product && li.selected_unit === 'EA'\n          ? li.quantity / li.data.product.pk\n          : li.quantity\n\n      const qtyUnits =\n        li.data && li.data.product && li.selected_unit === 'CS'\n          ? li.quantity * li.data.product.pk\n          : li.quantity\n\n      const liTotal =\n        li.data && li.data.product\n          ? +(parseFloat(li.data.product.ws_price_cost) * qty).toFixed(2)\n          : li.total\n\n      groupedLineItems[key] = {\n        qtySum: acc ? acc.qtySum + qty : qty,\n        qtyUnits: acc ? acc.qtyUnits + qtyUnits : qtyUnits,\n        qtyAdjustments: 0,\n        totalSum: acc ? acc.totalSum + liTotal : liTotal,\n        product: li && li.data && li.data.product,\n        vendor: li.vendor,\n        description: li.description,\n        line_items: acc ? [...acc.line_items, li] : [li]\n      }\n\n      setLineItemData((prevData) => ({\n        ...prevData,\n        productTotal: prevData.productTotal + parseFloat(`${liTotal}`),\n        orderTotal: prevData.orderTotal + liTotal\n      }))\n    })\n\n    Object.values(groupedLineItems).forEach((item) => {\n      // check if qtySum is not a round number (i.e. a partial case)\n      if (item.qtySum % 1 !== 0 && item.product) {\n        const pk = item.product.pk\n        const qty = item.line_items.reduce(\n          (acc, v) => acc + (v.selected_unit === 'EA' ? v.quantity : 0),\n          0\n        )\n        // quantity needed to complete a case\n        const quantity = Math.abs((qty % pk) - pk)\n        const price = +(\n          quantity * parseFloat(item.product.u_price_cost)\n        ).toFixed(2)\n\n        const total = price\n        item.line_items.push({\n          quantity,\n          price,\n          total,\n          kind: 'adjustment',\n          description: `add ${quantity} EA`\n        })\n        // also add to the sums when creating this adjustment.\n        item.totalSum = item.totalSum + total\n        item.qtySum = Math.round(item.qtySum + quantity / pk)\n        item.qtyAdjustments = quantity\n\n        setLineItemData((prevData) => ({\n          ...prevData,\n          adjustmentTotal: prevData.adjustmentTotal + +total,\n          orderTotal: prevData.orderTotal + total\n        }))\n      }\n    })\n\n    setLineItemData((prevData) => ({\n      ...prevData,\n      groupedLineItems\n    }))\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(calc, [lineItems])\n\n  function removeLineItem(item: GroupedItem) {\n    const ids = item.line_items.map((li) => li.id).filter((a) => a)\n    if (ids && ids.length && window.confirm('are you sure?')) {\n      fetch(`${API_HOST}/wholesaleorder/removelineitem`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ ids })\n      })\n        .then((response) => response.json())\n        .then((response) => !response.error && props.setReload(true))\n        .catch((err) => console.warn('members removelineitem caught err', err))\n    }\n  }\n\n  function issueOrderCredits(item: GroupedItem) {\n    const items = item.line_items\n      .map((li) =>\n        li.OrderId\n          ? {\n              OrderId: li.OrderId,\n              total: li.total,\n              description: item.description\n            }\n          : undefined\n      )\n      .filter((o) => o)\n\n    if (window.confirm('will issue order credits. are you sure?')) {\n      fetch(`${API_HOST}/wholesaleorder/issuecredits`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(items)\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (!response.error) {\n            setSnackMsg('Store credits created!')\n            setSnackOpen(true)\n          } else {\n            setSnackMsg('Unable to create credits!')\n            setSnackOpen(true)\n          }\n        })\n        .catch((err) => {\n          setSnackMsg(`onoz! error creating credits: ${err}`)\n          setSnackOpen(true)\n          console.warn('issueOrderCredits caught err', err)\n        })\n    }\n  }\n\n  return (\n    <Table size=\"small\" className={classes.liTable}>\n      <TableHead>\n        <TableRow>\n          <TableCell className={classes.deleteBtn} />\n          <TableCell className={classes.unf}>unf</TableCell>\n          <TableCell>description</TableCell>\n          <TableCell>price</TableCell>\n          <TableCell>cost</TableCell>\n          <TableCell>pk</TableCell>\n\n          <TableCell align=\"center\">qty</TableCell>\n          <TableCell align=\"right\">total</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {Object.values(lineItemData.groupedLineItems).map(\n          (item: GroupedItem, idx: number) => (\n            <React.Fragment key={`wsgli${idx}`}>\n              <TableRow className={classes.groupedRow}>\n                <TableCell className={classes.deleteBtn}>\n                  <Tooltip title=\"remove line item\">\n                    <IconButton\n                      aria-label=\"remove line item\"\n                      onClick={() => removeLineItem(item)}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"give order credits\">\n                    <IconButton\n                      aria-label=\"issue order credits for this item\"\n                      onClick={() => issueOrderCredits(item)}\n                    >\n                      <CreditIcon />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${\n                      item.product.unf\n                        ? item.product.unf\n                        : item.product.upc_code\n                    } `}\n                </TableCell>\n                <TableCell>\n                  {item.product &&\n                    `${item.product.name} ${item.product.description}`}\n                  {item.product && (\n                    <>\n                      <br />\n                      {`${item.product.upc_code} ${item.product.category} > ${item.product.sub_category}`}{' '}\n                    </>\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && item.product.ws_price}\n                  {item.product &&\n                  item.product.ws_price !== item.product.u_price ? (\n                    <>\n                      <br />\n                      {`(${item.product.u_price}EA)`}\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </TableCell>\n                <TableCell>\n                  {item.product && ` ${item.product.ws_price_cost}`}\n                  <br />\n                  {item.product &&\n                    `${\n                      item.product.ws_price_cost !== item.product.u_price_cost\n                        ? `(${item.product.u_price_cost}EA)`\n                        : ''\n                    }`}\n                </TableCell>\n                <TableCell>{item.product && item.product.pk}</TableCell>\n\n                <TableCell align=\"center\" className={classes.groupedRowTotals}>\n                  {+item.qtySum.toFixed(2)}\n                </TableCell>\n                <TableCell align=\"right\" className={classes.groupedRowTotals}>\n                  {item.totalSum.toFixed(2)}\n                </TableCell>\n              </TableRow>\n              {item.line_items.map((li) => (\n                <TableRow key={`wsli${li.id}`}>\n                  <TableCell colSpan={2} />\n                  <TableCell>\n                    [{li.kind}] {li.vendor}{' '}\n                    {li.data && li.data.product && li.data.product.import_tag\n                      ? li.data.product.import_tag\n                      : li.description}{' '}\n                    {li.OrderId && (\n                      <Link\n                        color=\"secondary\"\n                        href={`/orders/edit/${li.OrderId}`}\n                        onClick={(e: any) => {\n                          e.preventDefault()\n                          props.history.push(`/orders/edit/${li.OrderId}`)\n                        }}\n                      >\n                        Order #{li.OrderId}\n                      </Link>\n                    )}\n                  </TableCell>\n                  <TableCell />\n                  <TableCell />\n                  <TableCell>\n                    {li.kind === 'adjustment'\n                      ? `${li.quantity} EA`\n                      : `${li.quantity} ${li.selected_unit}`}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {li.data && li.data.product && li.selected_unit === 'EA'\n                      ? +(li.quantity / li.data.product.pk).toFixed(2)\n                      : null}\n                  </TableCell>\n                  <TableCell align=\"right\">{li.total}</TableCell>\n                </TableRow>\n              ))}\n            </React.Fragment>\n          )\n        )}\n\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            ITEM COUNT\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            PRODUCT TOTAL\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            ADJUSTMENTS TOTAL\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            TOTAL\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell colSpan={2} align=\"center\">\n            {Object.keys(lineItemData.groupedLineItems).length}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.productTotal.toFixed(2)}\n          </TableCell>\n          <TableCell colSpan={2} align=\"right\">\n            {lineItemData.adjustmentTotal.toFixed(2)}\n          </TableCell>\n          <TableCell\n            colSpan={2}\n            align=\"right\"\n            className={classes.groupedRowTotals}\n          >\n            {lineItemData.orderTotal.toFixed(2)}\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default withRouter(WholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { LineItem } from '../types/Order'\nimport { Product } from '../types/Product'\nimport {\n  WholesaleOrder,\n  WholesaleOrderRouterProps\n} from '../types/WholesaleOrder'\nimport { OrderStatus, ShipmentStatus, PaymentStatus } from '../types/Order'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES\n} from '../constants'\nimport Loading from '../Loading'\nimport {\n  useWholesaleOrderService,\n  useWholesaleOrderSaveService\n} from './useWholesaleOrderService'\nimport EditMenu from './EditMenu'\nimport WholesaleOrderLineItems from './WholesaleOrderLineItems'\n\nconst { Parser } = require('json2csv')\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    vendor: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    editMenu: {\n      padding: `${theme.spacing(2)}px 0`,\n      textAlign: 'right'\n    }\n  })\n)\n\nexport interface GroupedItem {\n  qtySum: number\n  qtyUnits: number\n  qtyAdjustments: number\n  totalSum: number\n  product: Product | undefined\n  vendor: string | undefined\n  description: string\n  line_items: LineItem[]\n}\n\nexport interface LineItemData {\n  groupedLineItems: {\n    [key: string]: GroupedItem\n  }\n  orderTotal: number\n  productTotal: number\n  adjustmentTotal: number\n}\n\ninterface EditWholesaleOrderProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction EditWholesaleOrder(\n  props: EditWholesaleOrderProps &\n    RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const [wholesaleOrderId, setWholesaleOrderId] = useState('')\n  const [wholesaleOrder, setWholesaleOrder] = useState<WholesaleOrder>()\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [reload, setReload] = useState(true)\n\n  const [lineItemData, setLineItemData] = useState<LineItemData>({\n    groupedLineItems: {},\n    productTotal: 0,\n    adjustmentTotal: 0,\n    orderTotal: 0\n  })\n\n  const wholesaleOrderService = useWholesaleOrderService(\n    wholesaleOrderId,\n    setLoading,\n    reload,\n    setReload\n  )\n\n  useEffect(() => {\n    if (wholesaleOrderService.status === 'loaded') {\n      if (wholesaleOrderService.payload) {\n        setWholesaleOrder(wholesaleOrderService.payload)\n      }\n    }\n  }, [wholesaleOrderService, wholesaleOrderId])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handleOrderNotesChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          notes: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleOrderVendorChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          vendor: event.target.value\n        }\n      }\n    })\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          status: event.target.value as OrderStatus\n        }\n      }\n    })\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          payment_status: event.target.value as PaymentStatus\n        }\n      }\n    })\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setWholesaleOrder((prevOrder) => {\n      if (prevOrder) {\n        return {\n          ...prevOrder,\n          shipment_status: event.target.value as ShipmentStatus\n        }\n      }\n    })\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  const id = props.match.params.id\n\n  useEffect(() => {\n    if (id) {\n      setWholesaleOrderId(id)\n    }\n  }, [id])\n\n  const onSaveBtnClick = (): void => {\n    if (wholesaleOrderId === 'new') {\n      setWholesaleOrder((prevOrder) => {\n        if (prevOrder) {\n          return {\n            ...prevOrder,\n            id: 'new'\n          }\n        }\n      })\n    }\n    setDoSave(true)\n    props.setReloadOrders(true)\n  }\n\n  useWholesaleOrderSaveService(\n    wholesaleOrder,\n    doSave,\n    setDoSave,\n    setSnackMsg,\n    setSnackOpen\n  )\n\n  const onDeleteBtnClick = (): void => {\n    wholesaleOrder &&\n      fetch(`${API_HOST}/wholesaleorder`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ id: wholesaleOrder.id })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          if (response.error) {\n            setSnackMsg(response.msg)\n            setSnackOpen(true)\n          } else {\n            props.history.replace('/wholesaleorders')\n          }\n        })\n        .catch((error) => {\n          console.warn('delete wholesaleOrder fetch caught err:', error)\n          setSnackMsg(`o noz! ${error}`)\n          setSnackOpen(true)\n        })\n  }\n\n  const saveStreamCSV = (filename: string, text: any) => {\n    // lolol shoutout to https://stackoverflow.com/questions/37095233/downloading-and-saving-data-with-fetch-from-authenticated-rest\n    if (window.navigator.msSaveBlob) {\n      // IE 10 and later, and Edge.\n      const blobObject = new Blob([text], { type: 'text/csv' })\n      window.navigator.msSaveBlob(blobObject, filename)\n    } else {\n      // Everthing else (except old IE).\n      // Create a dummy anchor (with a download attribute) to click.\n      const anchor = document.createElement('a')\n      anchor.download = filename\n      if (window.URL.createObjectURL) {\n        // Everything else new.\n        const blobObject = new Blob([text], { type: 'text/csv' })\n        anchor.href = window.URL.createObjectURL(blobObject)\n      } else {\n        // Fallback for older browsers (limited to 2MB on post-2010 Chrome).\n        // Load up the data into the URI for \"download.\"\n        anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(text)\n      }\n      // Now, click it.\n      if (document.createEvent) {\n        const event = document.createEvent('MouseEvents')\n        event.initEvent('click', true, true)\n        anchor.dispatchEvent(event)\n      } else {\n        anchor.click()\n      }\n    }\n  }\n\n  const onProductsExportToCsv = (): void => {\n    const vendor = wholesaleOrder && wholesaleOrder.vendor\n    if (!vendor) {\n      return\n    }\n    const json2csvParser = new Parser({\n      fields: [\n        { value: 'product.unf', label: 'unf' },\n        { value: 'product.upc_code', label: 'upc_code' },\n        { value: 'vendor', label: 'vendor' },\n        { value: 'description', label: 'description' },\n        { value: 'qtySum', label: 'qtySum' },\n        { value: 'qtyUnits', label: 'units ordered' },\n        { value: 'qtyAdjustments', label: 'on_hand_count_change' },\n        { value: 'totalSum', label: 'totalSum' },\n        { value: 'product.ws_price_cost', label: 'ws_price_cost' },\n        { value: 'product.u_price_cost', label: 'u_price_cost' },\n        { value: 'product.pk', label: 'pk' },\n        { value: 'product.size', label: 'size' },\n        { value: 'product.unit_type', label: 'unit_type' },\n        { value: 'product.category', label: 'category' },\n        { value: 'product.sub_category', label: 'sub_category' },\n        { value: 'product.name', label: 'name' },\n        { value: 'product.description', label: 'description' },\n        { value: 'product.count_on_hand', label: 'count_on_hand' }\n      ]\n    })\n    const csvout = json2csvParser.parse(\n      Object.values(lineItemData.groupedLineItems)\n    )\n    saveStreamCSV(`${vendor}.csv`, csvout)\n  }\n\n  function valueFor(field: keyof WholesaleOrder) {\n    return wholesaleOrder && wholesaleOrder[field] ? wholesaleOrder[field] : ''\n  }\n\n  return wholesaleOrder ? (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={2}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item sm={5}>\n              <TextField\n                className={classes.vendor}\n                label=\"vendor\"\n                fullWidth\n                value={valueFor('vendor')}\n                onChange={handleOrderVendorChange}\n              />\n              <FormControl fullWidth>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map((status) => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item sm={7}>\n              <TextField\n                label=\"notes\"\n                multiline\n                fullWidth\n                rows={4}\n                rowsMax={28}\n                value={valueFor('notes')}\n                onChange={handleOrderNotesChange}\n              />\n              <div className={classes.editMenu}>\n                <EditMenu\n                  wholesaleOrder={wholesaleOrder}\n                  onSaveBtnClick={onSaveBtnClick}\n                  onDeleteBtnClick={onDeleteBtnClick}\n                  onProductsExportToCsv={onProductsExportToCsv}\n                />\n              </div>\n            </Grid>\n          </Grid>\n          <WholesaleOrderLineItems\n            wholesaleOrder={wholesaleOrder}\n            setReload={setReload}\n            lineItemData={lineItemData}\n            setLineItemData={setLineItemData}\n            setSnackMsg={setSnackMsg}\n            setSnackOpen={setSnackOpen}\n          />\n        </>\n      )}\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditWholesaleOrder)\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Menu, MenuItem } from '@material-ui/core'\nimport Divider from '@material-ui/core/Divider'\nimport MaterialTable from 'material-table'\nimport Link from '@material-ui/core/Link'\n\nimport { LineItem } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100vw'\n    }\n  })\n)\n\ninterface AddWholesaleOrderLineItemsProps {\n  setReloadOrders: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction AddWholesaleOrderLineItems(\n  props: AddWholesaleOrderLineItemsProps & RouteComponentProps\n) {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const [selectedLineItems, setSelectedLineItems] = useState<string[]>()\n\n  const addAction = {\n    tooltip: 'ADD LINE ITEMS TO ORDER',\n    icon: 'add',\n    onClick: (\n      event: React.MouseEvent<HTMLButtonElement>,\n      data: LineItem | LineItem[]\n    ) => {\n      handleWholesaleOrderMenuOpen(event)\n      if (Array.isArray(data)) {\n        // ain't nobody (tsc) tell me nothin\n        setSelectedLineItems(data.map((li) => li.id) as string[])\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [wholesaleorderLookup, setWholesaleOrderLookup] = useState<\n    Array<{ id: string; name: string }>\n  >()\n  useEffect(() => {\n    fetch(`${API_HOST}/wholesaleorders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ status: ['new', 'needs_review'] })\n    })\n      .then((response) => response.json())\n      .then((result) =>\n        setWholesaleOrderLookup(\n          result.data.map(\n            (order: { id: string; vendor: string; createdAt: string }) => ({\n              id: order.id,\n              name: `${order.vendor} ${new Date(\n                order.createdAt\n              ).toLocaleDateString()}`\n            })\n          )\n        )\n      )\n      .catch(console.warn)\n  }, [])\n  const [\n    wholesaleorderMenuAnchorEl,\n    setWholesaleOrderMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleWholesaleOrderMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    setWholesaleOrderMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleWholesaleOrderMenuClose = () => {\n    setSelectedLineItems([])\n    setWholesaleOrderMenuAnchorEl(null)\n  }\n\n  const handleWholesaleOrderSelect = (id: string) => {\n    fetch(`${API_HOST}/wholesaleorder/addlineitems`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ id, selectedLineItems })\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log('update line items result:', result)\n      })\n      .catch(console.warn)\n      .finally(() => {\n        handleWholesaleOrderMenuClose()\n        setNeedsRefresh(true)\n        props.setReloadOrders(true)\n      })\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'OrderId',\n            field: 'OrderId',\n            type: 'string',\n            filtering: true,\n            render: (row) => (\n              <Link\n                color=\"secondary\"\n                href={`/orders/edit/${row.OrderId}`}\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push(`/orders/edit/${row.OrderId}`)\n                }}\n              >\n                Order #{row.OrderId}\n              </Link>\n            )\n          },\n          {\n            title: 'qty',\n            field: 'quantity',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'total', field: 'total', type: 'string', filtering: false },\n          {\n            title: 'product',\n            field: 'data',\n            type: 'string',\n            render: (row) =>\n              row.data && row.data.product\n                ? `${row.data.product.name} ${row.data.product.description}`\n                : null\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true },\n          {\n            title: 'WholesaleOrderId',\n            field: 'WholesaleOrderId',\n            type: 'string',\n            hidden: true\n          }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/wholesaleorders/lineitems`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Line Items\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[addAction]}\n      />\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={wholesaleorderMenuAnchorEl}\n        keepMounted\n        open={Boolean(wholesaleorderMenuAnchorEl)}\n        onClose={handleWholesaleOrderMenuClose}\n      >\n        <MenuItem onClick={() => handleWholesaleOrderSelect('new')}>\n          New wholesale order\n        </MenuItem>\n        <Divider />\n        {wholesaleorderLookup &&\n          wholesaleorderLookup.map(\n            (wholesaleorder: { id: string; name: string }) => (\n              <MenuItem\n                key={`wholesaleorder-sel-${wholesaleorder.id}`}\n                onClick={() => handleWholesaleOrderSelect(wholesaleorder.id)}\n              >\n                {wholesaleorder.name}\n              </MenuItem>\n            )\n          )}\n      </Menu>\n    </div>\n  )\n}\n\nexport default withRouter(AddWholesaleOrderLineItems)\n","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MUILink from '@material-ui/core/Link'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Typography from '@material-ui/core/Typography'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditWholesaleOrder from './EditWholesaleOrder'\nimport { useAllWholesaleOrdersService } from './useWholesaleOrderService'\nimport { WholesaleOrderRouterProps } from '../types/WholesaleOrder'\nimport { WholesaleOrder } from '../types/WholesaleOrder'\n\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport { withStyles } from '@material-ui/core/styles'\nimport { OrderStatus } from '../types/Order'\nimport Loading from '../Loading'\nimport { ORDER_STATUSES } from '../constants'\nimport AddWholesaleOrderLineItems from './AddWholesaleOrderLineItems'\n\nconst ExpansionPanel = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: 0 //theme.spacing(2)\n  }\n}))(MuiExpansionPanelDetails)\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      textAlign: 'left',\n      marginLeft: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    paperNav: {\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    list: {\n      padding: 0,\n      width: '90%'\n    },\n    selectedListItem: {\n      borderLeft: `${theme.spacing(2)}px solid ${theme.palette.divider}`\n    },\n    noOrdersMsg: {\n      padding: theme.spacing(2)\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction WholesaleOrders(\n  props: Props & RouteComponentProps<WholesaleOrderRouterProps>\n) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [wholesaleOrders, setWholesaleOrders] = useState<WholesaleOrder[]>([])\n  const [reloadOrders, setReloadOrders] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selectedStatus, setSelectedStatus] = useState<OrderStatus>('new')\n  const allWholesaleOrders = useAllWholesaleOrdersService(\n    selectedStatus,\n    setLoading,\n    reloadOrders,\n    setReloadOrders\n  )\n\n  useEffect(() => {\n    allWholesaleOrders.status === 'loaded' &&\n      setWholesaleOrders(allWholesaleOrders.payload)\n  }, [allWholesaleOrders])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addWholesaleOrder() {\n    props.history.push('/wholesaleorders/edit/new')\n    setSnackOpen(true)\n  }\n\n  function loadOrdersForStatus(status: OrderStatus, expanded: boolean) {\n    if (expanded) {\n      setSelectedStatus(status)\n      setReloadOrders(true)\n    }\n  }\n\n  let id: string | number | undefined\n  try {\n    id = window.location.pathname.split('/').reverse()[0]\n    if (isNaN(parseInt(id))) {\n      id = undefined\n    }\n  } catch {\n    /* wellfuck */\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid sm={12} md={3} lg={2} item>\n          <Paper className={classes.paperNav}>\n            <div className={classes.title}>\n              <MUILink\n                color=\"textPrimary\"\n                href=\"\"\n                onClick={(e: any) => {\n                  e.preventDefault()\n                  props.history.push('/wholesaleorders')\n                }}\n                className={classes.titleText}\n              >\n                WHOLESALE ORDERS\n              </MUILink>\n              <IconButton\n                aria-label=\"add wholesale order\"\n                title=\"add wholeslae order\"\n                onClick={() => addWholesaleOrder()}\n              >\n                <Add />\n              </IconButton>\n            </div>\n\n            {Object.keys(ORDER_STATUSES).map((status) => (\n              <ExpansionPanel\n                square\n                key={`EP${status}`}\n                defaultExpanded={status === 'new'}\n                expanded={selectedStatus === status}\n                onChange={(event: any, expanded: boolean) =>\n                  loadOrdersForStatus(status as OrderStatus, expanded)\n                }\n              >\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls={`panel${status}-content`}\n                  id={`panel${status}-header`}\n                >\n                  <Typography>\n                    {ORDER_STATUSES[status as OrderStatus]}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  {loading ? (\n                    <Loading />\n                  ) : (\n                    <List className={classes.list}>\n                      {wholesaleOrders && wholesaleOrders.length ? (\n                        wholesaleOrders.map(\n                          (order: WholesaleOrder, idx: number) => (\n                            <ListItem\n                              button\n                              component={Link}\n                              to={`/wholesaleorders/edit/${order.id}`}\n                              key={`wsorder${idx}`}\n                              className={\n                                // eslint-disable-next-line\n                                id == order.id\n                                  ? classes.selectedListItem\n                                  : undefined\n                              }\n                            >\n                              <ListItemText\n                                primary={order.vendor}\n                                secondary={new Date(\n                                  order.createdAt\n                                ).toLocaleDateString()}\n                              />\n                            </ListItem>\n                          )\n                        )\n                      ) : (\n                        <div className={classes.noOrdersMsg}>\n                          <i>No wholesale orders for this status...</i>\n                        </div>\n                      )}\n                    </List>\n                  )}\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Paper>\n        </Grid>\n\n        <Grid sm={12} md={9} lg={10} item>\n          <Switch>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders\"\n              exact\n            >\n              <AddWholesaleOrderLineItems setReloadOrders={setReloadOrders} />\n            </ProtectedRoute>\n            <ProtectedRoute\n              userService={userService}\n              path=\"/wholesaleorders/edit/:id\"\n            >\n              <Paper className={classes.paper}>\n                <EditWholesaleOrder setReloadOrders={setReloadOrders} />\n              </Paper>\n            </ProtectedRoute>\n          </Switch>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new Wholesale Order!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(WholesaleOrders))\n","import React, { useState, useEffect } from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n)\n\nconst ROLES = ['admin', 'member', 'guest']\n\nexport default function NewUserModal(props: {\n  open: boolean\n  handleClose: () => void\n  handleRefresh: () => void\n}) {\n  const classes = useStyles()\n\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('guest')\n  const [disabled, setDiabled] = useState(false)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (email && email.includes('@')) {\n      setDiabled(false)\n    } else {\n      setDiabled(true)\n    }\n  }, [email])\n\n  const createUser = () => {\n    if (!email) {\n      setError('type an email!')\n      return\n    } else {\n      setError('')\n    }\n    fetch(`${API_HOST}/user/create`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ email, role })\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        // console.log('result', result)\n        if (result.error) {\n          return setError(result.msg)\n        } else {\n          props.handleRefresh()\n          props.handleClose()\n        }\n      })\n      .catch((err) => {\n        console.warn(err)\n        return setError('o noz! there was an error creating user')\n      })\n      .finally(() => setDiabled(false))\n  }\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={classes.paper}>\n            <h2>Add New User</h2>\n            <div>\n              <TextField\n                type=\"email\"\n                margin=\"dense\"\n                label=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(event: any) => setEmail(event.target.value)}\n                autoFocus\n                fullWidth\n              />\n\n              <FormControl fullWidth>\n                <InputLabel id=\"role-select-label\">Role</InputLabel>\n                <Select\n                  labelId=\"role-select-label\"\n                  id=\"role-select\"\n                  margin=\"dense\"\n                  value={role}\n                  onChange={(event) =>\n                    event.target &&\n                    event.target.value &&\n                    setRole(event.target.value as string)\n                  }\n                >\n                  {ROLES.map((name) => (\n                    <MenuItem value={name} key={`role-select${name}`}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={createUser}\n                disabled={disabled}\n              >\n                CREATE\n              </Button>\n\n              {error && (\n                <Box color=\"error.main\">\n                  <Typography component=\"p\">{error}</Typography>\n                </Box>\n              )}\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  )\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { User } from '../types/User'\nimport { API_HOST } from '../constants'\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n))\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\nexport default function UserRolesMenu(props: {\n  user: User\n  disabled: boolean\n}) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [role, setRole] = React.useState(props.user.role || 'none')\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleRoleChange = (id: string | undefined, role: string) => {\n    if (!id) {\n      return\n    }\n    fetch(`${API_HOST}/user/role`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ id, role })\n    })\n      .then((response) => response.json())\n      .then((resp) => {\n        // console.log('resp success!?', resp)\n        handleClose()\n        setRole(role)\n      })\n      .catch((err) => console.warn('handleRoleChange caught err:', err))\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"user-roles-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        disabled={props.disabled}\n      >\n        {role}\n      </Button>\n      <StyledMenu\n        id=\"user-roles-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {/* <StyledMenuItem>\n          <ListItemText\n            primary=\"Superuser\"\n            onClick={() => handleRoleChange(props.user.id, 'superuser')}\n          />\n        </StyledMenuItem> */}\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"admin\"\n            onClick={() => handleRoleChange(props.user.id, 'admin')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"member\"\n            onClick={() => handleRoleChange(props.user.id, 'member')}\n          />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemText\n            primary=\"guest\"\n            onClick={() => handleRoleChange(props.user.id, 'guest')}\n          />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  )\n}\n","import React, { useState, useEffect, createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable, { Action } from 'material-table'\n// import Paper from '@material-ui/core/Paper'\n// import Grid from '@material-ui/core/Grid'\n// import List from '@material-ui/core/List'\n// import ListItem from '@material-ui/core/ListItem'\n// import Add from '@material-ui/icons/Add'\n// import ListItemText from '@material-ui/core/ListItemText'\n// import Divider from '@material-ui/core/Divider'\n// import Snackbar from '@material-ui/core/Snackbar'\n// import IconButton from '@material-ui/core/IconButton'\n// import CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\n// import { Switch } from 'react-router'\n// import ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\n// import { useAllUsersService } from './useUserService'\nimport { UserRouterProps } from '../types/UserRouterProps'\nimport { User } from '../types/User'\nimport NewUserModal from './NewUserModal'\nimport UserRolesMenu from './UserRolesMenu'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Users(props: Props & RouteComponentProps<UserRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n  const tableRef = createRef<any>()\n\n  const [searchExpanded, setSearchExpanded] = useState(false)\n  const [newUserModalOpen, setNewUserModalOpen] = useState(false)\n\n  const searchAction = {\n    icon: searchExpanded ? 'zoom_out' : 'search',\n    tooltip: searchExpanded ? 'Close Search' : 'Search',\n    isFreeAction: true,\n    onClick: () => setSearchExpanded(!searchExpanded)\n  }\n\n  const newUserAction = {\n    icon: 'add',\n    tooltip: 'add new user',\n    isFreeAction: true,\n    onClick: () => setNewUserModalOpen(true)\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove User',\n    icon: 'delete',\n    onClick: (e: any, user: User) => {\n      if (\n        userService &&\n        userService.user &&\n        userService.user.email === user.email\n      ) {\n        alert('you cannot delete yrself!')\n      } else {\n        if (!user.id) {\n          return\n        }\n        if (window.confirm(`Are you sure you want to delete ${user.email}?`)) {\n          fetch(`${API_HOST}/user`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({ id: user.id })\n          })\n            .then((response) => response.json())\n            .then(() => tableRef.current && tableRef.current.onQueryChange())\n            .catch((err) => console.warn('user deleteAction caught err', err))\n        }\n      }\n    }\n  }\n\n  const [actions, setActions] = useState<Action<any>[]>([\n    searchAction,\n    newUserAction,\n    deleteAction\n  ])\n\n  useEffect(() => {\n    setActions([searchAction, newUserAction, deleteAction])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchExpanded]) // note: adding actions to dep array is not pleasant :/\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'role',\n            field: 'role',\n            type: 'string',\n            render: (row) => (\n              <UserRolesMenu\n                user={row as User}\n                disabled={\n                  !!(\n                    userService &&\n                    userService.user &&\n                    userService.user.email === row.email\n                  )\n                }\n              />\n            )\n          },\n          { title: 'email', field: 'email', type: 'string' },\n          {\n            title: 'active',\n            field: 'active',\n            type: 'boolean',\n            filtering: false\n          },\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) => new Date(row.createdAt).toLocaleString()\n          },\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) => new Date(row.updatedAt).toLocaleString()\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/users`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Users\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: searchExpanded,\n          emptyRowsWhenPaging: false\n        }}\n        actions={actions}\n      />\n\n      <NewUserModal\n        open={newUserModalOpen}\n        handleClose={() => {\n          setNewUserModalOpen(false)\n        }}\n        handleRefresh={() =>\n          tableRef.current && tableRef.current.onQueryChange()\n        }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Users))\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\nfunction Products() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map((p) => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({ ids })\n        })\n          .catch((err) => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then((response) => response.json())\n      .then((result) => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then((response) => response.json())\n      .then((result) => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then((response) => response.json())\n      .then((result) => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'import tag',\n            field: 'import_tag',\n            type: 'string',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            }\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'name -- description',\n            field: 'description',\n            type: 'string',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            },\n            render: (row) => {\n              if (row.name) {\n                return `${row.name} -- ${row.description}`\n              } else {\n                return row.description\n              }\n            }\n          },\n          {\n            title: 'pk size unit',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false,\n            render: (row) => {\n              return `${row.pk} ${row.size} ${row.unit_type}`\n            }\n          },\n          {\n            title: 'size',\n            field: 'size',\n            type: 'string',\n            filtering: false,\n            hidden: true\n          },\n          {\n            title: 'unit type',\n            field: 'unit_type',\n            type: 'string',\n            filtering: false,\n            hidden: true\n          },\n          {\n            title: 'price',\n            field: 'ws_price',\n            type: 'currency',\n            filtering: false\n          },\n          {\n            title: '',\n            field: 'u_price',\n            type: 'currency',\n            filtering: false\n          },\n          // {\n          //   title: 'count',\n          //   field: 'count_on_hand',\n          //   type: 'numeric',\n          //   filtering: false\n          // },\n          // {\n          //   title: 'no_backorder',\n          //   field: 'no_backorder',\n          //   type: 'boolean'\n          // },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Products\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      zIndex: 2\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    },\n    preFormat: {\n      whiteSpace: 'pre-wrap'\n    }\n  })\n)\n\nexport default function ImportProducts() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [vendor, setVendor] = useState('')\n  const [importTag, setImportTag] = useState('')\n  const [prevImportTag, setPrevImportTag] = useState('')\n  const [markup, setMarkup] = useState(0.0)\n  const [forceCheck, setForceCheck] = useState(false)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then((response) => response.json())\n      .then((result) => setVendorLookup(result))\n  })\n\n  const [importTagsLookup, setImportTagsLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/import_tags`)\n      .then((response) => response.json())\n      .then((result) => setImportTagsLookup(result))\n  })\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('vendor')\n    formData.delete('import_tag')\n    formData.delete('prev_import_tag')\n    formData.delete('markup')\n    formData.delete('force_check')\n    formData.append('vendor', vendor)\n    formData.append('import_tag', importTag)\n    formData.append('prev_import_tag', prevImportTag)\n    formData.append('markup', `${markup}`)\n    formData.append('force_check', `${forceCheck}`)\n\n    fetch(`${API_HOST}/products/upload`, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch((err) => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => {\n        setLoading(false)\n\n        const importFile = document.getElementById(\n          'csvFileInput'\n        ) as HTMLInputElement\n        if (importFile) {\n          setFormData(undefined)\n          importFile.value = ''\n        }\n      })\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  const [\n    vendorMenuAnchorEl,\n    setVendorMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null)\n\n  const handleVendorMenuOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setVendorMenuAnchorEl(event.currentTarget)\n  }\n\n  const handleVendorMenuClose = () => {\n    setVendorMenuAnchorEl(null)\n  }\n\n  const handleVendorSelect = (vendor: string) => {\n    setVendor(vendor)\n    handleVendorMenuClose()\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Import Products</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <div className={classes.vendor}>\n            <TextField\n              label=\"Vendor\"\n              helperText=\"Required.\"\n              fullWidth\n              value={vendor}\n              onChange={(event) => setVendor(event.target.value)}\n            />\n\n            <div>\n              <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={handleVendorMenuOpen}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </div>\n\n            <Menu\n              id=\"vendor-menu\"\n              anchorEl={vendorMenuAnchorEl}\n              keepMounted\n              open={Boolean(vendorMenuAnchorEl)}\n              onClose={handleVendorMenuClose}\n            >\n              {vendorLookup &&\n                Object.keys(vendorLookup).map((vendor) => (\n                  <MenuItem\n                    key={`vendor-sel-${vendor}`}\n                    onClick={() => handleVendorSelect(vendor)}\n                  >\n                    {vendor}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </div>\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <InputLabel id=\"prev-import-tag-select-label\">\n              Previous Import Tag\n            </InputLabel>\n            <Select\n              labelId=\"prev-import-tag-select-label\"\n              id=\"prev-import-tag-select\"\n              value={prevImportTag}\n              onChange={(event) =>\n                event.target && setPrevImportTag(event.target.value as string)\n              }\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {importTagsLookup &&\n                Object.keys(importTagsLookup).map((tag) => (\n                  <MenuItem key={`tag-sel-${tag}`} value={tag}>\n                    {tag}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>\n              If updating, products with the tag you select here will first be\n              removed.\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label=\"Import Tag\"\n            helperText=\"Required. This should be unique.\"\n            fullWidth\n            value={importTag}\n            onChange={(event) => setImportTag(event.target.value)}\n            className={classes.gridItem}\n          />\n          <TextField\n            label=\"Markup\"\n            helperText=\"Markup percentage. Use decimal format.\"\n            type=\"number\"\n            inputProps={{\n              min: '0',\n              max: '1',\n              step: '0.01'\n            }}\n            fullWidth\n            value={markup}\n            onChange={(event) =>\n              setMarkup(\n                isNaN(parseFloat(event.target.value))\n                  ? 0.0\n                  : parseFloat(event.target.value)\n              )\n            }\n            className={classes.gridItem}\n          />\n\n          <FormControl fullWidth className={classes.gridItem}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  onChange={(\n                    event: React.ChangeEvent<HTMLInputElement>,\n                    checked: boolean\n                  ) => {\n                    setForceCheck(checked)\n                  }}\n                  checked={forceCheck}\n                  value=\"force_check\"\n                />\n              }\n              label=\"Force duplicate check. (only check this if you absolutly need to!)\"\n            />\n          </FormControl>\n\n          <input\n            id=\"csvFileInput\"\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={\n                loading || !importTag || !vendor || formData === undefined\n              }\n              onClick={() => submitData()}\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              IMPORT\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p className={classes.preFormat}>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>What kind of file should be uploaded?</dt>\n              <dd>Comma separated value files with the extension .csv</dd>\n\n              <dt>What columns will get processed?</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>name</b>, <b>description</b>,{' '}\n                <b>pk</b>, <b>size</b>, <b>unit_type</b>, <b>ws_price</b>,{' '}\n                <b>u_price</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>no_backorder</b>,{' '}\n                <b>codes</b>, <b>a</b>, <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>,{' '}\n                <b>f</b>, <b>g</b>, <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>,{' '}\n                <b>ft</b>, <b>m</b>, <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>Are any of these optional?</dt>\n              <dd>\n                <b>unf</b>, <b>ws_price_markup</b>, <b>u_price_markup</b>,{' '}\n                <b>category</b>, <b>sub_category</b>, <b>no_backorder</b>,{' '}\n                <b>codes</b>, <b>a</b>, <b>r</b>, <b>c</b>, <b>l</b>, <b>d</b>,{' '}\n                <b>f</b>, <b>g</b>, <b>v</b>, <b>w</b>, <b>y</b>, <b>k</b>,{' '}\n                <b>ft</b>, <b>m</b>, <b>s</b>, <b>n</b>, <b>og</b>.\n              </dd>\n\n              <dt>\n                <b>codes</b> column\n              </dt>\n              <dd>\n                the <b>codes</b> column value can be a comma-separated list of\n                codes. the values that can be entered in this field are any\n                combination of a, r, c, l, d, f, g, v, w, y, k, ft, m, s, n, og,\n                1, 2, 3.\n              </dd>\n\n              <dt>How do the code columns translate?</dt>\n              <dd>\n                The values in the code columns need to be the same as the\n                header. so for example if there's a column <b>a</b> then the\n                value for the fields in the column need to be <i>a</i> (or blank\n                if not appliciable). except for the <b>og</b> column which can\n                have values og, 1, 2, or 3.\n                <br />\n                <br />\n                <table>\n                  <thead>\n                    <tr>\n                      <th>code</th>\n                      <th>translation</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>a</td>\n                      <td>Artificial ingredients</td>\n                    </tr>\n                    <tr>\n                      <td>c</td>\n                      <td>Low carb</td>\n                    </tr>\n                    <tr>\n                      <td>d</td>\n                      <td>Dairy free</td>\n                    </tr>\n                    <tr>\n                      <td>f</td>\n                      <td>Food Service items</td>\n                    </tr>\n                    <tr>\n                      <td>g</td>\n                      <td>Gluten free</td>\n                    </tr>\n                    <tr>\n                      <td>k</td>\n                      <td>Kosher</td>\n                    </tr>\n                    <tr>\n                      <td>l</td>\n                      <td>Low sodium/no salt</td>\n                    </tr>\n                    <tr>\n                      <td>m</td>\n                      <td>Non-GMO Project Verified</td>\n                    </tr>\n                    <tr>\n                      <td>r</td>\n                      <td>Refined sugar</td>\n                    </tr>\n                    <tr>\n                      <td>v</td>\n                      <td>Vegan</td>\n                    </tr>\n                    <tr>\n                      <td>w</td>\n                      <td>Wheat free</td>\n                    </tr>\n                    <tr>\n                      <td>ft</td>\n                      <td>Fair Trade</td>\n                    </tr>\n                    <tr>\n                      <td>n</td>\n                      <td>Natural</td>\n                    </tr>\n                    <tr>\n                      <td>s</td>\n                      <td>Specialty Only</td>\n                    </tr>\n                    <tr>\n                      <td>y</td>\n                      <td>Yeast free</td>\n                    </tr>\n                    <tr>\n                      <td>og</td>\n                      <td>Organic</td>\n                    </tr>\n                    <tr>\n                      <td>1</td>\n                      <td>100% organic</td>\n                    </tr>\n                    <tr>\n                      <td>2</td>\n                      <td>95%+ organic</td>\n                    </tr>\n                    <tr>\n                      <td>3</td>\n                      <td>70%+ organic</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </dd>\n\n              <dt>How is markup applied?</dt>\n              <dd>\n                Markup is a percentage in decimal format so 0.10 will markup\n                products by 10%. The formula is: <i>PRICE + (PRICE * MARKUP)</i>{' '}\n                so if the value of <b>ws_price</b> is 10.00 and the markup\n                specified is 0.10 the the markup price will be 11.00.\n                <br />\n                <br />\n                If any rows of the price sheet has a non-empty, non-zero value\n                in the <b>ws_price_markup</b> or <b>u_price_markup</b> then that\n                will be used as the markup price. This means only some rows of\n                the price sheet can contain special markups while the rest of\n                the sheet can have a single markup applied.\n              </dd>\n\n              <dt>Import Tag</dt>\n              <dd>\n                This field is used to track changes to new price sheets that are\n                meant to update products that have already been imported once. A\n                use-case for this is when uploading partial lists of product for\n                a vendor. So for example if a sub-set of products are imported,\n                then a while later a new sheet of products can be imported\n                without having to destroy and re-import all the products for a\n                vendor. If uploading a complete list of all products for a\n                particular vendor then it would be reasonable to use the same\n                value as the Vendor field.\n                <br />\n                <br />\n                <b>NOTE:</b> it can be useful to include the current date in the\n                value for the Import Tag field (or otherwise make this a unique\n                value). When creating wholesale orders it might be useful to\n                know which price sheet a product that was ordered came from.\n                <br />\n                <br />\n                When the Previous Import Tag is specified, products with that\n                tag are first deleted before new products are created.\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useState, useEffect, useCallback, createRef } from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: `100vh`\n    }\n  })\n)\n\nfunction OnHand() {\n  const classes = useStyles()\n  let tableRef = createRef<any>()\n\n  // ugh, this is needed because tableRef.current is always null inside the deleteAction onClick fn :/\n  const [needsRefresh, setNeedsRefresh] = useState(false)\n  const refreshTable = useCallback(() => {\n    tableRef.current && tableRef.current.onQueryChange()\n    setNeedsRefresh(false)\n  }, [tableRef, setNeedsRefresh])\n\n  const deleteAction = {\n    tooltip: 'destroy all selected products',\n    icon: 'delete',\n    onClick: (e: any, data: Product | Product[]) => {\n      const ids = Array.isArray(data) ? data.map((p) => p.id) : [data.id]\n      if (ids.length === 0) {\n        return\n      }\n      if (\n        window.confirm(\n          `are sure you want to destroy these ${ids.length} products?`\n        )\n      ) {\n        fetch(`${API_HOST}/products/destroy`, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({ ids })\n        })\n          .catch((err) => console.warn('destroy products caught err:', err))\n          .finally(() => setNeedsRefresh(true))\n      }\n    }\n  }\n\n  const exportCsvAction = {\n    tooltip: 'Export .csv',\n    icon: 'file_copy',\n    isFreeAction: true,\n    onClick: () => {\n      window.location.assign(`${API_HOST}/products/stock_csv`)\n    }\n  }\n\n  useEffect(() => {\n    if (needsRefresh) {\n      refreshTable()\n    }\n  }, [needsRefresh, refreshTable])\n\n  const [categoryLookup, setCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/categories`)\n      .then((response) => response.json())\n      .then((result) => setCategoryLookup(result))\n  })\n\n  const [subCategoryLookup, setSubCategoryLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/sub_categories`)\n      .then((response) => response.json())\n      .then((result) => setSubCategoryLookup(result))\n  })\n\n  const [vendorLookup, setVendorLookup] = useState<object>(() => {\n    fetch(`${API_HOST}/products/vendors`)\n      .then((response) => response.json())\n      .then((result) => setVendorLookup(result))\n  })\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'category',\n            field: 'category',\n            type: 'string',\n            lookup: categoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'sub category',\n            field: 'sub_category',\n            type: 'string',\n            lookup: subCategoryLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'vendor',\n            field: 'vendor',\n            type: 'string',\n            lookup: vendorLookup,\n            filterPlaceholder: 'filter'\n          },\n          {\n            title: 'import tag',\n            field: 'import_tag',\n            type: 'string',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            }\n          },\n          { title: 'name', field: 'name', type: 'string', hidden: true },\n          {\n            title: 'name -- description',\n            field: 'description',\n            type: 'string',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            },\n            render: (row) => {\n              if (row.name) {\n                return `${row.name} -- ${row.description}`\n              } else {\n                return row.description\n              }\n            }\n          },\n          // {\n          //   title: 'pk size unit',\n          //   field: 'pk',\n          //   type: 'numeric',\n          //   filtering: false,\n          //   render: (row) => {\n          //     return `${row.pk} ${row.size} ${row.unit_type}`\n          //   }\n          // },\n          // {\n          //   title: 'size',\n          //   field: 'size',\n          //   type: 'string',\n          //   filtering: false,\n          //   hidden: true\n          // },\n          // {\n          //   title: 'ws u price',\n          //   field: 'ws_price',\n          //   type: 'currency',\n          //   filtering: false,\n          //   render: (row) => {\n          //     return `${row.ws_price} ${row.u_price}`\n          //   }\n          // },\n          // {\n          //   title: 'unit price',\n          //   field: 'u_price',\n          //   type: 'currency',\n          //   filtering: false,\n          //   hidden: true\n          // },\n          {\n            title: 'count',\n            field: 'count_on_hand',\n            type: 'numeric',\n            filterPlaceholder: 'filter',\n            filterCellStyle: {\n              paddingTop: '32px'\n            }\n          },\n          {\n            title: 'pk',\n            field: 'pk',\n            type: 'numeric',\n            filtering: false,\n            render: (row) => {\n              return `${row.pk} ${row.size} ${row.unit_type}`\n            }\n          },\n          {\n            title: 'no_backorder',\n            field: 'no_backorder',\n            type: 'boolean'\n          },\n          { title: 'upc', field: 'upc_code', type: 'string', hidden: true },\n          // { title: 'unf', field: 'unf', type: 'string' },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/products/stock`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn('onoz, caught err:', err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Stock On Hand\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false,\n          selection: true\n        }}\n        actions={[exportCsvAction, deleteAction]}\n      />\n    </div>\n  )\n}\n\nexport default OnHand\n","import React, { useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2),\n      zIndex: 2\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    vendor: {\n      display: 'flex',\n      alignItems: 'center',\n      margin: theme.spacing(2, 0)\n    },\n    preFormat: {\n      whiteSpace: 'pre-wrap'\n    }\n  })\n)\n\nexport default function AddStock() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [dryrun, setDryrun] = useState(true)\n  const [formData, setFormData] = useState<FormData>()\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n    if (!formData) {\n      setError('please select a file!')\n      return\n    }\n    formData.delete('dryrun')\n    formData.append('dryrun', `${dryrun}`)\n\n    fetch(`${API_HOST}/products/add_stock`, {\n      method: 'POST',\n      credentials: 'include',\n      body: formData\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          if (!dryrun) {\n            const addStockCSVFileInput = document.getElementById(\n              'AddStockCSVFileInput'\n            ) as HTMLInputElement\n            if (addStockCSVFileInput) {\n              setFormData(undefined)\n              addStockCSVFileInput.value = ''\n            }\n          }\n          setResponse(response.msg)\n        }\n      })\n      .catch((err) => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  function handleFileChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setLoading(true)\n    if (event.target.files && event.target.files.length) {\n      let data = new FormData()\n      data.append('file', event.target.files[0])\n      setFormData(data)\n      setLoading(false)\n    } else {\n      setFormData(undefined)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <h3>Add Stock Changes</h3>\n\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item sm={4}>\n          <FormControl fullWidth className={classes.gridItem}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  onChange={(\n                    event: React.ChangeEvent<HTMLInputElement>,\n                    checked: boolean\n                  ) => {\n                    setDryrun(checked)\n                  }}\n                  checked={dryrun}\n                  value=\"dryrun\"\n                />\n              }\n              label=\"Dry Run\"\n            />\n          </FormControl>\n\n          <input\n            id=\"AddStockCSVFileInput\"\n            type=\"file\"\n            accept=\".csv\"\n            onChange={handleFileChange}\n            disabled={loading}\n            className={classes.gridItem}\n          />\n\n          <div className={classes.gridItem}>\n            <Button\n              disabled={loading || formData === undefined}\n              onClick={() => submitData()}\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n            >\n              ADD STOCK\n            </Button>\n          </div>\n\n          <div className={classes.gridItem}>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p className={classes.preFormat}>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p className={classes.preFormat}>{response}</p>\n              </div>\n            )}\n          </div>\n        </Grid>\n        <Grid item sm={8}>\n          <Typography variant=\"h6\" gutterBottom>\n            Helpful Information\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom component=\"div\">\n            <dl>\n              <dt>Product Identifier</dt>\n              <dd>\n                <b>unf</b> and <b>upc_code</b> columns are used to identify a\n                unique product.\n              </dd>\n\n              <dt>Columns</dt>\n              <dd>\n                <b>unf</b>, <b>upc_code</b>, <b>count_on_hand</b>,{' '}\n                <b>count_on_hand_change</b>, and <b>no_backorder</b>; any other\n                columns will be ignored.\n                <p>\n                  precedence: first will check if <b>count_on_hand</b> is a\n                  number, and if so, will do a hard count set for the value\n                  specified. if <b>count_on_hand</b> is not a number, then will\n                  look for a number in <b>count_on_hand_change</b> (and add that\n                  to the product <b>count_on_hand</b> value).\n                </p>\n                <p>\n                  <i>note:</i> use whole integer numbers only (so 0.4 would turn\n                  into 0), negative numbers would subtract.\n                </p>\n              </dd>\n\n              <dt>Dry Run</dt>\n              <dd>\n                when checked, this will not modify inventory (useful for\n                debugging .csv files).\n              </dd>\n            </dl>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport CreditIcon from '@material-ui/icons/LocalAtm'\nimport Link from '@material-ui/core/Link'\n\nimport { LineItem } from '../types/Order'\nimport { TAX_RATE, TAX_RATE_STRING } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      overflowX: 'auto',\n      height: '100%'\n    },\n    table: {\n      maxWidth: '95vw',\n      padding: theme.spacing(1),\n      borderCollapse: 'separate',\n      '& td': {\n        border: 'none'\n      }\n    },\n    qtyinput: {\n      width: '50px'\n    }\n  })\n)\n\nfunction usdFormat(num: number | string) {\n  if (num === undefined) {\n    return '0.00'\n  }\n  if (typeof num === 'string') {\n    return `$${parseFloat(num).toFixed(2)}`\n  } else {\n    return `$${num.toFixed(2)}`\n  }\n}\n\nfunction subtotal(items: LineItem[]) {\n  return items\n    .filter((li) => li.kind === 'product')\n    .map(({ total }) => (typeof total === 'string' ? parseFloat(total) : total))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction adjustmentsTotal(items: LineItem[]) {\n  return items\n    .filter((li) => li.kind === 'adjustment')\n    .map(({ total }) => parseFloat(`${total}`))\n    .reduce((sum, i) => sum + i, 0)\n}\n\nfunction liTotal(line_item: LineItem): number {\n  const u_price =\n    line_item.data && line_item.data.product && line_item.data.product.u_price\n      ? parseFloat(line_item.data.product.u_price)\n      : line_item.price\n  const ws_price =\n    line_item.data && line_item.data.product\n      ? parseFloat(line_item.data.product.ws_price)\n      : line_item.price\n\n  return line_item.selected_unit === 'EA' && u_price\n    ? isNaN(line_item.quantity * u_price)\n      ? 0.0\n      : line_item.quantity * u_price\n    : isNaN(line_item.quantity * ws_price)\n    ? 0.0\n    : line_item.quantity * ws_price\n}\n\nfunction liPkSize(line_item: LineItem): string {\n  const pksize = []\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.pk &&\n    line_item.data.product.pk !== 1 &&\n    pksize.push(line_item.data.product.pk)\n  line_item.data &&\n    line_item.data.product &&\n    line_item.data.product.size &&\n    pksize.push(line_item.data.product.size)\n  return pksize.join(' / ')\n}\n\nfunction OrderLineItems(props: {\n  line_items: LineItem[]\n  onLineItemUpdated: (idx: number, line_item: LineItem) => void\n  removeLineItem: (idx: number) => void\n  onTaxesChange: (amount: number) => void\n  onTotalChange: (total: number) => void\n  onSubTotalChange: (subtotal: number) => void\n  createCreditFromLineItem: (line_item: LineItem) => void\n}) {\n  const classes = useStyles()\n\n  const orderSubtotal = subtotal(props.line_items)\n  const orderAdjustmentsTotal = adjustmentsTotal(props.line_items)\n  const orderTaxes = TAX_RATE * (orderSubtotal + orderAdjustmentsTotal)\n  const orderTotal = orderTaxes + orderSubtotal + orderAdjustmentsTotal\n\n  const { onTaxesChange, onTotalChange, onSubTotalChange } = props\n  useEffect(() => {\n    onTaxesChange(orderTaxes)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTaxes])\n\n  useEffect(() => {\n    onTotalChange(orderTotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderTotal])\n\n  useEffect(() => {\n    onSubTotalChange(orderSubtotal)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderSubtotal])\n\n  const handleUnitChange = (line_item: LineItem, unit: string) => {\n    line_item.selected_unit = unit\n    if (line_item.data && line_item.data.product) {\n      line_item.price =\n        unit === 'CS'\n          ? +line_item.data.product.ws_price\n          : +line_item.data.product.u_price\n    }\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleQtyChange = (line_item: LineItem, quantity: number) => {\n    line_item.quantity = quantity > 0 ? quantity : 1\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handleDescriptionChange = (\n    line_item: LineItem,\n    description: string\n  ) => {\n    line_item.description = description\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const handlePriceChange = (line_item: LineItem, price: number) => {\n    line_item.price = price\n    line_item.total = liTotal(line_item)\n    const idx = props.line_items.indexOf(line_item)\n    props.onLineItemUpdated(idx, line_item)\n  }\n\n  const removeLineItem = (line_item: LineItem) => {\n    const idx = props.line_items.indexOf(line_item)\n    props.removeLineItem(idx)\n  }\n\n  const createLineItemCredit = (line_item: LineItem) => {\n    props.createCreditFromLineItem(line_item)\n  }\n\n  const onHandProducts = props.line_items.filter(\n    (li) => li.kind === 'product' && li.status === 'on_hand'\n  )\n  const backorderProducts = props.line_items.filter(\n    (li) => li.kind === 'product' && li.status !== 'on_hand'\n  )\n\n  const adjustments = props.line_items.filter((li) => li.kind === 'adjustment')\n  const payments = props.line_items.filter((li) => li.kind === 'payment')\n  const paymentsTotal = payments.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const credits = props.line_items.filter((li) => li.kind === 'credit')\n  const creditsTotal = credits.reduce(\n    (acc, v) => acc + parseFloat(`${v.total}`),\n    0\n  )\n  const balance =\n    parseFloat(`${orderTotal}`) +\n    parseFloat(`${creditsTotal}`) +\n    parseFloat(`${paymentsTotal}`)\n\n  function renderLineItemRow(\n    line_item: LineItem,\n    idx: number,\n    heading: string\n  ) {\n    return (\n      <TableRow key={`li${heading}${idx}`}>\n        <TableCell align=\"center\">\n          <Tooltip title=\"remove line item\">\n            <IconButton\n              aria-label=\"delete\"\n              size=\"small\"\n              onClick={(event: any) => removeLineItem(line_item)}\n            >\n              <ClearIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"give order credits\">\n            <IconButton\n              aria-label=\"issue order credits for this item\"\n              onClick={() => createLineItemCredit(line_item)}\n            >\n              <CreditIcon />\n            </IconButton>\n          </Tooltip>\n        </TableCell>\n        <TableCell>\n          [{line_item.vendor}] {line_item.description}\n        </TableCell>\n        <TableCell align=\"right\">\n          <div>\n            {line_item.data &&\n            line_item.data.product &&\n            line_item.selected_unit === 'EA' &&\n            line_item.data.product.u_price\n              ? usdFormat(line_item.data.product.u_price)\n              : usdFormat(\n                  line_item.data && line_item.data.product\n                    ? line_item.data.product.ws_price\n                    : line_item.price\n                )}\n          </div>\n          <div>{liPkSize(line_item)}</div>\n        </TableCell>\n        <TableCell align=\"center\">\n          {line_item.data &&\n          line_item.data.product &&\n          line_item.data.product.u_price &&\n          line_item.data.product.u_price !== line_item.data.product.ws_price ? (\n            <Select\n              value={line_item.selected_unit}\n              onChange={(event: any) =>\n                handleUnitChange(line_item, event.target.value)\n              }\n              margin=\"dense\"\n            >\n              <MenuItem value=\"CS\">Case</MenuItem>\n              <MenuItem value=\"EA\">Each</MenuItem>\n            </Select>\n          ) : line_item.data &&\n            line_item.data.product &&\n            line_item.data.product.unit_type === 'CS' ? (\n            'Case'\n          ) : (\n            'Each'\n          )}\n        </TableCell>\n        <TableCell align=\"right\">\n          <TextField\n            className={classes.qtyinput}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            margin=\"dense\"\n            fullWidth\n            value={line_item.quantity}\n            onChange={(event: any) =>\n              handleQtyChange(line_item, event.target.value)\n            }\n            inputProps={{ min: '1', step: '1' }}\n          />\n        </TableCell>\n        <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n      </TableRow>\n    )\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"cart\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"></TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"center\">Price</TableCell>\n            <TableCell align=\"center\">Unit</TableCell>\n            <TableCell align=\"center\">Qty.</TableCell>\n            <TableCell align=\"center\">Total</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {onHandProducts.length > 0 && (\n            <TableRow>\n              <TableCell align=\"left\" colSpan={3}>\n                On Hand\n              </TableCell>\n            </TableRow>\n          )}\n          {onHandProducts.map((line_item, idx) =>\n            renderLineItemRow(line_item, idx, 'on_hand')\n          )}\n\n          {backorderProducts.length > 0 && (\n            <TableRow>\n              <TableCell align=\"left\" colSpan={3}>\n                Backorder\n              </TableCell>\n            </TableRow>\n          )}\n          {backorderProducts.map((line_item, idx) =>\n            renderLineItemRow(line_item, idx, 'backorder')\n          )}\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Subtotal</TableCell>\n            <TableCell align=\"center\">\n              {props.line_items && props.line_items.length}\n            </TableCell>\n            <TableCell align=\"right\">{usdFormat(orderSubtotal)}</TableCell>\n          </TableRow>\n          {adjustments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove adjustment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '9999',\n                    step: '1'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Tax</TableCell>\n            <TableCell align=\"center\">{TAX_RATE_STRING}</TableCell>\n            <TableCell align=\"right\">{usdFormat(orderTaxes)}</TableCell>\n          </TableRow>\n\n          {payments.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Payments</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {payments.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove payment\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n                {line_item.data &&\n                  line_item.data.payment &&\n                  line_item.data.payment.receipt_number && (\n                    <Link\n                      color=\"secondary\"\n                      href={line_item.data.payment.receipt_url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {line_item.data.payment.receipt_number}\n                    </Link>\n                  )}\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '-0.01',\n                    step: '0.01'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          {credits.length > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\">\n                <b>Credits</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {credits.map((line_item, idx) => (\n            <TableRow key={`li${idx}`}>\n              <TableCell align=\"center\">\n                <Tooltip title=\"remove credit\">\n                  <IconButton\n                    aria-label=\"delete\"\n                    size=\"small\"\n                    onClick={(event: any) => removeLineItem(line_item)}\n                  >\n                    <ClearIcon fontSize=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n              <TableCell colSpan={2}>\n                <TextField\n                  type=\"text\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.description}\n                  onChange={(event: any) =>\n                    handleDescriptionChange(line_item, event.target.value)\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <TextField\n                  type=\"number\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.price || line_item.total}\n                  onChange={(event: any) =>\n                    handlePriceChange(line_item, event.target.value)\n                  }\n                  inputProps={{\n                    min: '-9999',\n                    max: '-0.01',\n                    step: '0.01'\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">$</InputAdornment>\n                    )\n                  }}\n                />\n              </TableCell>\n\n              <TableCell align=\"right\">\n                <TextField\n                  className={classes.qtyinput}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  fullWidth\n                  value={line_item.quantity}\n                  onChange={(event: any) =>\n                    handleQtyChange(line_item, event.target.value)\n                  }\n                  inputProps={{ min: '1', step: '1' }}\n                />\n              </TableCell>\n              <TableCell align=\"right\">{usdFormat(line_item.total)}</TableCell>\n            </TableRow>\n          ))}\n\n          <TableRow>\n            <TableCell rowSpan={1} colSpan={3} />\n            <TableCell align=\"right\">Total</TableCell>\n            <TableCell align=\"right\" colSpan={2}>\n              {usdFormat(orderTotal)}\n            </TableCell>\n          </TableRow>\n\n          {balance > 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Balance Due</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\" colSpan={2}>\n                <b>${balance.toFixed(2)}</b>\n              </TableCell>\n            </TableRow>\n          )}\n\n          {balance < 0 && (\n            <TableRow>\n              <TableCell component=\"td\" scope=\"row\" colSpan={3} />\n              <TableCell component=\"td\" scope=\"row\" align=\"right\">\n                <b>Credit Owed</b>\n              </TableCell>\n              <TableCell component=\"td\" scope=\"row\" align=\"right\" colSpan={2}>\n                <b>${Math.abs(balance).toFixed(2)}</b>\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n}\n\nexport default OrderLineItems\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Product } from '../types/Product'\nimport { API_HOST } from '../constants'\n\ninterface ProductResponse {\n  data: Product[]\n}\n\ninterface ProductOption {\n  name: string\n  product: Product\n}\n\ninterface LineItemAutocompleteProps {\n  onItemSelected: (value: { name: string; product: Product }) => void\n}\n\nexport default function LineItemAutocomplete(props: LineItemAutocompleteProps) {\n  const [open, setOpen] = React.useState(false)\n  const [options, setOptions] = React.useState<ProductOption[]>([])\n  const [q, setQ] = React.useState('')\n  const [loading, setLoading] = React.useState(open && options.length === 0)\n\n  React.useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/products`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ search: q })\n      })\n\n      const products = (await response.json()) as ProductResponse\n\n      if (active) {\n        setOptions(\n          products.data.map((p) => ({\n            name: `${p.name} ${p.description} ${p.pk} ${p.size} $${\n              p.ws_price\n            } ${p.u_price !== p.ws_price ? `($${p.u_price} EA)` : ''}${\n              isNaN(parseInt(`${p.count_on_hand}`))\n                ? ''\n                : ` ${p.count_on_hand} on hand`\n            }`,\n            product: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 2) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) =>\n        value && typeof value !== 'string' && props.onItemSelected(value)\n      }\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Product search\"\n          fullWidth\n          variant=\"outlined\"\n          value={q}\n          onChange={(event) => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\n\ninterface MemberResponse {\n  data: Member[]\n}\n\ninterface MemberOption {\n  name: string\n  member: Member\n}\n\ninterface MemberAutocompleteProps {\n  onItemSelected: (value: { name: string; member: Member }) => void\n}\n\nexport default function MemberAutocomplete(props: MemberAutocompleteProps) {\n  const [open, setOpen] = useState(false)\n  const [options, setOptions] = useState<MemberOption[]>([])\n  const [q, setQ] = useState('')\n  const [loading, setLoading] = useState(open && options.length === 0)\n\n  useEffect(() => {\n    let active = true\n\n    if (!loading) {\n      return undefined\n    }\n\n    // this is a little weird\n    ;(async () => {\n      const response = await fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({ search: q })\n      })\n\n      const members = (await response.json()) as MemberResponse\n      if (active) {\n        setOptions(\n          members.data.map((p) => ({\n            name: `${p.name} ${\n              p.User && p.User.email ? p.User.email : p.registration_email\n            }`,\n            member: p\n          }))\n        )\n        setLoading(false)\n      }\n    })()\n\n    return () => {\n      active = false\n    }\n  }, [loading, q])\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  function onInputChnage(value: string) {\n    if (value && value.length > 0) {\n      setQ(value)\n      setLoading(true)\n    }\n  }\n\n  return (\n    <Autocomplete\n      id=\"add-line-item-autocomplete\"\n      style={{ width: '100%' }}\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n      }}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      onChange={(event, value) =>\n        value && typeof value !== 'string' && props.onItemSelected(value)\n      }\n      options={options}\n      loading={loading}\n      freeSolo\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Member search\"\n          fullWidth\n          autoFocus\n          variant=\"outlined\"\n          value={q}\n          onChange={(event) => onInputChnage(event.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? <CircularProgress size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport AddIcon from '@material-ui/icons/Add'\nimport EmailIcon from '@material-ui/icons/Email'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport PeopleIcon from '@material-ui/icons/People'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport Loading from '../Loading'\nimport { useOrderService } from './useOrderService'\nimport {\n  Order,\n  OrderRouterProps,\n  OrderStatus,\n  ShipmentStatus,\n  PaymentStatus\n} from '../types/Order'\nimport { LineItem } from '../types/Order'\nimport OrderLineItems from './OrderLineItems'\nimport LineItemAutocomplete from './LineItemAutocomplete'\nimport MemberAutocomplete from './MemberAutocomplete'\nimport { Product } from '../types/Product'\nimport { Member } from '../types/Member'\nimport {\n  API_HOST,\n  ORDER_STATUSES,\n  PAYMENT_STATUSES,\n  SHIPMENT_STATUSES,\n  TAX_RATE_STRING,\n  TAX_RATE\n} from '../constants'\n\nconst blankOrder: Order = {\n  id: 'new',\n  status: 'new',\n  payment_status: 'balance_due',\n  shipment_status: 'backorder',\n  total: 0.0,\n  item_count: 0,\n  subtotal: 0,\n  name: '',\n  email: '',\n  phone: '',\n  address: '',\n  notes: '',\n  createdAt: '',\n  updatedAt: '',\n  OrderLineItems: []\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    form: {\n      marginBottom: theme.spacing(4)\n    },\n    formInput: {\n      display: 'block',\n      marginBottom: theme.spacing(2)\n    },\n    status: {\n      marginBottom: theme.spacing(2)\n    },\n    liHeader: {\n      display: 'inline-block',\n      marginRight: theme.spacing(2)\n    },\n    sticky: {\n      [theme.breakpoints.up('md')]: {\n        position: 'sticky',\n        top: '0px'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper\n    },\n    saveBtn: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(2)\n    },\n    orderSideHeading: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      minHeight: '54px',\n      marginBottom: theme.spacing(2)\n    },\n    emailIcon: {\n      marginRight: '5px'\n    }\n  })\n)\n\nexport async function fetchStoreCredit(\n  MemberId: string,\n  setStoreCredit: React.Dispatch<React.SetStateAction<number>>\n) {\n  const store_credit = await fetch(`${API_HOST}/admin/store_credit`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({ MemberId })\n  })\n    .then((response: any) => response.json())\n    .then((response) =>\n      response && response.store_credit ? response.store_credit : 0\n    )\n    .catch((err: any) => 0)\n\n  setStoreCredit(store_credit)\n}\n\ninterface EditOrderProps {\n  userService?: UserService\n}\n\nfunction EditOrder(\n  props: EditOrderProps & RouteComponentProps<OrderRouterProps>\n) {\n  const classes = useStyles()\n\n  const [orderId, setOrderId] = useState('')\n  const [loading, setLoading] = useState(true)\n  const [order, setOrder] = useState<Order>(blankOrder)\n  const [saving, setSaving] = useState(false)\n  const [showLiAutocomplete, setShowLiAutocomplete] = useState(false)\n  const [showMemberAutocomplete, setShowMemberAutocomplete] = useState(false)\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n  const [needToCheckForDiscounts, setNeedToCheckForDiscounts] = useState(true)\n  const [canApplyMemberDiscount, setCanApplyMemberDiscount] = useState(false)\n  const orderService = useOrderService(orderId, setLoading)\n\n  const [storeCredit, setStoreCredit] = useState<number>(0)\n\n  useEffect(() => {\n    if (orderService.status === 'loaded') {\n      if (orderService.payload) {\n        const _order = orderService.payload\n        if (\n          _order.Member &&\n          _order.Member.discount &&\n          _order.Member.discount > 0\n        ) {\n          setCanApplyMemberDiscount(true)\n        }\n        if (_order.Member && _order.Member.id) {\n          fetchStoreCredit(_order.Member.id, setStoreCredit)\n        }\n        setOrder(_order)\n      }\n    }\n  }, [orderService])\n\n  const pOrderId = props.match.params.id\n\n  useEffect(() => {\n    if (pOrderId && pOrderId !== 'new') {\n      setOrderId(pOrderId)\n    }\n  }, [pOrderId])\n\n  useEffect(() => {\n    if (\n      order &&\n      !order.UserId &&\n      props.userService &&\n      props.userService.user &&\n      props.userService.user.id\n    ) {\n      const UserId = props.userService.user.id\n      UserId &&\n        setOrder((prevOrder) => ({\n          ...prevOrder,\n          UserId\n        }))\n    }\n  }, [props.userService, order])\n\n  useEffect(() => {\n    if (!needToCheckForDiscounts || !order) {\n      setNeedToCheckForDiscounts(false)\n      return\n    }\n    if (order && order.OrderLineItems && canApplyMemberDiscount) {\n      const discountAmt = order.OrderLineItems.map((li) => {\n        let canDiscount = false\n        if (li.data && li.data.product && li.selected_unit === 'CS') {\n          canDiscount =\n            li.data.product.ws_price !== li.data.product.ws_price_cost\n        } else if (li.data && li.data.product && li.selected_unit === 'EA') {\n          canDiscount = li.data.product.u_price !== li.data.product.u_price_cost\n        }\n        if (canDiscount && li.data && li.data.product) {\n          const price =\n            li.selected_unit === 'CS'\n              ? parseFloat(li.data.product.ws_price_cost)\n              : parseFloat(li.data.product.u_price_cost)\n\n          return +(li.total - price * li.quantity).toFixed(2)\n        } else {\n          return 0\n        }\n      }).reduce((acc, v) => acc + v, 0)\n\n      if (discountAmt > 0) {\n        const discountPrice = -discountAmt.toFixed(2)\n        const discounts = order.OrderLineItems.filter(\n          (li) =>\n            li.kind === 'adjustment' && li.description === 'member discount'\n        )\n        if (discounts[0]) {\n          if (discounts[0].total !== discountPrice) {\n            const idx = order.OrderLineItems.indexOf(discounts[0])\n            updateLineItem(idx, {\n              ...discounts[0],\n              price: discountPrice,\n              total: discountPrice\n            })\n          }\n        } else {\n          const adjustment: LineItem = {\n            description: 'member discount',\n            quantity: 1,\n            price: discountPrice,\n            total: discountPrice,\n            kind: 'adjustment'\n          }\n          setOrder((prevOrder) => ({\n            ...prevOrder,\n            OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n          }))\n        }\n      }\n    }\n\n    setNeedToCheckForDiscounts(false)\n  }, [needToCheckForDiscounts, order, canApplyMemberDiscount])\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function onAddLineitem(value: { name: string; product: Product }) {\n    if (!value) {\n      return\n    }\n    const { product } = value\n    if (value && value.name && product) {\n      const lineItem: LineItem = {\n        description: `${product.name} ${product.description}`,\n        quantity: 1,\n        selected_unit: 'CS',\n        price: parseFloat(product.ws_price),\n        total: parseFloat(product.ws_price),\n        kind: 'product',\n        vendor: product.vendor,\n        data: { product }\n      }\n      setOrder((order) => ({\n        ...order,\n        item_count:\n          order.OrderLineItems.filter((li) => li.kind === 'product').length + 1,\n        OrderLineItems: [...order.OrderLineItems, lineItem]\n      }))\n      setNeedToCheckForDiscounts(true)\n    }\n  }\n\n  function updateLineItem(idx: number, line_item: LineItem) {\n    setOrder((prevOrder) => {\n      let orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1, line_item)\n\n      return {\n        ...prevOrder,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n  function onLineItemUpdated(idx: number, line_item: LineItem) {\n    updateLineItem(idx, line_item)\n    setNeedToCheckForDiscounts(true)\n  }\n  function removeLineItem(idx: number) {\n    if (idx > -1) {\n      const li = order.OrderLineItems[idx]\n      if (li.kind === 'adjustment' && li.description === 'member discount') {\n        setCanApplyMemberDiscount(false)\n      }\n    }\n    setOrder((prevOrder) => {\n      const orderLineItems = prevOrder.OrderLineItems\n      orderLineItems.splice(idx, 1)\n      const item_count = orderLineItems.filter((li) => li.kind === 'product')\n        .length\n      return {\n        ...prevOrder,\n        item_count,\n        OrderLineItems: orderLineItems\n      }\n    })\n  }\n\n  function createAdjustment(event: any) {\n    const adjustment: LineItem = {\n      description: 'new adjustment',\n      quantity: 1,\n      price: 0.0,\n      total: 0.0,\n      kind: 'adjustment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function createPayment(event: any) {\n    const price = parseFloat(order.total.toFixed(2)) || -0.0\n    const payment: LineItem = {\n      description: 'payment',\n      quantity: 1,\n      price: -price,\n      total: -price,\n      kind: 'payment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, payment]\n    }))\n  }\n\n  function createCreditClick(event: any) {\n    createCredit(-1, 'credit')\n  }\n\n  function createCredit(li_total: number, description: string) {\n    const absPrice = Math.abs(parseFloat(`${li_total}`))\n    const price = -absPrice\n    const total = -(absPrice + absPrice * TAX_RATE)\n    const credit: LineItem = {\n      description,\n      quantity: 1,\n      price: -parseFloat(Math.abs(price).toFixed(2)),\n      total: -parseFloat(Math.abs(total).toFixed(2)),\n      kind: 'credit'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, credit]\n    }))\n  }\n\n  function createCreditFromLineItem(line_item: LineItem) {\n    createCredit(line_item.total, `STORE CREDIT (${line_item.description})`)\n  }\n\n  function applyStoreCredit() {\n    const subtotal =\n      order && order.subtotal ? order.subtotal : Math.abs(storeCredit)\n    const amt = Math.abs(storeCredit) >= subtotal ? -subtotal : storeCredit\n    const adjustment: LineItem = {\n      description: 'STORE CREDIT',\n      quantity: 1,\n      price: amt,\n      total: amt,\n      kind: 'adjustment'\n    }\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      OrderLineItems: [...prevOrder.OrderLineItems, adjustment]\n    }))\n  }\n\n  function emailReceipt(event: any) {\n    fetch(`${API_HOST}/orders/resend_email`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ orderId: order.id })\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.success) {\n          setSnackMsg(`Re-sent email to ${order.email}`)\n        } else {\n          setSnackMsg(`onoz! could not send email to ${order.email}`)\n        }\n      })\n      .catch((e) => {\n        console.warn('onoz! caught error re-sending email:', e)\n        setSnackMsg('onoz! could not re-send email')\n      })\n      .finally(() => setSnackOpen(true))\n  }\n\n  function onMembertemSelected(value?: { name: string; member: Member }) {\n    if (value && value.member) {\n      const { id, name, phone, address } = value.member // email\n      const email =\n        value.member.User && value.member.User.email\n          ? value.member.User.email\n          : value.member.registration_email\n      setOrder((prevOrder) => ({\n        ...prevOrder,\n        name: name || '',\n        email: email || '',\n        phone: phone || '',\n        address: address || '',\n        MemberId: id\n      }))\n      setShowMemberAutocomplete(false)\n      fetchStoreCredit(id, setStoreCredit)\n    }\n  }\n\n  const onSaveBtnClick = (): void => {\n    setSaving(true)\n    const path =\n      orderId && orderId !== 'new' ? '/order/update' : '/order/create'\n    fetch(`${API_HOST}${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(order)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.success) {\n          order &&\n            order.Member &&\n            order.Member.id &&\n            fetchStoreCredit(order.Member.id, setStoreCredit)\n          setSnackOpen(true)\n          setSnackMsg('Saved order!')\n          if (response.order.id && (!orderId || orderId === 'new')) {\n            props.history.replace(`/orders/edit/${response.order.id}`)\n          }\n        }\n      })\n      .finally(() => setSaving(false))\n  }\n\n  function onTaxesChange(tax: number) {\n    setOrder((prevOrder) => {\n      const notTaxLineItems = prevOrder.OrderLineItems.filter(\n        (li) => li.kind !== 'tax'\n      )\n\n      return {\n        ...prevOrder,\n        OrderLineItems: [\n          ...notTaxLineItems,\n          {\n            kind: 'tax',\n            description: `tax ${TAX_RATE_STRING}`,\n            quantity: 1,\n            price: tax,\n            total: tax\n          }\n        ]\n      }\n    })\n  }\n\n  function onSubTotalChange(subtotal: number) {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      subtotal\n    }))\n  }\n\n  function onTotalChange(total: number) {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      total\n    }))\n  }\n\n  function valueFor(field: keyof Order) {\n    return order && order[field] ? order[field] : ''\n  }\n\n  const handleStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      status: event.target.value as OrderStatus\n    }))\n  }\n\n  const handlePaymentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      payment_status: event.target.value as PaymentStatus\n    }))\n  }\n\n  const handleShipmentStatusChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>\n  ) => {\n    setOrder((prevOrder) => ({\n      ...prevOrder,\n      shipment_status: event.target.value as ShipmentStatus\n    }))\n  }\n\n  const shouldShowAddMemberDiscount =\n    !canApplyMemberDiscount ||\n    (order &&\n      order.OrderLineItems.filter((li) => li.description === 'member discount')\n        .length === 0)\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={12} md={4}>\n            <div className={classes.sticky}>\n              {showMemberAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowMemberAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <MemberAutocomplete onItemSelected={onMembertemSelected} />\n                </div>\n              ) : (\n                <div className={classes.orderSideHeading}>\n                  <Tooltip title=\"BACK TO ORDERS\">\n                    <IconButton\n                      aria-label=\"back to orders\"\n                      onClick={() => props.history.push('/orders')}\n                    >\n                      <ArrowBackIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <h2 style={{ display: 'inline-block' }}>\n                    {orderId && orderId !== 'new' ? (\n                      <>\n                        EDIT ORDER <i>#{order.id}</i>\n                      </>\n                    ) : (\n                      'CREATE ORDER'\n                    )}\n                  </h2>\n\n                  <div className={classes.saveBtn}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={onSaveBtnClick}\n                      disabled={saving}\n                      fullWidth\n                    >\n                      Save\n                    </Button>\n                  </div>\n                  <div>\n                    <Tooltip title=\"ADD USER DETAILS\">\n                      <IconButton\n                        aria-label=\"add user details\"\n                        onClick={() => setShowMemberAutocomplete(true)}\n                      >\n                        <PeopleIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {order.status !== 'new' && order.status !== 'needs_review' && (\n              <Box color=\"error.main\">\n                <Typography variant=\"overline\" display=\"block\">\n                  ohey!\n                </Typography>\n                <Typography variant=\"body1\" display=\"block\" gutterBottom>\n                  this order status is not \"new\" or \"needs review\" so making\n                  changes might not be great...\n                </Typography>\n              </Box>\n            )}\n            {order.Member && order.Member.discount && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has discount:{' '}\n                  <b>\n                    {order.Member.discount}{' '}\n                    {order.Member.discount_type &&\n                      `(${order.Member.discount_type})`}\n                  </b>\n                </Typography>\n              </Box>\n            )}\n            {storeCredit !== 0 && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has store credit:\n                  <Tooltip title=\"apply store credit\">\n                    <Button\n                      aria-label=\"apply store credit\"\n                      size=\"large\"\n                      onClick={() => applyStoreCredit()}\n                    >\n                      {storeCredit}\n                    </Button>\n                  </Tooltip>\n                </Typography>\n              </Box>\n            )}\n            <form className={classes.form} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"name\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.name}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, name: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"email\"\n                type=\"email\"\n                className={classes.formInput}\n                fullWidth\n                value={order.email}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, email: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"phone\"\n                type=\"phone\"\n                className={classes.formInput}\n                fullWidth\n                value={order.phone}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, phone: event.target.value }))\n                }}\n              />\n              <TextField\n                label=\"address\"\n                type=\"text\"\n                className={classes.formInput}\n                fullWidth\n                value={order.address}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({\n                    ...order,\n                    address: event.target.value\n                  }))\n                }}\n              />\n              <TextField\n                label=\"notes\"\n                className={classes.formInput}\n                multiline\n                rowsMax=\"20\"\n                fullWidth\n                value={order.notes}\n                onChange={(event: any) => {\n                  event.persist()\n                  setOrder((order) => ({ ...order, notes: event.target.value }))\n                }}\n              />\n\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"order-status-select-label\">status</InputLabel>\n                <Select\n                  labelId=\"order-status-select-label\"\n                  id=\"order-status-select\"\n                  value={valueFor('status')}\n                  onChange={handleStatusChange}\n                >\n                  {Object.keys(ORDER_STATUSES).map((status) => (\n                    <MenuItem key={`os-sel-${status}`} value={status}>\n                      {ORDER_STATUSES[status as OrderStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"payment-status-select-label\">\n                  payment status\n                </InputLabel>\n                <Select\n                  labelId=\"payment-status-select-label\"\n                  id=\"payment-status-select\"\n                  value={valueFor('payment_status')}\n                  onChange={handlePaymentStatusChange}\n                >\n                  {Object.keys(PAYMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ps-sel-${status}`} value={status}>\n                      {PAYMENT_STATUSES[status as PaymentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl fullWidth className={classes.status}>\n                <InputLabel id=\"shipment-status-select-label\">\n                  shipment status\n                </InputLabel>\n                <Select\n                  labelId=\"shipment-status-select-label\"\n                  id=\"shipment-status-select\"\n                  value={valueFor('shipment_status')}\n                  onChange={handleShipmentStatusChange}\n                >\n                  {Object.keys(SHIPMENT_STATUSES).map((status) => (\n                    <MenuItem key={`ship-sel-${status}`} value={status}>\n                      {SHIPMENT_STATUSES[status as ShipmentStatus]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </form>\n          </Grid>\n          <Grid item xs={12} md={8}>\n            <div>\n              {showLiAutocomplete ? (\n                <div style={{ display: 'flex' }}>\n                  <Tooltip title=\"close\">\n                    <IconButton\n                      aria-label=\"close\"\n                      onClick={() => setShowLiAutocomplete(false)}\n                    >\n                      <ClearIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                  <LineItemAutocomplete onItemSelected={onAddLineitem} />\n                </div>\n              ) : (\n                <>\n                  <Button\n                    aria-label=\"add line items\"\n                    size=\"large\"\n                    onClick={() => setShowLiAutocomplete(true)}\n                  >\n                    <AddIcon />\n                    LINE ITEMS\n                  </Button>\n\n                  <Button\n                    aria-label=\"add adjustment\"\n                    size=\"large\"\n                    onClick={createAdjustment}\n                  >\n                    <AddIcon />\n                    ADJUSTMENT\n                  </Button>\n\n                  {shouldShowAddMemberDiscount && (\n                    <Button\n                      aria-label=\"add member discount\"\n                      size=\"large\"\n                      onClick={() => {\n                        setCanApplyMemberDiscount(true)\n                        setNeedToCheckForDiscounts(true)\n                      }}\n                    >\n                      <AddIcon />\n                      MEMBER DISCOUNT\n                    </Button>\n                  )}\n\n                  <Button\n                    aria-label=\"add payment\"\n                    size=\"large\"\n                    onClick={createPayment}\n                  >\n                    <AddIcon />\n                    PAYMENT\n                  </Button>\n\n                  <Button\n                    aria-label=\"add credit\"\n                    size=\"large\"\n                    onClick={createCreditClick}\n                  >\n                    <AddIcon />\n                    CREDIT\n                  </Button>\n\n                  <Button\n                    aria-label=\"email receipt\"\n                    size=\"large\"\n                    onClick={emailReceipt}\n                  >\n                    <EmailIcon className={classes.emailIcon} />\n                    email receipt\n                  </Button>\n                </>\n              )}\n            </div>\n            <OrderLineItems\n              line_items={order.OrderLineItems}\n              onLineItemUpdated={onLineItemUpdated}\n              removeLineItem={removeLineItem}\n              onTaxesChange={onTaxesChange}\n              onTotalChange={onTotalChange}\n              onSubTotalChange={onSubTotalChange}\n              createCreditFromLineItem={createCreditFromLineItem}\n            />\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(EditOrder))\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Order } from '../types/Order'\nimport { API_HOST } from '../constants'\n\nconst useOrderService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Order>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/order/edit/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Order })\n      })\n      .catch((error) => {\n        console.warn('useOrderService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\nexport { useOrderService }\n","import React, { createRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport MaterialTable from 'material-table'\n\nimport { MemberRouterProps } from '../types/Member'\nimport { Member } from '../types/Member'\nimport { API_HOST } from '../constants'\nimport { formatRelative } from 'date-fns'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    }\n  })\n)\n\nfunction Members(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const tableRef = createRef<any>()\n\n  const newMemberAction = {\n    icon: 'add',\n    tooltip: 'add new member',\n    isFreeAction: true,\n    onClick: () => props.history.push('/members/new')\n  }\n\n  const deleteAction = {\n    tooltip: 'Remove Member',\n    icon: 'delete',\n    onClick: (e: any, member: Member | Member[]) => {\n      let members: Member[]\n      if (Array.isArray(member)) {\n        members = member\n      } else {\n        members = [member]\n      }\n\n      if (!members || members.length === 0) {\n        return\n      }\n      const id = members[0].id\n      if (window.confirm(`Are you sure you want to delete this member?`)) {\n        fetch(`${API_HOST}/member`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify({ id })\n        })\n          .then((response) => response.json())\n          .then(() => tableRef.current && tableRef.current.onQueryChange())\n          .catch((err) => console.warn('members deleteAction caught err', err))\n      }\n    }\n  }\n\n  const editAction = {\n    icon: 'edit',\n    tooltip: 'edit member',\n    onClick: (e: any, members: Member | Member[]) => {\n      let member: Member\n      if (Array.isArray(members)) {\n        member = members[0]\n      } else {\n        member = members\n      }\n      member.id && props.history.push(`/members/${member.id}`)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        tableRef={tableRef}\n        columns={[\n          {\n            title: 'created',\n            field: 'createdAt',\n            type: 'datetime',\n            filtering: false,\n            render: (row) => (\n              <div\n                title={\n                  row.createdAt && new Date(row.createdAt).toLocaleString()\n                }\n              >\n                {row.createdAt &&\n                  formatRelative(new Date(row.createdAt), Date.now())}\n              </div>\n            )\n          },\n          {\n            title: 'registration email',\n            field: 'registration_email',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'name', field: 'name', type: 'string', filtering: false },\n          { title: 'phone', field: 'phone', type: 'string', filtering: false },\n          {\n            title: 'address',\n            field: 'address',\n            type: 'string',\n            filtering: false\n          },\n          { title: 'discount', field: 'discount', type: 'string' },\n          { title: 'discount type', field: 'discount_type', type: 'string' },\n          { title: 'fees paid', field: 'fees_paid', type: 'string' },\n          { title: 'shares', field: 'shares', type: 'string' },\n          { title: 'type', field: 'member_type', type: 'string' },\n\n          {\n            title: 'updated',\n            field: 'updatedAt',\n            type: 'datetime',\n            hidden: true\n          },\n          { title: 'id', field: 'id', type: 'string', hidden: true }\n        ]}\n        data={(query) =>\n          new Promise((resolve, reject) => {\n            fetch(`${API_HOST}/members`, {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              credentials: 'include',\n              body: JSON.stringify(query)\n            })\n              .then((response) => response.json())\n              .then((result) => {\n                resolve(result)\n              })\n              .catch((err) => {\n                console.warn(err)\n                return resolve({ data: [], page: 0, totalCount: 0 })\n              })\n          })\n        }\n        title=\"Members\"\n        options={{\n          headerStyle: { position: 'sticky', top: 0 },\n          maxBodyHeight: 'calc(100vh - 121px - 28px)',\n          pageSize: 50,\n          pageSizeOptions: [50, 100, 500],\n          debounceInterval: 750,\n          filtering: true,\n          search: true,\n          emptyRowsWhenPaging: false\n        }}\n        actions={[newMemberAction, deleteAction, editAction]}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(Members)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport { Member, MemberRouterProps } from '../types/Member'\nimport Loading from '../Loading'\nimport { API_HOST } from '../constants'\nimport { fetchStoreCredit } from '../orders/EditOrder'\nimport { Order } from '../types/Order'\n\nconst blankMember: Member = {\n  id: 'new',\n  registration_email: '',\n  name: '',\n  phone: '',\n  address: '',\n  discount: 0,\n  discount_type: '',\n  fees_paid: 0,\n  store_credit: 0,\n  shares: 0,\n  member_type: '',\n  data: {}\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    gridItem: {\n      margin: theme.spacing(2, 0)\n    },\n    sticky: {\n      [theme.breakpoints.up('sm')]: {\n        position: 'sticky',\n        top: '0'\n      },\n      zIndex: 1,\n      backgroundColor: theme.palette.background.paper,\n      width: '100%'\n    },\n    ordersHeader: {\n      fontSize: '1.25em',\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n)\n\nasync function fetchMemberOrders(\n  MemberId: string,\n  setOrders: React.Dispatch<React.SetStateAction<Order[]>>\n) {\n  const orders = await fetch(`${API_HOST}/admin/member_orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({ MemberId })\n  })\n    .then((response: any) => response.json())\n    .catch((err: any) => [])\n  setOrders(orders)\n}\n\nfunction EditMember(props: RouteComponentProps<MemberRouterProps>) {\n  const classes = useStyles()\n  const [loadingMember, setLoadingMember] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const [error, setError] = useState('')\n  const [response, setResponse] = useState('')\n  const memberId = props.match.params.id\n\n  const [member, setMember] = useState<Member>(blankMember)\n  const [createNewUser, setCreateNewUser] = useState(false)\n  const [storeCredit, setStoreCredit] = useState(0)\n  const [orders, setOrders] = useState<Order[]>([])\n\n  useEffect(() => {\n    if (!memberId || memberId === 'undefined') {\n      return\n    }\n\n    if (memberId === 'new') {\n      setMember(blankMember)\n      setLoadingMember(false)\n    } else {\n      fetch(`${API_HOST}/members`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          filters: [\n            {\n              column: {\n                field: 'id'\n              },\n              value: memberId\n            }\n          ]\n        })\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('zomfg response:', response)\n          setMember(response.data[0] as Member)\n        })\n        .catch((err) => setMember(blankMember))\n        .finally(() => setLoadingMember(false))\n      fetchStoreCredit(memberId, setStoreCredit)\n      fetchMemberOrders(memberId, setOrders)\n    }\n  }, [memberId])\n\n  function submitData() {\n    setError('')\n    setResponse('')\n    setLoading(true)\n\n    const path = memberId === 'new' ? '/create' : '/update'\n\n    fetch(`${API_HOST}/member${path}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({ member, createNewUser })\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setError(response.msg)\n        } else {\n          setResponse(response.msg)\n        }\n      })\n      .catch((err) => {\n        console.warn('fetch caugher err:', err)\n        setError(err.toString())\n      })\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      {loadingMember ? (\n        <Loading />\n      ) : (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item sm={6}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                minHeight: '54px'\n              }}\n              className={classes.sticky}\n            >\n              <Tooltip title=\"BACK TO MEMBERS\">\n                <IconButton\n                  aria-label=\"back to members\"\n                  onClick={() => props.history.push('/members')}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </Tooltip>\n\n              <h2>{memberId === 'new' ? 'Create' : 'Edit'} Member</h2>\n            </div>\n\n            <TextField\n              label=\"email\"\n              fullWidth\n              value={member.registration_email}\n              className={classes.gridItem}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n              ) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  registration_email: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"name\"\n              fullWidth\n              value={member.name}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  name: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"phone\"\n              fullWidth\n              value={member.phone}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  phone: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"address\"\n              fullWidth\n              value={member.address}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  address: event.target.value\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount\"\n              fullWidth\n              value={member.discount}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  discount: parseFloat(event.target.value)\n                }))\n              }}\n            />\n            <TextField\n              label=\"discount type\"\n              fullWidth\n              value={member.discount_type}\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  discount_type: event.target.value\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"fees paid\"\n              fullWidth\n              value={member.fees_paid}\n              type=\"number\"\n              className={classes.gridItem}\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  fees_paid: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <TextField\n              label=\"store credit\"\n              fullWidth\n              value={member.store_credit}\n              className={classes.gridItem}\n              type=\"number\"\n              helperText=\"note: depreciated, don't use this store_credit field anymore.\"\n            />\n            <TextField\n              label=\"shares\"\n              fullWidth\n              value={member.shares}\n              className={classes.gridItem}\n              type=\"number\"\n              onChange={(event) => {\n                event.persist()\n                setMember((prevMember) => ({\n                  ...prevMember,\n                  shares: parseFloat(event.target.value)\n                }))\n              }}\n            />\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <InputLabel id=\"prev-import-tag-select-label\">Type</InputLabel>\n              <Select\n                labelId=\"prev-import-tag-select-label\"\n                id=\"prev-import-tag-select\"\n                value={member.member_type}\n                onChange={(event) =>\n                  event.target &&\n                  event.target.value &&\n                  setMember((prevMember) => ({\n                    ...prevMember,\n                    member_type: event.target.value as string\n                  }))\n                }\n              >\n                <MenuItem value=\"consumer-owners\">consumer-owner</MenuItem>\n                <MenuItem value=\"worker-owners\">worker-owner</MenuItem>\n                <MenuItem value=\"producer-owners\">producer owner</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControl fullWidth className={classes.gridItem}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={(\n                      event: React.ChangeEvent<HTMLInputElement>,\n                      checked: boolean\n                    ) => {\n                      setCreateNewUser(checked)\n                    }}\n                    value=\"createNewUser\"\n                  />\n                }\n                label=\"Create User\"\n              />\n            </FormControl>\n\n            <div className={classes.gridItem}>\n              <Button\n                disabled={loading}\n                onClick={() => submitData()}\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                {memberId === 'new' ? 'CREATE' : 'SAVE'}\n              </Button>\n            </div>\n          </Grid>\n\n          <Grid item sm={6} className={classes.sticky} zeroMinWidth>\n            {loading && <Loading />}\n            {error && (\n              <div className={classes.gridItem}>\n                <h3>Response Error!</h3>\n                <p>{error}</p>\n              </div>\n            )}\n            {response && (\n              <div className={classes.gridItem}>\n                <h3>Response</h3>\n                <p>{response}</p>\n              </div>\n            )}\n\n            {member && member.data && (\n              <dl>\n                {Object.keys(member.data).map((k) => (\n                  <React.Fragment key={`memberdata${k}`}>\n                    <dt>{k}</dt>\n                    <dd>{member.data[k]}</dd>\n                  </React.Fragment>\n                ))}\n              </dl>\n            )}\n\n            {storeCredit !== 0 && (\n              <Box color=\"info.main\">\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                  Member has store credit: {storeCredit}\n                </Typography>\n              </Box>\n            )}\n\n            {orders.length > 0 && (\n              <List\n                component=\"nav\"\n                aria-label=\"member orders\"\n                subheader={\n                  <ListSubheader\n                    component=\"h2\"\n                    className={classes.ordersHeader}\n                  >\n                    Orders ({orders.length})\n                  </ListSubheader>\n                }\n              >\n                {orders.map((order) => (\n                  <ListItem\n                    key={order.id}\n                    button\n                    href={`/orders/edit/${order.id}`}\n                    onClick={() =>\n                      props.history.push(`/orders/edit/${order.id}`)\n                    }\n                  >\n                    <ListItemText\n                      primary={`#${order.id} $${order.total} (${order.item_count})`}\n                      secondary={\n                        order.createdAt &&\n                        new Date(order.createdAt).toLocaleString()\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n          </Grid>\n        </Grid>\n      )}\n    </Paper>\n  )\n}\n\nexport default withRouter(EditMember)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Menu, { MenuProps } from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport { Page } from '../types/Page'\n\nconst StyledMenu = (props: MenuProps) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right'\n    }}\n    {...props}\n  />\n)\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem)\n\ninterface EditAnnouncementMenuProps {\n  page: Page\n  onSaveBtnClick: () => void\n  onDeleteBtnClick: () => void\n}\n\nexport default function EditAnnouncementMenu(props: EditAnnouncementMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <>\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        aria-label=\"split button\"\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.onSaveBtnClick}\n        >\n          save\n        </Button>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClick}\n        >\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            if (window.confirm('are you sure?')) {\n              props.onDeleteBtnClick()\n            }\n            handleClose()\n          }}\n          disabled={!props.page.id}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"delete announcement\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { withStyles, Theme } from '@material-ui/core/styles'\nimport Typography, { TypographyProps } from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport Table from '@material-ui/core/Table'\nimport Paper from '@material-ui/core/Paper'\nimport {\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  StyledComponentProps,\n  WithStyles\n} from '@material-ui/core'\n\n// mostly ripped from https://gist.github.com/boganegru/a4da0b0da0b1233d30b10063b10efa8a\n\nconst styles = (theme: Theme) => ({\n  listItem: {\n    marginTop: theme.spacing(1)\n  },\n  header: {\n    marginTop: theme.spacing(2)\n  }\n})\n\ninterface WSProps extends WithStyles<typeof styles> {\n  children: ReactNode\n}\n\nfunction MarkdownParagraph(props: { children: ReactNode }) {\n  return <Typography>{props.children}</Typography>\n}\n\ninterface MdHeadingProps {\n  level: number\n}\n\nconst MarkdownHeading = withStyles(styles)(\n  ({\n    classes,\n    ...props\n  }: StyledComponentProps & TypographyProps & MdHeadingProps) => {\n    let variant: TypographyProps['variant']\n    switch (props.level) {\n      case 1:\n        variant = 'h5'\n        break\n      case 2:\n        variant = 'h6'\n        break\n      case 3:\n        variant = 'subtitle1'\n        break\n      case 4:\n        variant = 'subtitle2'\n        break\n      default:\n        variant = 'h6'\n        break\n    }\n    return (\n      <Typography className={classes?.header} gutterBottom variant={variant}>\n        {props.children}\n      </Typography>\n    )\n  }\n)\n\nconst MarkdownListItem = withStyles(styles)(\n  ({ classes, ...props }: WSProps) => {\n    return (\n      <li className={classes.listItem}>\n        <Typography component=\"span\">{props.children}</Typography>\n      </li>\n    )\n  }\n)\n\nfunction MarkdownTable(props: { children: ReactNode }) {\n  return (\n    <Paper>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        {props.children}\n      </Table>\n    </Paper>\n  )\n}\n\nfunction MarkdownTableCell(props: { children: ReactNode }) {\n  return (\n    <TableCell>\n      <Typography>{props.children}</Typography>\n    </TableCell>\n  )\n}\n\nfunction MarkdownTableRow(props: { children: ReactNode }) {\n  return <TableRow>{props.children}</TableRow>\n}\n\nfunction MarkdownTableBody(props: { children: ReactNode }) {\n  return <TableBody>{props.children}</TableBody>\n}\n\nfunction MarkdownTableHead(props: { children: ReactNode }) {\n  return <TableHead>{props.children}</TableHead>\n}\n\nconst renderers = {\n  heading: MarkdownHeading,\n  paragraph: MarkdownParagraph,\n  link: Link,\n  listItem: MarkdownListItem,\n  table: MarkdownTable,\n  tableHead: MarkdownTableHead,\n  tableBody: MarkdownTableBody,\n  tableRow: MarkdownTableRow,\n  tableCell: MarkdownTableCell\n}\n\nexport default renderers\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport PreviewIcon from '@material-ui/icons/RemoveRedEye'\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\n\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport Loading from '../Loading'\nimport { usePageService, usePageSaveService } from './usePageService'\nimport EditAnnouncementMenu from './EditAnnouncementMenu'\nimport { Page } from '../types/Page'\nimport renderers from './renderers'\nimport { API_HOST } from '../constants'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    row: {\n      display: 'flex'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      // textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    },\n    preview: {\n      marginTop: theme.spacing(2)\n    },\n    pageName: {\n      marginBottom: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  })\n)\n\nfunction EditAnnouncement(props: RouteComponentProps<PageRouterProps>) {\n  const { id, slug } = props.match.params\n  const classes = useStyles()\n\n  const [pageSlug, setPageSlug] = useState('')\n  const [page, setPage] = useState<Page>({ slug: '', content: '' })\n  const [loading, setLoading] = useState(true)\n  const [doSave, setDoSave] = useState(false)\n  const [showPreview, setShowPreview] = useState(true)\n\n  const pageService = usePageService(id, setLoading)\n\n  useEffect(() => {\n    if (pageService.status === 'loaded') {\n      if (pageService.payload) {\n        setPage(pageService.payload)\n      } else {\n        setPage({ slug: pageSlug, content: '' })\n      }\n    }\n  }, [pageService, pageSlug])\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n  const [snackMsg, setSnackMsg] = React.useState('')\n\n  const handlePageContentChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPage((prevPage) => ({ ...prevPage, content: event.target.value }))\n  }\n\n  const handlePageNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPage((prevPage) => ({ ...prevPage, slug: event.target.value }))\n  }\n\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  useEffect(() => {\n    if (slug) {\n      setPageSlug(slug)\n    }\n  }, [slug])\n\n  const onSaveBtnClick = (): void => {\n    setDoSave(true)\n  }\n\n  usePageSaveService(page, doSave, setDoSave, setSnackMsg, setSnackOpen)\n\n  const onDeleteBtnClick = (): void => {\n    fetch(`${API_HOST}/page`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(page)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          setSnackMsg(response.msg)\n          setSnackOpen(true)\n        } else {\n          props.history.replace('/announcements')\n        }\n      })\n      .catch((error) => {\n        console.warn('delete page fetch caught err:', error)\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n  }\n\n  return page ? (\n    <>\n      <Grid xs={6} sm={4} lg={5} item>\n        <Paper className={classes.paper}>\n          <div className={classes.row}>\n            <TextField\n              className={classes.pageName}\n              label=\"title\"\n              fullWidth\n              value={page.slug}\n              onChange={handlePageNameChange}\n            />\n            <EditAnnouncementMenu\n              page={page}\n              onSaveBtnClick={onSaveBtnClick}\n              onDeleteBtnClick={onDeleteBtnClick}\n            />\n            <Button\n              variant={showPreview ? 'contained' : 'outlined'}\n              color=\"primary\"\n              onClick={() => setShowPreview(!showPreview)}\n            >\n              <PreviewIcon />\n            </Button>\n          </div>\n\n          {loading ? (\n            <Loading />\n          ) : (\n            <TextField\n              label=\"content\"\n              multiline\n              fullWidth\n              rows={4}\n              rowsMax={28}\n              value={page.content}\n              onChange={handlePageContentChange}\n            />\n          )}\n        </Paper>\n      </Grid>\n\n      <Grid xs={6} sm={4} lg={5} item>\n        {showPreview && (\n          <Paper className={classes.paper}>\n            <ReactMarkdown plugins={[gfm]} renderers={renderers}>\n              {page.content}\n            </ReactMarkdown>\n          </Paper>\n        )}\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{snackMsg}</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : (\n    <Loading />\n  )\n}\n\nexport default withRouter(EditAnnouncement)\n","import { useEffect, useState } from 'react'\n\nimport { Service } from '../types/Service'\nimport { Page } from '../types/Page'\nimport { API_HOST } from '../constants'\n\nconst usePageService = (\n  id: string | undefined,\n  setLoading: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!id || id.length === 0) {\n      setLoading(false)\n      return\n    }\n\n    fetch(`${API_HOST}/page?id=${id}`)\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log('page', response)\n        setResult({ status: 'loaded', payload: response as Page })\n      })\n      .catch((error) => {\n        console.warn('usePageService fetch caught err:', error)\n        setResult({ ...error })\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [id, setLoading])\n\n  return result\n}\n\nconst useAllPagesService = (\n  reloadPages: boolean,\n  setReloadPages: (reloadPages: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page[]>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    reloadPages &&\n      fetch(`${API_HOST}/pages`, {\n        credentials: 'include'\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          // console.log('page', response)\n          setResult({ status: 'loaded', payload: response.rows as Page[] })\n        })\n        .catch((error) => {\n          console.warn('usePageService fetch caught err:', error)\n          setResult({ ...error })\n        })\n        .finally(() => setReloadPages(false))\n  }, [reloadPages, setReloadPages])\n\n  return result\n}\n\nconst usePageSaveService = (\n  page: Page | undefined,\n  doSave: boolean,\n  setDoSave: (value: boolean) => void,\n  setSnackMsg: (msg: string) => void,\n  setSnackOpen: (value: boolean) => void\n) => {\n  const [result, setResult] = useState<Service<Page>>({\n    status: 'loading'\n  })\n\n  useEffect(() => {\n    if (!doSave || !page || page.slug.length === 0) {\n      setDoSave(false)\n      return\n    }\n    fetch(`${API_HOST}/page`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n       \n      },\n      credentials: 'include',\n      body: JSON.stringify(page)\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        // console.log('usePageSaveService response:', response)\n        setResult({ status: 'loaded', payload: response as Page })\n        setSnackMsg(response.msg)\n        setSnackOpen(true)\n      })\n      .catch((error) => {\n        console.warn('usePageSaveService fetch caught err:', error)\n        setResult({ ...error })\n        setSnackMsg(`o noz! ${error}`)\n        setSnackOpen(true)\n      })\n      .finally(() => {\n        setDoSave(false)\n      })\n  }, [page, doSave, setDoSave, setSnackMsg, setSnackOpen])\n\n  return result\n}\n\nexport { usePageService, useAllPagesService, usePageSaveService }","import React, { useState, useEffect } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Add from '@material-ui/icons/Add'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { connect } from 'react-redux'\nimport { Switch } from 'react-router'\nimport { formatDistance } from 'date-fns'\n\nimport ProtectedRoute from '../auth/ProtectedRoute'\nimport { RootState } from '../redux'\nimport { UserService, UserServiceProps } from '../redux/session/reducers'\nimport EditAnnouncement from './EditAnnouncement'\nimport { useAllPagesService } from './usePageService'\nimport { PageRouterProps } from '../types/PageRouterProps'\nimport { Page } from '../types/Page'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2),\n      maxWidth: '100vw',\n      minHeight: '100vh'\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: '-10px'\n    },\n    titleText: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '100%'\n    }\n  })\n)\n\nconst Default = () => <></>\n\ninterface Props {\n  userService?: UserService\n}\n\nfunction Announcements(props: Props & RouteComponentProps<PageRouterProps>) {\n  const classes = useStyles()\n  const { userService } = props\n\n  const [pages, setPages] = useState<Page[]>([])\n  const [reloadPages, setReloadPages] = useState(true)\n  const allPages = useAllPagesService(reloadPages, setReloadPages)\n\n  useEffect(() => {\n    allPages.status === 'loaded' && setPages(allPages.payload)\n  }, [allPages])\n\n  const [snackOpen, setSnackOpen] = useState(false)\n  const handleSnackClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setSnackOpen(false)\n  }\n\n  function addPage() {\n    props.history.push('/announcements/edit/draft')\n    setSnackOpen(true)\n  }\n\n  return userService ? (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"stretch\"\n        className={classes.root}\n        spacing={2}\n      >\n        <Grid xs={12} sm={4} md={3} lg={2} item>\n          <Paper className={classes.paper}>\n            <List>\n              <ListItem>\n                <ListItemText>\n                  <div className={classes.title}>\n                    <span className={classes.titleText}>ANNOUNCEMENTS</span>\n                    <IconButton\n                      aria-label=\"add announcement\"\n                      title=\"add announcement\"\n                      onClick={() => addPage()}\n                    >\n                      <Add />\n                    </IconButton>\n                  </div>\n                </ListItemText>\n              </ListItem>\n              <Divider />\n              {pages.map((page: Page, idx: number) => (\n                <ListItem\n                  button\n                  component={Link}\n                  to={`/announcements/edit/${page.slug}/${page.id}`}\n                  key={`page${idx}`}\n                >\n                  <ListItemText\n                    primary={page.slug}\n                    secondary={\n                      page.createdAt &&\n                      formatDistance(new Date(page.createdAt), Date.now(), {\n                        addSuffix: true\n                      })\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n\n        {/* <Grid xs={12} sm={8} md={9} lg={10} item> */}\n        {/* <Paper className={classes.paper}> */}\n        <Switch>\n          <ProtectedRoute\n            userService={userService}\n            path=\"/announcements\"\n            component={Default}\n            exact\n          />\n          <ProtectedRoute\n            userService={userService}\n            path=\"/announcements/edit/:slug/:id\"\n            component={EditAnnouncement}\n          />\n        </Switch>\n        {/* </Paper> */}\n        {/* </Grid> */}\n      </Grid>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={snackOpen}\n        autoHideDuration={4000}\n        onClose={handleSnackClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">Created new announcement!</span>}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" onClick={handleSnackClose}>\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </>\n  ) : null\n}\n\nconst mapStateToProps = (states: RootState): UserServiceProps => {\n  return {\n    userService: states.session.userService\n  }\n}\n\nexport default connect(mapStateToProps, undefined)(withRouter(Announcements))\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport clsx from 'clsx'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport Fab from '@material-ui/core/Fab'\nimport MUISwitch from '@material-ui/core/Switch'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport FaceIcon from '@material-ui/icons/Face'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { darkTheme, lightTheme } from './theme'\nimport { mainListItems } from './listItems' // secondaryListItems\n\nimport { RootState } from './redux'\nimport { UserServiceProps } from './redux/session/reducers'\nimport { checkSession, logout } from './redux/session/actions'\n\nimport { Preferences } from './types/Preferences'\nimport { PreferencesServiceProps } from './redux/preferences/reducers'\nimport { getPreferences, setPreferences } from './redux/preferences/actions'\n\nimport Loading from './Loading'\nimport Dashboard from './dashboard/Dashboard'\nimport Login from './auth/Login'\nimport Register from './auth/Register'\nimport ProtectedRoute from './auth/ProtectedRoute'\n// import UserMenu from './auth/UserMenu'\nimport StoreCredits from './members/StoreCredits'\nimport Orders from './orders/Orders'\nimport WholesaleOrders from './wholesaleorders/WholesaleOrders'\nimport Users from './users/Users'\nimport Products from './products/Products'\nimport ImportProducts from './products/ImportProducts'\nimport OnHand from './products/OnHand'\nimport AddStock from './products/AddStock'\nimport EditOrder from './orders/EditOrder'\nimport Members from './members/Members'\nimport EditMember from './members/EditMember'\nimport { APP_VERSION } from './constants'\nimport Announcements from './announcements/Announcements'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      minHeight: '100vh'\n    },\n    nav: {\n      // background: theme.palette.primary.main,\n      zIndex: theme.zIndex.speedDial,\n      display: 'flex',\n      // height: '48px',\n      // width: '48px',\n      alignItems: 'center',\n      position: 'fixed',\n      // bottom: theme.spacing(1),\n      // top: 'calc(50vh  - 28px)',\n      top: '-12px',\n      left: '-24px',\n      transition: '200ms ease-in-out',\n      '& svg': {\n        display: 'none'\n      },\n      '&:hover': {\n        top: -6,\n        left: -12\n      },\n      '&:hover svg': {\n        display: 'inline-block'\n      }\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    version: {\n      fontStyle: 'italic',\n      fontSize: '0.8em',\n      flexGrow: 1,\n      alignSelf: 'center',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    content: {\n      marginLeft: '16px',\n      maxWidth: '98%'\n    }\n  })\n)\n\ninterface DispatchProps {\n  checkSession: () => void\n  getPreferences: () => void\n  setPreferences: (preferences: Preferences) => void\n  logout: () => void\n}\n\ntype Props = UserServiceProps & PreferencesServiceProps & DispatchProps\n\nexport function App(props: Props) {\n  const [loading, setLoading] = useState(true)\n  const [useDarkTheme, setUseDarkTheme] = useState<null | boolean>(null)\n\n  // checkSession is destructured from props and passed into useEffect\n  // which is a bit confusing since checkSession is also imported. ah scope.\n  const {\n    checkSession,\n    userService,\n    getPreferences,\n    preferencesService,\n    setPreferences\n  } = props\n\n  useEffect(() => {\n    getPreferences && getPreferences()\n  }, [getPreferences])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      !preferencesService.isFetching &&\n      preferencesService.preferences\n    ) {\n      if (useDarkTheme === null) {\n        setUseDarkTheme(\n          preferencesService.preferences.dark_mode === 'true' ? true : false\n        )\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [preferencesService])\n\n  useEffect(() => {\n    if (\n      preferencesService &&\n      preferencesService.preferences &&\n      (preferencesService.preferences.dark_mode === 'true' ? true : false) !==\n        useDarkTheme\n    ) {\n      setPreferences({ dark_mode: useDarkTheme ? 'true' : 'false' })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useDarkTheme])\n\n  useEffect(() => {\n    checkSession && checkSession()\n  }, [checkSession])\n\n  useEffect(() => {\n    if (userService) {\n      !userService.isFetching && userService.user && setLoading(false)\n    }\n  }, [userService])\n\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n\n  const theme =\n    preferencesService &&\n    preferencesService.preferences &&\n    preferencesService.preferences.dark_mode === 'true'\n      ? darkTheme\n      : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <div className={classes.nav}>\n                {/* <IconButton\n              edge=\"start\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(true)}\n            >\n              \n            </IconButton> */}\n\n                <Fab\n                  color=\"secondary\"\n                  aria-label=\"menu\"\n                  onClick={() => setOpen(true)}\n                >\n                  <MenuIcon />\n                </Fab>\n              </div>\n            )}\n\n          {userService &&\n            userService.user &&\n            userService.user.role === 'admin' && (\n              <Drawer\n                classes={{\n                  paper: clsx(classes.drawerPaper)\n                }}\n                onClose={() => setOpen(false)}\n                open={open}\n              >\n                <List onClick={() => setOpen(false)}>{mainListItems}</List>\n\n                <Divider />\n                <ListItem\n                  button\n                  onClick={() => setUseDarkTheme((prev) => !prev)}\n                >\n                  <ListItemText>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}\n                    >\n                      <span>Dark Theme</span>\n                      <MUISwitch\n                        checked={\n                          useDarkTheme === null || useDarkTheme === undefined\n                            ? false\n                            : useDarkTheme\n                        }\n                        value=\"useDarkTheme\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </div>\n                  </ListItemText>\n                </ListItem>\n                <Divider />\n                <ListItem button onClick={() => props.logout()}>\n                  <ListItemIcon>\n                    <FaceIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"log out\"\n                    secondary={\n                      <span\n                        style={{\n                          display: 'block',\n                          textOverflow: 'ellipsis',\n                          overflow: 'hidden'\n                        }}\n                      >\n                        {userService && userService.user\n                          ? userService.user.email\n                          : ''}\n                      </span>\n                    }\n                  />\n                </ListItem>\n\n                {/* <List>{secondaryListItems}</List>  */}\n                <div className={classes.version}>\n                  <span>{APP_VERSION}</span>\n                </div>\n              </Drawer>\n            )}\n\n          <main className={classes.content}>\n            {/* ROUTER */}\n\n            {loading ? (\n              <Loading />\n            ) : (\n              <Switch>\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products\"\n                  component={Products}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products/import\"\n                  component={ImportProducts}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products/onhand\"\n                  component={OnHand}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/products/addstock\"\n                  component={AddStock}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders\"\n                  exact\n                  component={Orders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/edit/:id\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/orders/create\"\n                  component={EditOrder}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/wholesaleorders\"\n                  component={WholesaleOrders}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/users\"\n                  component={Users}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members\"\n                  component={Members}\n                  exact\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/members/:id\"\n                  component={EditMember}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/storecredits\"\n                  component={StoreCredits}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/announcements\"\n                  component={Announcements}\n                />\n                <ProtectedRoute\n                  userService={userService}\n                  path=\"/\"\n                  component={Dashboard}\n                />\n              </Switch>\n            )}\n\n            {/* <Box pt={4}>FOOT'r</Box> */}\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = (\n  states: RootState\n): UserServiceProps & PreferencesServiceProps => {\n  return {\n    userService: states.session.userService,\n    preferencesService: states.preferences.preferencesService\n  }\n}\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps => {\n  return {\n    checkSession: () => dispatch(checkSession()),\n    getPreferences: () => dispatch(getPreferences()),\n    setPreferences: (preferences: Preferences) =>\n      dispatch(setPreferences(preferences)),\n    logout: () => dispatch(logout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport bugsnag from '@bugsnag/js'\nimport bugsnagReact from '@bugsnag/plugin-react'\n\nimport { Provider } from 'react-redux'\nimport store from './redux'\nimport App from './App'\n\nif (process.env.NODE_ENV === 'production') {\n  const bugsnagClient = bugsnag('a9970532605e3f85a84598092888a776')\n  bugsnagClient.use(bugsnagReact, React)\n  const ErrorBoundary = bugsnagClient.getPlugin('react')\n\n  ReactDOM.render(\n    <ErrorBoundary>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ErrorBoundary>,\n    document.querySelector('#root')\n  )\n} else {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.querySelector('#root')\n  )\n}\n"],"sourceRoot":""}